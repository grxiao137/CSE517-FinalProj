[
    {
        "question": "what position did pat connaughton, author of did you see that thing? that\u2019s sidat-singh! the syracuse walking dream!, play?",
        "qid": "4300563004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Did you see that thing? That\u2019s Sidat-Singh! The Syracuse Walking Dream!": "m.09rl290",
            "Pat Connaughton": "m.0j50kb6"
        },
        "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.09rl290)) (JOIN basketball.basketball_position.players m.0j50kb6)))",
        "actions": [
            "get_relations(m.09rl290)",
            "get_neighbors(m.09rl290,media_common.quotation.author)",
            "get_relations(#0)",
            "get_neighbors(#0,basketball.basketball_player.position_s)",
            "get_relations(m.0j50kb6)",
            "get_neighbors(m.0j50kb6,basketball.basketball_player.position_s)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ch8k4",
                "entity_name": "Guard"
            }
        ]
    },
    {
        "question": "name the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 5000?",
        "qid": "4300861012000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "5000": "m.0h27q91"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.0h27q91))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.0h27q91)",
            "get_neighbors(m.0h27q91,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "what are the common symptoms of fip and some disease caused by old age?",
        "qid": "246000102_graphquestions",
        "source": "graphquestions",
        "entities": {
            "fip": "m.06_1k9",
            "Old age": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "what are the characteristics of feline infectious peritonitis and old diseases?",
        "qid": "246000201_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Feline infectious peritonitis": "m.06_1k9",
            "old": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "how many mac models used motorola 68040 processors?",
        "qid": "3205922013000_grailqa",
        "source": "grailqa",
        "entities": {
            "mac": "m.0zd6",
            "Motorola 68040": "m.05397"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.05397))))",
        "actions": [
            "get_relations(m.0zd6)",
            "get_neighbors(m.0zd6,computer.computer.includes_models)",
            "get_relations(m.05397)",
            "get_neighbors(m.05397,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many games of electronic arts are released in the united states?",
        "qid": "444000402_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "united states": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "ab\u016b ray\u1e25\u0101n al-b\u012br\u016bn\u012b works in what department of university",
        "qid": "4301362010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ab\u016b Ray\u1e25\u0101n al-B\u012br\u016bn\u012b": "m.01ny93",
            "university": "m.0j_sncb"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.01ny93)) (JOIN (R education.university.departments) m.0j_sncb)))",
        "actions": [
            "get_relations(m.01ny93)",
            "get_neighbors(m.01ny93,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.0j_sncb)",
            "get_neighbors(m.0j_sncb,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dl5_c_",
                "entity_name": "University of Florida Department of History"
            }
        ]
    },
    {
        "question": "what rocket function is supported by saturn v as well as another rocket made by chrysler llc?",
        "qid": "242000202_graphquestions",
        "source": "graphquestions",
        "entities": {
            "chrysler llc": "m.01_bp",
            "Saturn V": "m.07932"
        },
        "s_expression": "(AND spaceflight.rocket_function (AND (JOIN spaceflight.rocket_function.rockets_supporting_this_function (JOIN (R spaceflight.rocket_manufacturer.rockets_manufactured) m.01_bp)) (JOIN (R spaceflight.rocket.rocket_function) m.07932)))",
        "actions": [
            "get_relations(m.01_bp)",
            "get_neighbors(m.01_bp,spaceflight.rocket_manufacturer.rockets_manufactured)",
            "get_relations(#0)",
            "get_neighbors(#0,spaceflight.rocket.rocket_function)",
            "get_relations(m.07932)",
            "get_neighbors(m.07932,spaceflight.rocket.rocket_function)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cspd",
                "entity_name": "Low Earth orbit"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rkwz",
                "entity_name": "Launch vehicle"
            }
        ]
    },
    {
        "question": "identify the tropical cyclones that are in the same category with hurricane marie and also affected eastern north america.",
        "qid": "4300198000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hurricane Marie": "m.011q1wmr",
            "Eastern North America": "m.01xs1j8"
        },
        "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.011q1wmr)) (JOIN meteorology.tropical_cyclone.affected_areas m.01xs1j8)))",
        "actions": [
            "get_relations(m.011q1wmr)",
            "get_neighbors(m.011q1wmr,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_relations(m.01xs1j8)",
            "get_neighbors(m.01xs1j8,meteorology.cyclone_affected_area.cyclones)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nnlb",
                "entity_name": "Hurricane Katrina"
            }
        ]
    },
    {
        "question": "find the camera storage type that is supported by olympus fe-130 and the digital camera with iso setting of 2000.",
        "qid": "4302372004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Olympus FE-130": "m.03q2k5k",
            "2000": "m.04l497s"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04l497s)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2k5k)))",
        "actions": [
            "get_relations(m.04l497s)",
            "get_neighbors(m.04l497s,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.03q2k5k)",
            "get_neighbors(m.03q2k5k,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zmtt",
                "entity_name": "xD-Picture Card"
            }
        ]
    },
    {
        "question": "which martial art has the same category as silat and has internal?",
        "qid": "4301064012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Silat": "m.03hfzm1",
            "Internal": "m.02_yl6z"
        },
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.03hfzm1)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z)))",
        "actions": [
            "get_relations(m.03hfzm1)",
            "get_neighbors(m.03hfzm1,martial_arts.martial_art.category)",
            "get_relations(#0)",
            "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
            "get_relations(m.02_yl6z)",
            "get_neighbors(m.02_yl6z,martial_arts.martial_art_category.martial_arts)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k4r",
                "entity_name": "Tai chi"
            }
        ]
    },
    {
        "question": "how many electronic arts games are available for purchase in the united states of america?",
        "qid": "444000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "United States of America": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "list all quotations from nikodemos that are addressed to whom \u201cequality must be maintained, if it is promised.\u201d was addressed to.",
        "qid": "4302343002000_grailqa",
        "source": "grailqa",
        "entities": {
            "nikodemos": "m.0cpg05_",
            "\u201cEquality must be maintained, if it is promised.\u201d": "m.0cvbnm3"
        },
        "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0cpg05_)) (JOIN media_common.quotation_addressee.quotations m.0cvbnm3)))",
        "actions": [
            "get_relations(m.0cpg05_)",
            "get_neighbors(m.0cpg05_,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.addressee)",
            "get_relations(m.0cvbnm3)",
            "get_neighbors(m.0cvbnm3,media_common.quotation.addressee)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg042",
                "entity_name": "Charon"
            }
        ]
    },
    {
        "question": "in abrahamic faith, who is the founding figure of feast of assumption?",
        "qid": "4302278015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Feast of Assumption": "m.0_mrbts",
            "abrahamic faith": "m.0f_h6"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0_mrbts) (JOIN religion.religion.is_part_of m.0f_h6))))",
        "actions": [
            "get_relations(m.0_mrbts)",
            "get_neighbors(m.0_mrbts,time.holiday.featured_in_religions)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            }
        ]
    },
    {
        "question": "what is the number of religious texts that include both buddhists and buddhism texts?",
        "qid": "3206221006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Buddhism": "m.092bf5",
            "buddhists": "m.01c2mz"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.092bf5) (JOIN (R religion.religion.texts) m.01c2mz))))",
        "actions": [
            "get_relations(m.092bf5)",
            "get_neighbors(m.092bf5,religion.religion.texts)",
            "get_relations(m.01c2mz)",
            "get_neighbors(m.01c2mz,religion.religion.texts)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what type of viewfinder is uses a unknown sensor and uses a jpeg (exif 2.2) format?",
        "qid": "4302274012000_grailqa",
        "source": "grailqa",
        "entities": {
            "JPEG (EXIF 2.2)": "m.03q44xr",
            "Unknown": "m.01xrf_0"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.03q44xr) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.01xrf_0))))",
        "actions": [
            "get_relations(m.03q44xr)",
            "get_neighbors(m.03q44xr,digicams.camera_compressed_format.cameras)",
            "get_relations(m.01xrf_0)",
            "get_neighbors(m.01xrf_0,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg6z",
                "entity_name": "TTL"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg1f",
                "entity_name": "Optical"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0220vpb",
                "entity_name": "Electronic"
            }
        ]
    },
    {
        "question": "which song is the longest song of handel: messiah (dublin version, 1742) ?",
        "qid": "4301467006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Handel: Messiah (Dublin Version, 1742)": "m.03xxf2z"
        },
        "s_expression": "(ARGMAX (AND music.recording (JOIN (R music.release.track) (JOIN (R music.album.releases) m.03xxf2z))) music.recording.length)",
        "actions": [
            "get_relations(m.03xxf2z)",
            "get_neighbors(m.03xxf2z,music.album.releases)",
            "get_relations(#0)",
            "get_neighbors(#0,music.release.track)",
            "get_attributes(#1)",
            "argmax(#1,music.recording.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.017nbgl",
                "entity_name": "The Messiah, Part 3 (Nos. 45-53): Aria, the Trumpet Shall Sound"
            }
        ]
    },
    {
        "question": "which is the longest release track of recordings that baeho \"bobby\" shin has written?",
        "qid": "4300020012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Baeho \"Bobby\" Shin": "m.012cr5h8"
        },
        "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.012cr5h8))) music.release_track.length)",
        "actions": [
            "get_relations(m.012cr5h8)",
            "get_neighbors(m.012cr5h8,music.engineer.tracks_engineered)",
            "get_relations(#0)",
            "get_neighbors(#0,music.recording.tracks)",
            "get_attributes(#1)",
            "argmax(#1,music.release_track.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.012c1xs6",
                "entity_name": "Bliss"
            }
        ]
    },
    {
        "question": "Name the last time the team with the mascot named Miles won the super bowl.?",
        "qid": "WebQTest-969_7621d2b69f15f44aba9e557f4af9764c_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "Miles": "m.027l54x"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.027l54x)) (JOIN time.event.instance_of_recurring_event m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.027l54x)",
            "get_neighbors(m.027l54x,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,time.recurring_event.instances)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.076y0",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXXIII"
            }
        ]
    },
    {
        "question": "what is the subject of the quote what is faith but a kind of betting or speculation after all? it should be, i bet that my redeemer liveth. which was spoken quoted by the angel of remembrance?",
        "qid": "4300443013000_grailqa",
        "source": "grailqa",
        "entities": {
            "What is faith but a kind of betting or speculation after all? It should be, I bet that my Redeemer liveth.": "m.048g4sk",
            "Angel of Remembrance": "m.0h3grm9"
        },
        "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048g4sk)))",
        "actions": [
            "get_relations(m.0h3grm9)",
            "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.subjects)",
            "get_relations(m.048g4sk)",
            "get_neighbors(m.048g4sk,media_common.quotation.subjects)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zq2",
                "entity_name": "Faith"
            }
        ]
    },
    {
        "question": "the nissan cefiro and the model with predecesser renault is included in what class of automobiles?",
        "qid": "4301079014000_grailqa",
        "source": "grailqa",
        "entities": {
            "renault": "m.032b7p",
            "Nissan Cefiro": "m.03vynb"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.032b7p)) (JOIN automotive.automotive_class.examples m.03vynb)))",
        "actions": [
            "get_relations(m.032b7p)",
            "get_neighbors(m.032b7p,automotive.model.predecessor)",
            "get_relations(#0)",
            "get_neighbors(#0,automotive.model.automotive_class)",
            "get_relations(m.03vynb)",
            "get_neighbors(m.03vynb,automotive.model.automotive_class)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.016gvg",
                "entity_name": "Station Wagon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021mp2",
                "entity_name": "Sedan"
            }
        ]
    },
    {
        "question": "What city do a majority of the people who live  in the location that contains Gebel Elba reside?",
        "qid": "WebQTrn-3037_8b3815ec57389b13892dd5abb108cc4e_cwq",
        "source": "cwq",
        "entities": {
            "Gebel Elba": "m.026cy73"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.location.partially_contains m.026cy73)) topic_server.population_number)",
        "actions": [
            "get_relations(m.026cy73)",
            "get_neighbors(m.026cy73,location.location.partially_containedby)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "The artist who had a concert tour named I'm Your Baby Tonight World Tour died from what drugs?",
        "qid": "WebQTrn-2600_498797c759f6119ac48af1f70b11e2c1_cwq",
        "source": "cwq",
        "entities": {
            "Drug overdose": "m.01tf_6",
            "I'm Your Baby Tonight World Tour": "m.047bc2r"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.047bc2r)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
        "actions": [
            "get_relations(m.047bc2r)",
            "get_neighbors(m.047bc2r,music.concert_tour.artist)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.01tf_6)",
            "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02nx6jb",
                "answer_type": "Entity",
                "entity_name": "Cocaine overdose"
            }
        ]
    },
    {
        "question": "What is the predominant language of the region where \"Into the Arms of Strangers: Stories of the Kindertransport\" was located?",
        "qid": "WebQTrn-1215_20ae9a3ac5a1d4d40671f15de04edb15_cwq",
        "source": "cwq",
        "entities": {
            "Into the Arms of Strangers: Stories of the Kindertransport": "m.0bd1d4"
        },
        "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN film.film_location.featured_in_films m.0bd1d4)))",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,language.human_language.main_country)",
            "get_relations(m.0bd1d4)",
            "get_neighbors(m.0bd1d4,film.film.featured_film_locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,location.country.languages_spoken)"
        ],
        "answer": [
            {
                "answer_argument": "m.05p2d",
                "answer_type": "Entity",
                "entity_name": "Old English"
            }
        ]
    },
    {
        "question": "which artwork on wood was painted in the era of juan de arellano?",
        "qid": "4301655015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Juan de Arellano": "m.026z4yz",
            "Wood": "m.083vt"
        },
        "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.026z4yz)) (JOIN visual_art.artwork.support m.083vt)))",
        "actions": [
            "get_relations(m.026z4yz)",
            "get_neighbors(m.026z4yz,visual_art.visual_artist.associated_periods_or_movements)",
            "get_relations(#0)",
            "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
            "get_relations(m.083vt)",
            "get_neighbors(m.083vt,visual_art.visual_art_support.artworks)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bfng5d",
                "entity_name": "The Flayed Ox"
            }
        ]
    },
    {
        "question": "name the camera storage type supported by konica minolta dimage g600 and a digital camera with an iso setting of 64.",
        "qid": "4302372010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Konica Minolta DiMAGE G600": "m.03q2r5h",
            "64": "m.04l497_"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04l497_)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2r5h)))",
        "actions": [
            "get_relations(m.04l497_)",
            "get_neighbors(m.04l497_,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.03q2r5h)",
            "get_neighbors(m.03q2r5h,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            }
        ]
    },
    {
        "question": "what is the number of infectious diseases that are transmitted by the deer tick?",
        "qid": "4303160014000_grailqa",
        "source": "grailqa",
        "entities": {
            "deer tick": "m.02qmvh1"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.02qmvh1)))))",
        "actions": [
            "get_relations(m.02qmvh1)",
            "get_neighbors(m.02qmvh1,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "133"
            }
        ]
    },
    {
        "question": "what crumbly textured cheese is made from the products of goat and cows?",
        "qid": "4301155008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Goat": "m.03fwl",
            "cows": "m.01xq0k1",
            "Crumbly": "m.02wlqk0"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02wlqk0))))",
        "actions": [
            "get_relations(m.03fwl)",
            "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
            "get_relations(m.01xq0k1)",
            "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
            "get_relations(m.02wlqk0)",
            "get_neighbors(m.02wlqk0,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cl7d5",
                "entity_name": "Castelmagno cheese"
            }
        ]
    },
    {
        "question": "national endowment for the humanities owns what amount of in development websites?",
        "qid": "3206340000000_grailqa",
        "source": "grailqa",
        "entities": {
            "In Development": "m.02j7jcv",
            "National Endowment for the Humanities": "m.036mh3"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02j7jcv) (JOIN (R internet.website_owner.websites_owned) m.036mh3))))",
        "actions": [
            "get_relations(m.02j7jcv)",
            "get_neighbors(m.02j7jcv,internet.website_status.sites)",
            "get_relations(m.036mh3)",
            "get_neighbors(m.036mh3,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "Who was the vice president when the person who said \"I destroy my enemy when I make him my friend\" died?",
        "qid": "WebQTrn-1777_524b7e7fa855202f18ffd7e8c6bdb6c6_cwq",
        "source": "cwq",
        "entities": {
            "\"I destroy my enemy when I make him my friend\"": "m.048cz_5"
        },
        "s_expression": "(ARGMAX (JOIN (R government.us_president.vice_president) (JOIN people.person.quotations m.048cz_5)) government.us_vice_president.vice_president_number)",
        "actions": [
            "get_relations(m.048cz_5)",
            "get_neighbors(m.048cz_5,media_common.quotation.author)",
            "get_relations(#0)",
            "get_neighbors(#0,government.us_president.vice_president)",
            "get_attributes(#1)",
            "argmax(#1,government.us_vice_president.vice_president_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.0rmg",
                "answer_type": "Entity",
                "entity_name": "Andrew Johnson"
            }
        ]
    },
    {
        "question": "which artwork on canvases was created in the era of tillmans?",
        "qid": "4301655009000_grailqa",
        "source": "grailqa",
        "entities": {
            "tillmans": "m.01bl47",
            "canvases": "m.0jmpt"
        },
        "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.01bl47)) (JOIN visual_art.artwork.support m.0jmpt)))",
        "actions": [
            "get_relations(m.01bl47)",
            "get_neighbors(m.01bl47,visual_art.visual_artist.associated_periods_or_movements)",
            "get_relations(#0)",
            "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
            "get_relations(m.0jmpt)",
            "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stx3",
                "entity_name": "Golden Meadows"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv01",
                "entity_name": "Renewal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stx0",
                "entity_name": "Silhouette"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051st_p",
                "entity_name": "Moody Blues"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv8w",
                "entity_name": "Exile"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stxd",
                "entity_name": "Rapture"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svk0",
                "entity_name": "Tribute to Innes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv07",
                "entity_name": "Deja Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv8s",
                "entity_name": "Too Close For Comfort"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cg_bdg",
                "entity_name": "New York #2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv94",
                "entity_name": "Elders II"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svjy",
                "entity_name": "Crescendo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svk6",
                "entity_name": "Sultry"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stwr",
                "entity_name": "Truce"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cg_9z5",
                "entity_name": "New York"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stwv",
                "entity_name": "Matter of Time"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svkh",
                "entity_name": "Harmony Triptych"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svjr",
                "entity_name": "Horizon VI"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv91",
                "entity_name": "Moment In Time"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stxh",
                "entity_name": "Between Heaven and Earth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stwn",
                "entity_name": "Trinity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qbcgg",
                "entity_name": "Head (I)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv8p",
                "entity_name": "Amber Fields"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svjv",
                "entity_name": "Tree's IX"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stx9",
                "entity_name": "Insight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svk9",
                "entity_name": "Common Ground"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051st_w",
                "entity_name": "Last Stand"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svk3",
                "entity_name": "Tree's Company"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stx6",
                "entity_name": "White Trees On Blue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051st_s",
                "entity_name": "Reunion"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv0b",
                "entity_name": "Alchemy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svkd",
                "entity_name": "Sacred Ground"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv97",
                "entity_name": "Tempered Spirits"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv8h",
                "entity_name": "Unity"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv8l",
                "entity_name": "Black Trees on Red"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv8z",
                "entity_name": "Standing Room Only"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv04",
                "entity_name": "Entourage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sv0f",
                "entity_name": "The Congregation"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051stwy",
                "entity_name": "Second Glance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051st_z",
                "entity_name": "Six of One"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051sshw",
                "entity_name": "Room With A View"
            }
        ]
    },
    {
        "question": "which operas was the most recently performed?",
        "qid": "4303240004000_grailqa",
        "source": "grailqa",
        "entities": {
            "operas": "m.05lls"
        },
        "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.05lls))) music.composition.date_of_first_performance)",
        "actions": [
            "get_relations(m.05lls)",
            "get_neighbors(m.05lls,music.compositional_form.subforms)",
            "get_relations(#0)",
            "get_neighbors(#0,music.compositional_form.compositions)",
            "get_attributes(#1)",
            "argmax(#1,music.composition.date_of_first_performance)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d56c",
                "entity_name": "Die Walk\u00fcre"
            }
        ]
    },
    {
        "question": "what is the political ideology that the national unity front and the queensland state election, 1977 follow?",
        "qid": "4302370004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Queensland state election, 1977": "m.025_983",
            "National Unity Front": "m.0cc4np"
        },
        "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.025_983)) (JOIN (R government.political_party.ideology) m.0cc4np)))",
        "actions": [
            "get_relations(m.025_983)",
            "get_neighbors(m.025_983,government.parliamentary_election.government_formed_by)",
            "get_relations(#0)",
            "get_neighbors(#0,government.political_party.ideology)",
            "get_relations(m.0cc4np)",
            "get_neighbors(m.0cc4np,government.political_party.ideology)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yqp",
                "entity_name": "Conservatism"
            }
        ]
    },
    {
        "question": "resurrection high school and the publisher of cairn magazine fall under which category of schools?",
        "qid": "4301751001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Cairn Magazine": "m.010pldkg",
            "Resurrection High School": "m.02r89nh"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.010pldkg)) (JOIN (R education.educational_institution.school_type) m.02r89nh)))",
        "actions": [
            "get_relations(m.010pldkg)",
            "get_neighbors(m.010pldkg,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.02r89nh)",
            "get_neighbors(m.02r89nh,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rs41",
                "entity_name": "Private school"
            }
        ]
    },
    {
        "question": "When is the most recent time the sports team whose fight song is \"Meet the Mets\" won the World Series?",
        "qid": "WebQTest-1556_e4e4fb403bd2ceb5f9d9414dd63e7b64_cwq",
        "source": "cwq",
        "entities": {
            "Meet the Mets": "m.0bqwsw"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.0bqwsw)) time.event.end_date)",
        "actions": [
            "get_relations(m.0bqwsw)",
            "get_neighbors(m.0bqwsw,sports.fight_song.sports_team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q9lc",
                "answer_type": "Entity",
                "entity_name": "1986 World Series"
            }
        ]
    },
    {
        "question": "what is the programming language influenced by muf and the program language paradigm used by moo?",
        "qid": "4300798002000_grailqa",
        "source": "grailqa",
        "entities": {
            "MOO": "m.0521z",
            "MUF": "m.02m_jv"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0521z) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.02m_jv))))",
        "actions": [
            "get_relations(m.0521z)",
            "get_neighbors(m.0521z,computer.programming_language.language_paradigms)",
            "get_relations(m.02m_jv)",
            "get_neighbors(m.02m_jv,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gkc5",
                "entity_name": "Prototype-based programming"
            }
        ]
    },
    {
        "question": "what programming language paradigm is followed by programming languages such as angelscript and derivatives of prolog?",
        "qid": "4300417003000_grailqa",
        "source": "grailqa",
        "entities": {
            "AngelScript": "m.0vsgr58",
            "Prolog": "m.05vpz"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.05vpz)) (JOIN (R computer.programming_language.language_paradigms) m.0vsgr58)))",
        "actions": [
            "get_relations(m.05vpz)",
            "get_neighbors(m.05vpz,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.0vsgr58)",
            "get_neighbors(m.0vsgr58,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            }
        ]
    },
    {
        "question": "Which year did the team coached by Byron Scott first win a championship?",
        "qid": "WebQTrn-2411_d5ca01950a8247452ff5fd1eeff977f4_cwq",
        "source": "cwq",
        "entities": {
            "Byron Scott": "m.05jdzr"
        },
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.05jdzr)) time.event.start_date)",
        "actions": [
            "get_relations(m.05jdzr)",
            "get_neighbors(m.05jdzr,basketball.basketball_coach.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmin(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0ct81k",
                "answer_type": "Entity",
                "entity_name": "1949 BAA Finals"
            }
        ]
    },
    {
        "question": "When did the team with Crazy crab as their mascot win the world series?",
        "qid": "WebQTrn-810_e3d40457273785e46c5b71732713a5f4_cwq",
        "source": "cwq",
        "entities": {
            "Crazy Crab": "m.02q_hzh"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.02q_hzh)) time.event.end_date)",
        "actions": [
            "get_relations(m.02q_hzh)",
            "get_neighbors(m.02q_hzh,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0117q3yz"
            }
        ]
    },
    {
        "question": "how many contents about tv were produced by the producer of on the media?",
        "qid": "4303008015000_grailqa",
        "source": "grailqa",
        "entities": {
            "TV": "m.03bty3x",
            "On The Media": "m.03d53lc"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.03bty3x) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.03d53lc)))))",
        "actions": [
            "get_relations(m.03bty3x)",
            "get_neighbors(m.03bty3x,broadcast.genre.content)",
            "get_relations(m.03d53lc)",
            "get_neighbors(m.03d53lc,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "what's the smallest casino owned by the bellagio casino owner?",
        "qid": "496000002_graphquestions",
        "source": "graphquestions",
        "entities": {
            "bellagio casino": "m.033bxs"
        },
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "actions": [
            "get_relations(m.033bxs)",
            "get_neighbors(m.033bxs,base.casinos.casino.owner)",
            "get_relations(#0)",
            "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
            "get_attributes(#1)",
            "argmin(#1,base.casinos.casino.rooms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "question": "for those casinos owned by the same guy as bellagio casino, which one has the least rooms?",
        "qid": "496000102_graphquestions",
        "source": "graphquestions",
        "entities": {
            "bellagio casino": "m.033bxs"
        },
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "actions": [
            "get_relations(m.033bxs)",
            "get_neighbors(m.033bxs,base.casinos.casino.owner)",
            "get_relations(#0)",
            "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
            "get_attributes(#1)",
            "argmin(#1,base.casinos.casino.rooms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "question": "electronic arts has how many games found in the united states?",
        "qid": "444000002_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "united states": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "hailing from the same place as 1st louisiana native guard, which military units took part in the battle of gettysburg?",
        "qid": "250000000_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Battle of Gettysburg": "m.01jnm",
            "1st Louisiana Native Guard": "m.0hr6dl9"
        },
        "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
        "actions": [
            "get_relations(m.0hr6dl9)",
            "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
            "get_relations(#0)",
            "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
            "get_relations(m.01jnm)",
            "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gjww9",
                "entity_name": "10th Louisiana Infantry"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j2l684",
                "entity_name": "15th Louisiana Infantry Regiment"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j2l66_",
                "entity_name": "14th Louisiana Infantry Regiment"
            }
        ]
    },
    {
        "question": "a camera with a bayer and iso setting of 4000 has what type of sensor type?",
        "qid": "4300861018000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "4000": "m.0h27q8z"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.0h27q8z))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.0h27q8z)",
            "get_neighbors(m.0h27q8z,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "What stadium does the champion of the 1931 World Series Championship play at?",
        "qid": "WebQTrn-2444_8fb3f377318c9e61f47779b2c188167b_cwq",
        "source": "cwq",
        "entities": {
            "1931 World Series": "m.04tfzf"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.04tfzf)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.04tfzf)",
            "get_neighbors(m.04tfzf,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "which fictional character lives in lemurian windows into any place or time of law & order?",
        "qid": "4300742014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lemurian windows into any place or time": "m.0cbrvwy",
            "Law & Order": "m.0hz_w6w"
        },
        "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0cbrvwy) (JOIN (R fictional_universe.fictional_universe.locations) m.0hz_w6w))))",
        "actions": [
            "get_relations(m.0cbrvwy)",
            "get_neighbors(m.0cbrvwy,fictional_universe.type_of_fictional_setting.settings)",
            "get_relations(m.0hz_w6w)",
            "get_neighbors(m.0hz_w6w,fictional_universe.fictional_universe.locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0262164",
                "entity_name": "Sheldon Hawkes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d5g",
                "entity_name": "Bruce Wayne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08070t",
                "entity_name": "Peter Clemenza"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gbv76r",
                "entity_name": "Stevie Nichols"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h7y2f",
                "entity_name": "Claire Bennet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1217c9h2",
                "entity_name": "Emma Coolidge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0b19n",
                "entity_name": "Cime"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.122qmg44",
                "entity_name": "Daphne Millbrook"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025t7qs",
                "entity_name": "Mac Taylor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gghrw2",
                "entity_name": "Kaito Nakamura"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h28lx9",
                "entity_name": "Joss Carter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h2c7kt",
                "entity_name": "John Reese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09npt5t",
                "entity_name": "Dana Barrett"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cmdvzt",
                "entity_name": "Jo Danville"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012bzfhl",
                "entity_name": "Jo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010lcfrc",
                "entity_name": "Richie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gghrt7",
                "entity_name": "Ishi Nakamura"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121764rk",
                "entity_name": "null"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qszr5",
                "entity_name": "Adam Ross"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gbv5h0",
                "entity_name": "Mason Greyback"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pn5g9",
                "entity_name": "Sid Hammerback"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.122161km",
                "entity_name": "null"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0285h49",
                "entity_name": "Donald Flack, Jr."
            }
        ]
    },
    {
        "question": "What clay animation movie was directed by Ron Howard?",
        "qid": "WebQTest-323_89b51a451adec20d7f73c07f7fec7cee_cwq",
        "source": "cwq",
        "entities": {
            "Ron Howard": "m.0g2lq",
            "Clay animation": "m.02fcct"
        },
        "s_expression": "(AND (JOIN (R film.director.film) m.0g2lq) (JOIN film.film.genre (JOIN media_common.media_genre.child_genres m.02fcct)))",
        "actions": [
            "get_relations(m.0g2lq)",
            "get_neighbors(m.0g2lq,film.director.film)",
            "get_relations(m.02fcct)",
            "get_neighbors(m.02fcct,media_common.media_genre.parent_genre)",
            "get_relations(#1)",
            "get_neighbors(#1,film.film_genre.films_in_this_genre)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01hw5kk",
                "answer_type": "Entity",
                "entity_name": "Willow"
            }
        ]
    },
    {
        "question": "what is the name of the longest release track of recordings written by lolly grodner?",
        "qid": "4300020013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lolly Grodner": "m.0_j3_hm"
        },
        "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.0_j3_hm))) music.release_track.length)",
        "actions": [
            "get_relations(m.0_j3_hm)",
            "get_neighbors(m.0_j3_hm,music.engineer.tracks_engineered)",
            "get_relations(#0)",
            "get_neighbors(#0,music.recording.tracks)",
            "get_attributes(#1)",
            "argmax(#1,music.release_track.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mkg969",
                "entity_name": "I Would Have Waited Forever"
            }
        ]
    },
    {
        "question": "which character who has the ability of soul destruction had an item that was eventually destroyed by askelon of meridian?",
        "qid": "4302209005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Askelon of Meridian": "m.0bxtt5p",
            "soul destruction": "m.0c1rylz"
        },
        "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxtt5p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c1rylz)))",
        "actions": [
            "get_relations(m.0bxtt5p)",
            "get_neighbors(m.0bxtt5p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
            "get_relations(#0)",
            "get_neighbors(#0,fictional_universe.fictional_object.owner)",
            "get_relations(m.0c1rylz)",
            "get_neighbors(m.0c1rylz,fictional_universe.character_powers.characters_with_this_ability)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0b19n",
                "entity_name": "Cime"
            }
        ]
    },
    {
        "question": "What attractions can a visitor see if they are visiting the place where the film Eden Court was located?",
        "qid": "WebQTrn-825_498677b7af0b61e338f886059e90f2d7_cwq",
        "source": "cwq",
        "entities": {
            "Eden Court": "m.0cr696l"
        },
        "s_expression": "(JOIN (R travel.travel_destination.tourist_attractions) (AND (JOIN (R location.location.containedby) common.topic) (JOIN film.film_location.featured_in_films m.0cr696l)))",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,location.location.containedby)",
            "get_relations(m.0cr696l)",
            "get_neighbors(m.0cr696l,film.film.featured_film_locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,travel.travel_destination.tourist_attractions)"
        ],
        "answer": [
            {
                "answer_argument": "m.01dlzc",
                "answer_type": "Entity",
                "entity_name": "Adler Planetarium"
            },
            {
                "answer_argument": "m.021czc",
                "answer_type": "Entity",
                "entity_name": "Field Museum of Natural History"
            },
            {
                "answer_argument": "m.025v4fb",
                "answer_type": "Entity",
                "entity_name": "Lincoln Park Zoo"
            },
            {
                "answer_argument": "m.027hqc_",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago"
            },
            {
                "answer_argument": "m.02jw0z",
                "answer_type": "Entity",
                "entity_name": "Shedd Aquarium"
            },
            {
                "answer_argument": "m.02rvwrv",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago Building"
            },
            {
                "answer_argument": "m.05zv09",
                "answer_type": "Entity",
                "entity_name": "Chicago Cultural Center"
            },
            {
                "answer_argument": "m.06_7k",
                "answer_type": "Entity",
                "entity_name": "Willis Tower"
            },
            {
                "answer_argument": "m.0b0sh",
                "answer_type": "Entity",
                "entity_name": "Wrigley Field"
            },
            {
                "answer_argument": "m.0b28z",
                "answer_type": "Entity",
                "entity_name": "John Hancock Center"
            },
            {
                "answer_argument": "m.0bl8mx",
                "answer_type": "Entity",
                "entity_name": "DuSable Museum of African American History"
            },
            {
                "answer_argument": "m.0c7ln",
                "answer_type": "Entity",
                "entity_name": "Navy Pier"
            },
            {
                "answer_argument": "m.0d9wz",
                "answer_type": "Entity",
                "entity_name": "Museum of Science and Industry"
            },
            {
                "answer_argument": "m.0g_8d0",
                "answer_type": "Entity",
                "entity_name": "Cadillac Palace Theatre"
            },
            {
                "answer_argument": "m.0w7m2x9",
                "answer_type": "Entity",
                "entity_name": "Muslim Community Center"
            }
        ]
    },
    {
        "question": "what was the most recently formed cyclone in the same category as tropical storm hanna?",
        "qid": "4303808016000_grailqa",
        "source": "grailqa",
        "entities": {
            "tropical storm hanna": "m.04jhm3w"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.04jhm3w))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.04jhm3w)",
            "get_neighbors(m.04jhm3w,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011v6mk8",
                "entity_name": "Typhoon Kalmaegi"
            }
        ]
    },
    {
        "question": "When was the last superbowl to inlucde the team that had Rise as thier mascot?",
        "qid": "WebQTest-595_5dd0eeca79ae03b7711252c032849eb2_cwq",
        "source": "cwq",
        "entities": {
            "superbowl": "m.06x5s",
            "Rise": "m.0nz45zc"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0nz45zc)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.0nz45zc)",
            "get_neighbors(m.0nz45zc,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVII"
            }
        ]
    },
    {
        "question": "which website that belongs to the category of lokl.com has web api of python?",
        "qid": "4300801007000_grailqa",
        "source": "grailqa",
        "entities": {
            "lokl.com": "m.05lq6cx",
            "Python": "m.05z1_"
        },
        "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.05lq6cx)) (JOIN internet.website.api m.05z1_)))",
        "actions": [
            "get_relations(m.05lq6cx)",
            "get_neighbors(m.05lq6cx,internet.website.category)",
            "get_relations(#0)",
            "get_neighbors(#0,internet.website_category.sites)",
            "get_relations(m.05z1_)",
            "get_neighbors(m.05z1_,internet.api.site)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gd48j",
                "entity_name": "StopFinder"
            }
        ]
    },
    {
        "question": "what is the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 125?",
        "qid": "4300861020000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "125": "m.0h28r84"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.0h28r84))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.0h28r84)",
            "get_neighbors(m.0h28r84,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "how many automotive classes are examples of dodge and peugeot 402?",
        "qid": "3206121003000_grailqa",
        "source": "grailqa",
        "entities": {
            "dodge": "m.09_7cw",
            "Peugeot 402": "m.03d20jy"
        },
        "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.09_7cw) (JOIN automotive.automotive_class.examples m.03d20jy))))",
        "actions": [
            "get_relations(m.09_7cw)",
            "get_neighbors(m.09_7cw,automotive.model.automotive_class)",
            "get_relations(m.03d20jy)",
            "get_neighbors(m.03d20jy,automotive.model.automotive_class)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "What's the home stadium of the team that won the 2014 AFC Championship Game?",
        "qid": "WebQTrn-2684_9635bb1f7252e813d1dfe70f82d62cad_cwq",
        "source": "cwq",
        "entities": {
            "2014 AFC Championship Game": "m.0_gtzbl"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.0_gtzbl)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.0_gtzbl)",
            "get_neighbors(m.0_gtzbl,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hxv8",
                "answer_type": "Entity",
                "entity_name": "Sports Authority Field at Mile High"
            }
        ]
    },
    {
        "question": "What German speaking country has an airport that serves Nijmegen?",
        "qid": "WebQTrn-1784_dfb6c97ac9bf2f0ac07f27dd80f9edc2_cwq",
        "source": "cwq",
        "entities": {
            "German": "m.04306rv",
            "Nijmegen": "m.05g2b"
        },
        "s_expression": "(AND (JOIN (R language.human_language.countries_spoken_in) m.04306rv) (JOIN location.location.contains (JOIN aviation.airport.serves m.05g2b)))",
        "actions": [
            "get_relations(m.04306rv)",
            "get_neighbors(m.04306rv,language.human_language.countries_spoken_in)",
            "get_relations(m.05g2b)",
            "get_neighbors(m.05g2b,location.location.nearby_airports)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.containedby)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0345h",
                "answer_type": "Entity",
                "entity_name": "Germany"
            }
        ]
    },
    {
        "question": "which type of symptoms does the feline infectious peritonitis and old diseases have in common?",
        "qid": "246000301_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Feline infectious peritonitis": "m.06_1k9",
            "old": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "what content does new york public radio and the producer of lost & found sound produce?",
        "qid": "4300832004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lost & Found Sound": "m.05v7hrt",
            "new york public radio": "m.01_3by"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.05v7hrt)) (JOIN broadcast.content.producer m.01_3by)))",
        "actions": [
            "get_relations(m.05v7hrt)",
            "get_neighbors(m.05v7hrt,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.01_3by)",
            "get_neighbors(m.01_3by,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05v8dc3",
                "entity_name": "The Sonic Memorial Project"
            }
        ]
    },
    {
        "question": "flornell spicy piece of halleston and akita are breeds that share what temperament?",
        "qid": "4300459007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Flornell Spicy Piece of Halleston": "m.0p997hh",
            "Akita": "m.0cqg0t"
        },
        "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0p997hh)) (JOIN (R biology.animal_breed.temperament) m.0cqg0t)))",
        "actions": [
            "get_relations(m.0p997hh)",
            "get_neighbors(m.0p997hh,biology.pedigreed_animal.breed)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.0cqg0t)",
            "get_neighbors(m.0cqg0t,biology.animal_breed.temperament)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kqp3v",
                "entity_name": "Friendly"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kqp3l",
                "entity_name": "Alert"
            }
        ]
    },
    {
        "question": "what cheese with a hard texture is sourced from cows and domestic sheep?",
        "qid": "4301155015000_grailqa",
        "source": "grailqa",
        "entities": {
            "domestic sheep": "m.07bgp",
            "cows": "m.01xq0k1",
            "hard": "m.02h892w"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02h892w))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.01xq0k1)",
            "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
            "get_relations(m.02h892w)",
            "get_neighbors(m.02h892w,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glzg",
                "entity_name": "Cabrales cheese"
            }
        ]
    },
    {
        "question": "where in massachussetts institute of technology does lee young-hee work?",
        "qid": "4301362014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lee Young-hee": "m.0z8dv3z",
            "massachussetts institute of technology": "m.04rwx"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0z8dv3z)) (JOIN (R education.university.departments) m.04rwx)))",
        "actions": [
            "get_relations(m.0z8dv3z)",
            "get_neighbors(m.0z8dv3z,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.04rwx)",
            "get_neighbors(m.04rwx,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fyy3y",
                "entity_name": "MIT Physics Department"
            }
        ]
    },
    {
        "question": "which music was released under the capital records label by the artist riptide (reprise)?",
        "qid": "4301990008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Riptide (Reprise)": "m.0nxqft",
            "capital records": "m.017l96"
        },
        "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0nxqft)) (JOIN music.release.label m.017l96)))",
        "actions": [
            "get_relations(m.0nxqft)",
            "get_neighbors(m.0nxqft,music.recording.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,music.producer.releases_produced)",
            "get_relations(m.017l96)",
            "get_neighbors(m.017l96,music.record_label.releases)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.039rty8",
                "entity_name": "Decade"
            }
        ]
    },
    {
        "question": "ops5 and otcl use programming language paradigm what is the other program language influenced by?",
        "qid": "4300798015000_grailqa",
        "source": "grailqa",
        "entities": {
            "OTcl": "m.02pp7t7",
            "OPS5": "m.02f1mc"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02pp7t7) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.02f1mc))))",
        "actions": [
            "get_relations(m.02pp7t7)",
            "get_neighbors(m.02pp7t7,computer.programming_language.language_paradigms)",
            "get_relations(m.02f1mc)",
            "get_neighbors(m.02f1mc,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            }
        ]
    },
    {
        "question": "what programming language paradigm is followed by programming languages such as livescript and derivatives of lisp?",
        "qid": "4300417006000_grailqa",
        "source": "grailqa",
        "entities": {
            "LiveScript": "m.0_l9rcz",
            "Lisp": "m.04kyw"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04kyw)) (JOIN (R computer.programming_language.language_paradigms) m.0_l9rcz)))",
        "actions": [
            "get_relations(m.04kyw)",
            "get_neighbors(m.04kyw,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.0_l9rcz)",
            "get_neighbors(m.0_l9rcz,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "when did the colts last win the superbowl",
        "qid": "WebQTrn-1771_webqsp",
        "source": "webqsp",
        "entities": {
            "colts": "m.03wnh",
            "superbowl": "m.06x5s"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.03wnh) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.03wnh)",
            "get_neighbors(m.03wnh,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04k5qm",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLI"
            }
        ]
    },
    {
        "question": "What year did the team with mascot named Lou Seal win the World Series?",
        "qid": "WebQTrn-810_c334509bb5e02cacae1ba2e80c176499_cwq",
        "source": "cwq",
        "entities": {
            "Lou Seal": "m.03_dwn"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.03_dwn)) time.event.end_date)",
        "actions": [
            "get_relations(m.03_dwn)",
            "get_neighbors(m.03_dwn,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0117q3yz"
            }
        ]
    },
    {
        "question": "who is the founding figure of guru purnima, and also sides with dharmic religions being their core religion?",
        "qid": "4302278009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Guru Purnima": "m.0436qg",
            "Dharmic religions": "m.04bhh1"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.0436qg) (JOIN religion.religion.is_part_of m.04bhh1))))",
        "actions": [
            "get_relations(m.0436qg)",
            "get_neighbors(m.0436qg,time.holiday.featured_in_religions)",
            "get_relations(m.04bhh1)",
            "get_neighbors(m.04bhh1,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.015k7",
                "entity_name": "Gautama Buddha"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.11bc14_6yq",
                "entity_name": "null"
            }
        ]
    },
    {
        "question": "which military units who fought in the battle of gettysburg come from the same place as 1st louisiana native guard?",
        "qid": "250000100_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Battle of Gettysburg": "m.01jnm",
            "1st Louisiana Native Guard": "m.0hr6dl9"
        },
        "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
        "actions": [
            "get_relations(m.0hr6dl9)",
            "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
            "get_relations(#0)",
            "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
            "get_relations(m.01jnm)",
            "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gjww9",
                "entity_name": "10th Louisiana Infantry"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j2l684",
                "entity_name": "15th Louisiana Infantry Regiment"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j2l66_",
                "entity_name": "14th Louisiana Infantry Regiment"
            }
        ]
    },
    {
        "question": "how many beer types are used in centennial and hersbrucker?",
        "qid": "3202749001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hersbrucker": "m.0115gwl7",
            "Centennial": "m.0115clqx"
        },
        "s_expression": "(COUNT (AND base.lightweight.beer_style (AND (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115gwl7) (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115clqx))))",
        "actions": [
            "get_relations(m.0115gwl7)",
            "get_neighbors(m.0115gwl7,base.lightweight.beer_hop.beer_styles_used_in)",
            "get_relations(m.0115clqx)",
            "get_neighbors(m.0115clqx,base.lightweight.beer_hop.beer_styles_used_in)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "how many camera iso capabilities are the iso setting used by pentax optio v10 and olympus fe-190?",
        "qid": "3205827007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Pentax Optio V10": "m.03q2kmb",
            "Olympus FE-190": "m.03q2ltp"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03q2kmb) (JOIN (R digicams.digital_camera.iso_setting) m.03q2ltp))))",
        "actions": [
            "get_relations(m.03q2kmb)",
            "get_neighbors(m.03q2kmb,digicams.digital_camera.iso_setting)",
            "get_relations(m.03q2ltp)",
            "get_neighbors(m.03q2ltp,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "in what countries is the version developed by arkedo studio and distributed through xbox live community games released?",
        "qid": "4301141007000_grailqa",
        "source": "grailqa",
        "entities": {
            "xbox live community games": "m.052582h",
            "Arkedo Studio": "m.052psry"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.052582h) (JOIN (R cvg.cvg_developer.game_versions_developed) m.052psry))))",
        "actions": [
            "get_relations(m.052582h)",
            "get_neighbors(m.052582h,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.052psry)",
            "get_neighbors(m.052psry,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.059g4",
                "entity_name": "North America"
            }
        ]
    },
    {
        "question": "What is the timezone in Pennsylvania near the Toronto Pearson International Airport?",
        "qid": "WebQTest-1574_5411ee5b895e479b24ac562f2ac9b3f3_cwq",
        "source": "cwq",
        "entities": {
            "Pennsylvania": "m.05tbn",
            "Toronto Pearson International Airport": "m.06k9l7"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.05tbn) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.06k9l7)))",
        "actions": [
            "get_relations(m.05tbn)",
            "get_neighbors(m.05tbn,location.location.time_zones)",
            "get_relations(m.06k9l7)",
            "get_neighbors(m.06k9l7,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ]
    },
    {
        "question": "which rocket function can be found on the saturn v as well as on another rocket made by chrysler group llc?",
        "qid": "242000100_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Chrysler Group LLC": "m.01_bp",
            "Saturn V": "m.07932"
        },
        "s_expression": "(AND spaceflight.rocket_function (AND (JOIN spaceflight.rocket_function.rockets_supporting_this_function (JOIN (R spaceflight.rocket_manufacturer.rockets_manufactured) m.01_bp)) (JOIN (R spaceflight.rocket.rocket_function) m.07932)))",
        "actions": [
            "get_relations(m.01_bp)",
            "get_neighbors(m.01_bp,spaceflight.rocket_manufacturer.rockets_manufactured)",
            "get_relations(#0)",
            "get_neighbors(#0,spaceflight.rocket.rocket_function)",
            "get_relations(m.07932)",
            "get_neighbors(m.07932,spaceflight.rocket.rocket_function)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cspd",
                "entity_name": "Low Earth orbit"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rkwz",
                "entity_name": "Launch vehicle"
            }
        ]
    },
    {
        "question": "the text at the core of c&ma and honored by prayer practitioners is what?",
        "qid": "4300898014000_grailqa",
        "source": "grailqa",
        "entities": {
            "c&ma": "m.03yvh5",
            "Prayer": "m.0687y"
        },
        "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.03yvh5) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0687y))))",
        "actions": [
            "get_relations(m.03yvh5)",
            "get_neighbors(m.03yvh5,religion.religion.texts)",
            "get_relations(m.0687y)",
            "get_neighbors(m.0687y,religion.religious_practice.practice_of)",
            "get_relations(#1)",
            "get_neighbors(#1,religion.religion.texts)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.015j7",
                "entity_name": "The Bible"
            }
        ]
    },
    {
        "question": "what website has a web api of word press and belongs to the category of big brother buddy?",
        "qid": "4300801002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Big Brother Buddy": "m.010pccfx",
            "word press": "m.02vtpl"
        },
        "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.010pccfx)) (JOIN internet.website.api m.02vtpl)))",
        "actions": [
            "get_relations(m.010pccfx)",
            "get_neighbors(m.010pccfx,internet.website.category)",
            "get_relations(#0)",
            "get_neighbors(#0,internet.website_category.sites)",
            "get_relations(m.02vtpl)",
            "get_neighbors(m.02vtpl,internet.api.site)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d3lsz",
                "entity_name": "The Carpetbagger Report"
            }
        ]
    },
    {
        "question": "what viewfinder does the camera with sensor from nikon corp. and a compression format of jpg use?",
        "qid": "4302274000000_grailqa",
        "source": "grailqa",
        "entities": {
            "jpg": "m.0220vh_",
            "nikon corp.": "m.03pmfw"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.0220vh_) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.03pmfw))))",
        "actions": [
            "get_relations(m.0220vh_)",
            "get_neighbors(m.0220vh_,digicams.camera_compressed_format.cameras)",
            "get_relations(m.03pmfw)",
            "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01jpdj",
                "entity_name": "Pentaprism"
            }
        ]
    },
    {
        "question": "what was the topic of the angel of remembrance's quote \"be ready always to give an answer to every man that asketh you a reason of the hope that is in you. -- peter 3:15\"?",
        "qid": "4300443004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Be ready always to give an answer to every man that asketh you a reason of the hope that is in you. -- Peter 3:15": "m.048fjp5",
            "Angel of Remembrance": "m.0h3grm9"
        },
        "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048fjp5)))",
        "actions": [
            "get_relations(m.0h3grm9)",
            "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.subjects)",
            "get_relations(m.048fjp5)",
            "get_neighbors(m.048fjp5,media_common.quotation.subjects)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zq2",
                "entity_name": "Faith"
            }
        ]
    },
    {
        "question": "what is the website that belongs to the category of pixiv and has a web api of developers.facebook.com?",
        "qid": "4300801009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Pixiv": "m.05mvphw",
            "Developers.facebook.com": "m.02k9b2h"
        },
        "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.05mvphw)) (JOIN internet.website.api m.02k9b2h)))",
        "actions": [
            "get_relations(m.05mvphw)",
            "get_neighbors(m.05mvphw,internet.website.category)",
            "get_relations(#0)",
            "get_neighbors(#0,internet.website_category.sites)",
            "get_relations(m.02k9b2h)",
            "get_neighbors(m.02k9b2h,internet.api.site)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02y1vz",
                "entity_name": "Facebook"
            }
        ]
    },
    {
        "question": "what programming language paradigm is used by moo and another programming language influenced by muf?",
        "qid": "4300798004000_grailqa",
        "source": "grailqa",
        "entities": {
            "MOO": "m.0521z",
            "MUF": "m.02m_jv"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0521z) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.02m_jv))))",
        "actions": [
            "get_relations(m.0521z)",
            "get_neighbors(m.0521z,computer.programming_language.language_paradigms)",
            "get_relations(m.02m_jv)",
            "get_neighbors(m.02m_jv,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gkc5",
                "entity_name": "Prototype-based programming"
            }
        ]
    },
    {
        "question": "In what year did the championship sports team who won the 2013 AFC Championship Game win the Super Bowl?",
        "qid": "WebQTrn-2136_c4e06c3a9e4b4f10bd1ae97f1742c198_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "2013 AFC Championship Game": "m.0_gtz8t"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0_gtz8t)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.0_gtz8t)",
            "get_neighbors(m.0_gtz8t,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVII"
            },
            {
                "answer_argument": "m.076yq",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXXV"
            }
        ]
    },
    {
        "question": "the core text of christanity that is honored by sealing practitioners is called what?",
        "qid": "4300898005000_grailqa",
        "source": "grailqa",
        "entities": {
            "christanity": "m.01lp8",
            "Sealing": "m.021skj"
        },
        "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.01lp8) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.021skj))))",
        "actions": [
            "get_relations(m.01lp8)",
            "get_neighbors(m.01lp8,religion.religion.texts)",
            "get_relations(m.021skj)",
            "get_neighbors(m.021skj,religion.religious_practice.practice_of)",
            "get_relations(#1)",
            "get_neighbors(#1,religion.religion.texts)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.015j7",
                "entity_name": "The Bible"
            }
        ]
    },
    {
        "question": "Where is the Busch Stadium arena?",
        "qid": "WebQTrn-2444_f3c80ccd9895d93f017cd1f0d310d378_cwq",
        "source": "cwq",
        "entities": {
            "Busch Stadium": "m.06k1v5"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.06k1v5)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.06k1v5)",
            "get_neighbors(m.06k1v5,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "Who was influenced by both Mencius and Baron De Montesquie?",
        "qid": "WebQTest-347_56e25b88328ff3fd76a73103618fd8b2_cwq",
        "source": "cwq",
        "entities": {
            "baron de montesquie": "m.0f9wd",
            "Mencius": "m.01b_fn"
        },
        "s_expression": "(AND (JOIN (R influence.influence_node.influenced) m.0f9wd) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01b_fn)))",
        "actions": [
            "get_relations(m.0f9wd)",
            "get_neighbors(m.0f9wd,influence.influence_node.influenced)",
            "get_relations(m.01b_fn)",
            "get_neighbors(m.01b_fn,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.039n1",
                "answer_type": "Entity",
                "entity_name": "Georg Wilhelm Friedrich Hegel"
            }
        ]
    },
    {
        "question": "ferry v. rauhfelsen of giralda and staffordshire bull terrier are breeds that share what temperament?",
        "qid": "4300459015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ferry v. Rauhfelsen of Giralda": "m.0hzpl8_",
            "Staffordshire Bull Terrier": "m.01kv93"
        },
        "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0hzpl8_)) (JOIN (R biology.animal_breed.temperament) m.01kv93)))",
        "actions": [
            "get_relations(m.0hzpl8_)",
            "get_neighbors(m.0hzpl8_,biology.pedigreed_animal.breed)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.01kv93)",
            "get_neighbors(m.01kv93,biology.animal_breed.temperament)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kpkld",
                "entity_name": "Intelligent"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt3z7",
                "entity_name": "Fearless"
            }
        ]
    },
    {
        "question": "which ski run served by supreme is rated by black diamond?",
        "qid": "4301587002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Black Diamond": "m.04kk2t2",
            "Supreme": "m.04kk20l"
        },
        "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04kk2t2)) (JOIN skiing.ski_run.served_by m.04kk20l)))",
        "actions": [
            "get_relations(m.04kk2t2)",
            "get_neighbors(m.04kk2t2,skiing.run_rating_symbol.run_rating)",
            "get_relations(#0)",
            "get_neighbors(#0,skiing.run_rating.ski_runs)",
            "get_relations(m.04kk20l)",
            "get_neighbors(m.04kk20l,skiing.ski_lift.runs_served)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmn6",
                "entity_name": "White Squaw Area"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmrq",
                "entity_name": "Hammer Head"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmpg",
                "entity_name": "Upper Sleepy Hollow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmqg",
                "entity_name": "No. 9 Express"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmpz",
                "entity_name": "Sidewinder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmmg",
                "entity_name": "Back Forty"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmmz",
                "entity_name": "Piney Glade"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmng",
                "entity_name": "Supreme Challenge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmnq",
                "entity_name": "So Long"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmnz",
                "entity_name": "Erosion Gullies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmpq",
                "entity_name": "Snowshoe Hill"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmqq",
                "entity_name": "Castle Apron"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmqz",
                "entity_name": "Spiney Chutes Area"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmr6",
                "entity_name": "Challenger"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmrg",
                "entity_name": "Sunset"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmrz",
                "entity_name": "Last Chance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knms6",
                "entity_name": "East Castle Area"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmsz",
                "entity_name": "Vicky's"
            }
        ]
    },
    {
        "question": "which character lives in the fictional lemuria of jojo's bizarre adventure?",
        "qid": "4300742012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lemuria": "m.0dc60vr",
            "JoJo's Bizarre Adventure": "m.0ndbcwn"
        },
        "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0dc60vr) (JOIN (R fictional_universe.fictional_universe.locations) m.0ndbcwn))))",
        "actions": [
            "get_relations(m.0dc60vr)",
            "get_neighbors(m.0dc60vr,fictional_universe.type_of_fictional_setting.settings)",
            "get_relations(m.0ndbcwn)",
            "get_neighbors(m.0ndbcwn,fictional_universe.fictional_universe.locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0262164",
                "entity_name": "Sheldon Hawkes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d5g",
                "entity_name": "Bruce Wayne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08070t",
                "entity_name": "Peter Clemenza"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gbv76r",
                "entity_name": "Stevie Nichols"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h7y2f",
                "entity_name": "Claire Bennet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1217c9h2",
                "entity_name": "Emma Coolidge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0b19n",
                "entity_name": "Cime"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.122qmg44",
                "entity_name": "Daphne Millbrook"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025t7qs",
                "entity_name": "Mac Taylor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gghrw2",
                "entity_name": "Kaito Nakamura"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h28lx9",
                "entity_name": "Joss Carter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h2c7kt",
                "entity_name": "John Reese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09npt5t",
                "entity_name": "Dana Barrett"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cmdvzt",
                "entity_name": "Jo Danville"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.012bzfhl",
                "entity_name": "Jo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010lcfrc",
                "entity_name": "Richie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gghrt7",
                "entity_name": "Ishi Nakamura"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121764rk",
                "entity_name": "null"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qszr5",
                "entity_name": "Adam Ross"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gbv5h0",
                "entity_name": "Mason Greyback"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pn5g9",
                "entity_name": "Sid Hammerback"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.122161km",
                "entity_name": "null"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0285h49",
                "entity_name": "Donald Flack, Jr."
            }
        ]
    },
    {
        "question": "In Virginia and locations near the Venice Municipal Airport, what time zone do they use?",
        "qid": "WebQTrn-3099_623b8370871966e2e8aeb301482e1558_cwq",
        "source": "cwq",
        "entities": {
            "Virginia": "m.07z1m",
            "Venice Municipal Airport": "m.026w2y7"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07z1m) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.026w2y7)))",
        "actions": [
            "get_relations(m.07z1m)",
            "get_neighbors(m.07z1m,location.location.time_zones)",
            "get_relations(m.026w2y7)",
            "get_neighbors(m.026w2y7,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ]
    },
    {
        "question": "a camera with a bayer and iso setting of 800 has what type of sensor type?",
        "qid": "4300861003000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "800": "m.01xrg58"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.01xrg58))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.01xrg58)",
            "get_neighbors(m.01xrg58,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            }
        ]
    },
    {
        "question": "which olympic event was contested officially in 1972 summer olympic games and other olympic games in antwerp, belgium?",
        "qid": "4300161003000_grailqa",
        "source": "grailqa",
        "entities": {
            "antwerp, belgium": "m.0fydw",
            "1972 summer olympic games": "m.0l98s"
        },
        "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0fydw)) (JOIN olympics.olympic_event.olympic_games_contested m.0l98s)))",
        "actions": [
            "get_relations(m.0fydw)",
            "get_neighbors(m.0fydw,olympics.olympic_host_city.olympics_hosted)",
            "get_relations(#0)",
            "get_neighbors(#0,olympics.olympic_games.events)",
            "get_relations(m.0l98s)",
            "get_neighbors(m.0l98s,olympics.olympic_games.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gnx9y",
                "entity_name": "Men's 300m Free Rifle, 3 Positions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cx",
                "entity_name": "Men's \u00c9p\u00e9e individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6sy",
                "entity_name": "Men's Weightlifting, Light Heavyweight 75-82.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2b3",
                "entity_name": "Women's Archery, individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2_w",
                "entity_name": "Men's Track cycling, Sprint individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cl",
                "entity_name": "Men's Shot put"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk326",
                "entity_name": "Men's 200m breaststroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pv",
                "entity_name": "Men's Javelin throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hx",
                "entity_name": "Men's 1500m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pc",
                "entity_name": "Men's Discus throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9lcn",
                "entity_name": "Women's 3 metre springboard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9ld0",
                "entity_name": "Men's 3 metre springboard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9ld6",
                "entity_name": "Women's 10 metre platform"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2c_",
                "entity_name": "Men's Gymnastics, individual all-round"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2cj",
                "entity_name": "Men's Long jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2f7",
                "entity_name": "Men's 50m pistol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2gh",
                "entity_name": "Eventing, individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hl",
                "entity_name": "Men's Athletics, 100m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2jp",
                "entity_name": "Men's Athletics, 5000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2lq",
                "entity_name": "Men's Foil individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2mz",
                "entity_name": "Men's Marathon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qm",
                "entity_name": "Men's Athletics, 400m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qs",
                "entity_name": "Men's 100m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2rd",
                "entity_name": "Men's Pole vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2tl",
                "entity_name": "Men's Athletics, 400m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2tx",
                "entity_name": "Women's 400m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2xq",
                "entity_name": "Men's Sabre individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2yb",
                "entity_name": "Jumping, individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2yh",
                "entity_name": "Men's Athletics, 200m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk300",
                "entity_name": "Men's Hammer throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30h",
                "entity_name": "Men's Athletics, 110m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30t",
                "entity_name": "Men's 400m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32_",
                "entity_name": "Men's Triple jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32p",
                "entity_name": "Men's High jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk35z",
                "entity_name": "Men's Modern pentathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39q",
                "entity_name": "Women's 100m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39w",
                "entity_name": "Men's Athletics, 10000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3b5",
                "entity_name": "Men's Athletics, 800m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3bh",
                "entity_name": "Men's 100m backstroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3d6",
                "entity_name": "Men's 50m rifle prone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3dj",
                "entity_name": "Men's Decathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3fm",
                "entity_name": "Men's 3000m steeplechase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3l9",
                "entity_name": "Men's Single sculls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3n5",
                "entity_name": "Men's Athletics, 1500m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6br",
                "entity_name": "Men's Weightlifting, Middleweight 67.5-75kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6rz",
                "entity_name": "Men's Weightlifting, Lightweight 60-67.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b6t4m",
                "entity_name": "Olympic trap"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0k1nqc0",
                "entity_name": "Individual Dressage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk38m",
                "entity_name": "Men's Archery, individual"
            }
        ]
    },
    {
        "question": "When was the last time the team that won the 1973 NBA Finals championship won a championship?",
        "qid": "WebQTrn-1406_920d8cef50c023e0a693d393bf609007_cwq",
        "source": "cwq",
        "entities": {
            "1973 NBA Finals": "m.0cs1kg"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0cs1kg)) time.event.start_date)",
        "actions": [
            "get_relations(m.0cs1kg)",
            "get_neighbors(m.0cs1kg,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0cs1kg",
                "answer_type": "Entity",
                "entity_name": "1973 NBA Finals"
            }
        ]
    },
    {
        "question": "the industry within which the international ladies garment workers union operates has what common parent industry that also is parent to the railway?",
        "qid": "4301917003000_grailqa",
        "source": "grailqa",
        "entities": {
            "international ladies garment workers union": "m.054w78",
            "railway": "m.06d_3"
        },
        "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.06d_3)))",
        "actions": [
            "get_relations(m.054w78)",
            "get_neighbors(m.054w78,business.trade_union.industry)",
            "get_relations(#0)",
            "get_neighbors(#0,business.industry.child_industry)",
            "get_relations(m.06d_3)",
            "get_neighbors(m.06d_3,business.industry.child_industry)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0126b6d7",
                "entity_name": "Ballyclare Limited"
            }
        ]
    },
    {
        "question": "what website, using really simple syndication as api, has the category of jovem nerd?",
        "qid": "4300801015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Jovem Nerd": "m.0ywgx93",
            "really simple syndication": "m.0n5tx"
        },
        "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.0ywgx93)) (JOIN internet.website.api m.0n5tx)))",
        "actions": [
            "get_relations(m.0ywgx93)",
            "get_neighbors(m.0ywgx93,internet.website.category)",
            "get_relations(#0)",
            "get_neighbors(#0,internet.website_category.sites)",
            "get_relations(m.0n5tx)",
            "get_neighbors(m.0n5tx,internet.api.site)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mzwd",
                "entity_name": "LiveJournal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kdzwd",
                "entity_name": "High level bits"
            }
        ]
    },
    {
        "question": "What film in the same genre as The True Story of The Three Little Pigs starred Adam Sandler?",
        "qid": "WebQTrn-1677_4c971bef32fb5777fb8b18ead5a702fe_cwq",
        "source": "cwq",
        "entities": {
            "Adam Sandler": "m.0pz91",
            "The True Story of the Three Little Pigs": "g.11b5lzm6b0"
        },
        "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN film.film_genre.films_in_this_genre g.11b5lzm6b0)))",
        "actions": [
            "get_relations(m.0pz91)",
            "get_neighbors(m.0pz91,film.producer.film)",
            "get_relations(g.11b5lzm6b0)",
            "get_neighbors(g.11b5lzm6b0,film.film.genre)",
            "get_relations(#1)",
            "get_neighbors(#1,film.film_genre.films_in_this_genre)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.010rdrd1"
            },
            {
                "answer_argument": "m.02m7tn"
            }
        ]
    },
    {
        "question": "When did the team with a mascot named Fred first win a trophy?",
        "qid": "WebQTrn-1018_707caa73f11b1e655a0f5f6b75082734_cwq",
        "source": "cwq",
        "entities": {
            "fred": "m.02nsyh9"
        },
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.02nsyh9)) time.event.end_date)",
        "actions": [
            "get_relations(m.02nsyh9)",
            "get_neighbors(m.02nsyh9,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmin(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04gk9y8",
                "answer_type": "Entity",
                "entity_name": "1976\u201377 FA Cup"
            }
        ]
    },
    {
        "question": "What was the earliest event that George W. Bush was sworn in at?",
        "qid": "WebQTrn-923_c0b877813c04f2a410d526fdd6acbaed_cwq",
        "source": "cwq",
        "entities": {
            "United States presidential inauguration": "m.03bxbl6",
            "George W. Bush": "m.09b6zr"
        },
        "s_expression": "(ARGMIN (AND (JOIN (R time.recurring_event.instances) m.03bxbl6) (JOIN base.inaugurations.inauguration.president m.09b6zr)) time.event.end_date)",
        "actions": [
            "get_relations(m.03bxbl6)",
            "get_neighbors(m.03bxbl6,time.recurring_event.instances)",
            "get_relations(m.09b6zr)",
            "get_neighbors(m.09b6zr,base.inaugurations.inauguration_speaker.inauguration)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmin(#2,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.05bryps",
                "answer_type": "Entity",
                "entity_name": "George W. Bush 2001 presidential inauguration"
            }
        ]
    },
    {
        "question": "In what stadium does the team who is owned by William DeWitt, Jr. play?",
        "qid": "WebQTrn-2444_e5059ff268415917df330817b9c8ef8c_cwq",
        "source": "cwq",
        "entities": {
            "William DeWitt, Jr.": "m.05qblx"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.professional_sports_team.owner_s m.05qblx)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.05qblx)",
            "get_neighbors(m.05qblx,sports.sports_team_owner.teams_owned)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "what digital camera sensor type has the color filter array type of bayer and iso settings of 8000?",
        "qid": "4300861013000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "8000": "m.0h27q94"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.0h27q94))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.0h27q94)",
            "get_neighbors(m.0h27q94,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "what is the programming language influenced by another language developed by international business machines corporation that was introduced first?",
        "qid": "4303199007000_grailqa",
        "source": "grailqa",
        "entities": {
            "international business machines corporation": "m.03sc8"
        },
        "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.03sc8))) computer.programming_language.introduced)",
        "actions": [
            "get_relations(m.03sc8)",
            "get_neighbors(m.03sc8,computer.programming_language_developer.programming_languages_developed)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.influenced)",
            "get_attributes(#1)",
            "argmin(#1,computer.programming_language.introduced)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_94",
                "entity_name": "Fortran"
            }
        ]
    },
    {
        "question": "the character that resides in the palaces of sacred band of stepsons is named what?",
        "qid": "4300742011000_grailqa",
        "source": "grailqa",
        "entities": {
            "palaces": "m.05zp8",
            "Sacred Band of Stepsons": "m.0b_wsry"
        },
        "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.05zp8) (JOIN (R fictional_universe.fictional_universe.locations) m.0b_wsry))))",
        "actions": [
            "get_relations(m.05zp8)",
            "get_neighbors(m.05zp8,fictional_universe.type_of_fictional_setting.settings)",
            "get_relations(m.0b_wsry)",
            "get_neighbors(m.0b_wsry,fictional_universe.fictional_universe.locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0b19n",
                "entity_name": "Cime"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ll9p",
                "entity_name": "Faun"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c1dhy_",
                "entity_name": "Faun, Shepherd of Sandia"
            }
        ]
    },
    {
        "question": "which programming language paradigm do livecode and another racket influenced programming language use?",
        "qid": "4300798001000_grailqa",
        "source": "grailqa",
        "entities": {
            "LiveCode": "m.0490j1",
            "Racket": "m.0974fb"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0490j1) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.0974fb))))",
        "actions": [
            "get_relations(m.0490j1)",
            "get_neighbors(m.0490j1,computer.programming_language.language_paradigms)",
            "get_relations(m.0974fb)",
            "get_neighbors(m.0974fb,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            }
        ]
    },
    {
        "question": "what number of automotive classes are examples of fiat 512 and renault vivasix?",
        "qid": "3206121002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Fiat 512": "m.03m6sdc",
            "Renault Vivasix": "m.04n599g"
        },
        "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.03m6sdc) (JOIN automotive.automotive_class.examples m.04n599g))))",
        "actions": [
            "get_relations(m.03m6sdc)",
            "get_neighbors(m.03m6sdc,automotive.model.automotive_class)",
            "get_relations(m.04n599g)",
            "get_neighbors(m.04n599g,automotive.model.automotive_class)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what website, using mjt as api, has the category of douban?",
        "qid": "4300801005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Douban": "m.04m_5wv",
            "mjt": "m.0220x4q"
        },
        "s_expression": "(AND internet.website (AND (JOIN (R internet.website_category.sites) (JOIN (R internet.website.category) m.04m_5wv)) (JOIN internet.website.api m.0220x4q)))",
        "actions": [
            "get_relations(m.04m_5wv)",
            "get_neighbors(m.04m_5wv,internet.website.category)",
            "get_relations(#0)",
            "get_neighbors(#0,internet.website_category.sites)",
            "get_relations(m.0220x4q)",
            "get_neighbors(m.0220x4q,internet.api.site)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.021ympy",
                "entity_name": "Freebase"
            }
        ]
    },
    {
        "question": "What are things to see in downtown Chicago with an image of the skyline?",
        "qid": "WebQTrn-825_20030c80de39b4c9d510ac6a48eaf840_cwq",
        "source": "cwq",
        "entities": {
            "Skyline of City of Chicago": "m.03sd6x6"
        },
        "s_expression": "(JOIN (R travel.travel_destination.tourist_attractions) (AND (JOIN (R location.location.containedby) common.topic) (JOIN common.topic.image m.03sd6x6)))",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,location.location.containedby)",
            "get_relations(m.03sd6x6)",
            "get_neighbors(m.03sd6x6,common.image.appears_in_topic_gallery)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,travel.travel_destination.tourist_attractions)"
        ],
        "answer": [
            {
                "answer_argument": "m.01dlzc",
                "answer_type": "Entity",
                "entity_name": "Adler Planetarium"
            },
            {
                "answer_argument": "m.021czc",
                "answer_type": "Entity",
                "entity_name": "Field Museum of Natural History"
            },
            {
                "answer_argument": "m.025v4fb",
                "answer_type": "Entity",
                "entity_name": "Lincoln Park Zoo"
            },
            {
                "answer_argument": "m.027hqc_",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago"
            },
            {
                "answer_argument": "m.02jw0z",
                "answer_type": "Entity",
                "entity_name": "Shedd Aquarium"
            },
            {
                "answer_argument": "m.02rvwrv",
                "answer_type": "Entity",
                "entity_name": "Art Institute of Chicago Building"
            },
            {
                "answer_argument": "m.05zv09",
                "answer_type": "Entity",
                "entity_name": "Chicago Cultural Center"
            },
            {
                "answer_argument": "m.06_7k",
                "answer_type": "Entity",
                "entity_name": "Willis Tower"
            },
            {
                "answer_argument": "m.0b0sh",
                "answer_type": "Entity",
                "entity_name": "Wrigley Field"
            },
            {
                "answer_argument": "m.0b28z",
                "answer_type": "Entity",
                "entity_name": "John Hancock Center"
            },
            {
                "answer_argument": "m.0bl8mx",
                "answer_type": "Entity",
                "entity_name": "DuSable Museum of African American History"
            },
            {
                "answer_argument": "m.0c7ln",
                "answer_type": "Entity",
                "entity_name": "Navy Pier"
            },
            {
                "answer_argument": "m.0d9wz",
                "answer_type": "Entity",
                "entity_name": "Museum of Science and Industry"
            },
            {
                "answer_argument": "m.0g_8d0",
                "answer_type": "Entity",
                "entity_name": "Cadillac Palace Theatre"
            },
            {
                "answer_argument": "m.0w7m2x9",
                "answer_type": "Entity",
                "entity_name": "Muslim Community Center"
            }
        ]
    },
    {
        "question": "what museums share a type with harris museum and chaffee art center?",
        "qid": "5400031014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Harris Museum": "m.03qzy4",
            "Chaffee Art Center": "m.04_jgm4"
        },
        "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.03qzy4) (JOIN architecture.type_of_museum.museums m.04_jgm4)))))",
        "actions": [
            "get_relations(m.03qzy4)",
            "get_neighbors(m.03qzy4,architecture.museum.type_of_museum)",
            "get_relations(m.04_jgm4)",
            "get_neighbors(m.04_jgm4,architecture.museum.type_of_museum)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,architecture.type_of_museum.museums)",
            "get_relations(#3)",
            "get_neighbors(#3,architecture.museum.type_of_museum)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gz",
                "entity_name": "Modern art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9td2",
                "entity_name": "National museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9jkk",
                "entity_name": "Architecture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgh_k",
                "entity_name": "History museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgjgh",
                "entity_name": "Natural history museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jvjpx6",
                "entity_name": "Antiquities museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026w5hv",
                "entity_name": "Contemporary art gallery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pn3n6",
                "entity_name": "Historic house museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0528d17",
                "entity_name": "Photography Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt8qr",
                "entity_name": "Culture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gt",
                "entity_name": "Archaeology museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059x_pp",
                "entity_name": "Archaeological Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvyw7",
                "entity_name": "Design museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027v0wz",
                "entity_name": "University museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059vqps",
                "entity_name": "Ancient Art Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9gbh",
                "entity_name": "Jewish museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j58y",
                "entity_name": "Science museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0w_y7rb",
                "entity_name": "Asian art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99t0",
                "entity_name": "Decorative art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djx8f",
                "entity_name": "Children's museum"
            }
        ]
    },
    {
        "question": "what is the number of apple macintosh computer models that use g4 processors?",
        "qid": "3205922012000_grailqa",
        "source": "grailqa",
        "entities": {
            "apple macintosh computer": "m.0zd6",
            "g4": "m.02kc2q"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.02kc2q))))",
        "actions": [
            "get_relations(m.0zd6)",
            "get_neighbors(m.0zd6,computer.computer.includes_models)",
            "get_relations(m.02kc2q)",
            "get_neighbors(m.02kc2q,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many different dog breeds from the ukraine have a similar temperament as aaustrian pinscher?",
        "qid": "4303460015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Austrian Pinscher": "m.026r9tr",
            "Ukraine": "m.07t21"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.07t21)) (JOIN (R biology.animal_breed.temperament) m.026r9tr))))",
        "actions": [
            "get_relations(m.07t21)",
            "get_neighbors(m.07t21,biology.breed_origin.breeds_originating_here)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.026r9tr)",
            "get_neighbors(m.026r9tr,biology.animal_breed.temperament)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "what is the number of canadian whiskey that blend corn whiskey with single malt whiskey?",
        "qid": "4302561001000_grailqa",
        "source": "grailqa",
        "entities": {
            "single malt whiskey": "m.01k5lq",
            "canadian whiskey": "m.0212n",
            "Corn whiskey": "m.01yr36"
        },
        "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01k5lq) (AND (JOIN distilled_spirits.blended_spirit.style m.0212n) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01yr36)))))",
        "actions": [
            "get_relations(m.01k5lq)",
            "get_neighbors(m.01k5lq,distilled_spirits.distilled_spirit_type.blends)",
            "get_relations(m.0212n)",
            "get_neighbors(m.0212n,distilled_spirits.blended_spirit_style.blends)",
            "get_relations(m.01yr36)",
            "get_neighbors(m.01yr36,distilled_spirits.distilled_spirit_type.blends)",
            "intersection(#1,#2)",
            "intersection(#0,#3)",
            "count(#4)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "When is the last time that the champion of the 1956 Peque\u00c3\u00b1a Copa del Mundo de Clubes win the champions league?",
        "qid": "WebQTrn-1606_d67df69c150ced0428b3bfedaa731cf9_cwq",
        "source": "cwq",
        "entities": {
            "UEFA Champions League Final": "m.05nblxt",
            "1956 peque\u00e3\u00b1a copa del mundo de clubes": "m.011q6011"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.011q6011)) (JOIN sports.sports_championship_event.championship m.05nblxt)) time.event.end_date)",
        "actions": [
            "get_relations(m.011q6011)",
            "get_neighbors(m.011q6011,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.05nblxt)",
            "get_neighbors(m.05nblxt,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0gytd9j",
                "answer_type": "Entity",
                "entity_name": "2014 UEFA Champions League Final"
            }
        ]
    },
    {
        "question": "what is the subject of the quote no woman marries for money; they are all clever enough, before marrying a millionaire, to fall in love with him first. which was spoken quoted by the angel of remembrance?",
        "qid": "4300443005000_grailqa",
        "source": "grailqa",
        "entities": {
            "No woman marries for money; they are all clever enough, before marrying a millionaire, to fall in love with him first.": "m.048kl1w",
            "Angel of Remembrance": "m.0h3grm9"
        },
        "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048kl1w)))",
        "actions": [
            "get_relations(m.0h3grm9)",
            "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.subjects)",
            "get_relations(m.048kl1w)",
            "get_neighbors(m.048kl1w,media_common.quotation.subjects)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.048knlz",
                "entity_name": "Love"
            }
        ]
    },
    {
        "question": "name all types of museums that are of the same type as independence seaport museum and erie maritime museum.",
        "qid": "5400031000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Independence Seaport Museum": "m.02qk116",
            "Erie Maritime Museum": "m.08x7h8"
        },
        "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.02qk116) (JOIN architecture.type_of_museum.museums m.08x7h8)))))",
        "actions": [
            "get_relations(m.02qk116)",
            "get_neighbors(m.02qk116,architecture.museum.type_of_museum)",
            "get_relations(m.08x7h8)",
            "get_neighbors(m.08x7h8,architecture.museum.type_of_museum)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,architecture.type_of_museum.museums)",
            "get_relations(#3)",
            "get_neighbors(#3,architecture.museum.type_of_museum)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j58y",
                "entity_name": "Science museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgh_k",
                "entity_name": "History museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t372",
                "entity_name": "Natural History Museum, London"
            }
        ]
    },
    {
        "question": "armand fizeau works in what department of aarhus university",
        "qid": "4301362015000_grailqa",
        "source": "grailqa",
        "entities": {
            "armand fizeau": "m.01fb5x",
            "Aarhus University": "m.023wzn"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.01fb5x)) (JOIN (R education.university.departments) m.023wzn)))",
        "actions": [
            "get_relations(m.01fb5x)",
            "get_neighbors(m.01fb5x,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.023wzn)",
            "get_neighbors(m.023wzn,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02w9m_8",
                "entity_name": "University of Aarhus Department of Physics and Astronomy"
            }
        ]
    },
    {
        "question": "what museums share a type with mus\u00e9e d'art contemporain de montr\u00e9al and arlington gallery?",
        "qid": "5400031009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Mus\u00e9e d'art contemporain de Montr\u00e9al": "m.027yjjq",
            "Arlington Gallery": "m.04_jgbb"
        },
        "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.027yjjq) (JOIN architecture.type_of_museum.museums m.04_jgbb)))))",
        "actions": [
            "get_relations(m.027yjjq)",
            "get_neighbors(m.027yjjq,architecture.museum.type_of_museum)",
            "get_relations(m.04_jgbb)",
            "get_neighbors(m.04_jgbb,architecture.museum.type_of_museum)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,architecture.type_of_museum.museums)",
            "get_relations(#3)",
            "get_neighbors(#3,architecture.museum.type_of_museum)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gz",
                "entity_name": "Modern art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9td2",
                "entity_name": "National museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9jkk",
                "entity_name": "Architecture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgh_k",
                "entity_name": "History museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgjgh",
                "entity_name": "Natural history museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jvjpx6",
                "entity_name": "Antiquities museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026w5hv",
                "entity_name": "Contemporary art gallery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pn3n6",
                "entity_name": "Historic house museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0528d17",
                "entity_name": "Photography Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt8qr",
                "entity_name": "Culture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gt",
                "entity_name": "Archaeology museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059x_pp",
                "entity_name": "Archaeological Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvyw7",
                "entity_name": "Design museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027v0wz",
                "entity_name": "University museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059vqps",
                "entity_name": "Ancient Art Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9gbh",
                "entity_name": "Jewish museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j58y",
                "entity_name": "Science museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0w_y7rb",
                "entity_name": "Asian art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99t0",
                "entity_name": "Decorative art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djx8f",
                "entity_name": "Children's museum"
            }
        ]
    },
    {
        "question": "Which kind of breast cancer did the artist who recorded \"Difficult Kind\" have?",
        "qid": "WebQTest-2014_78d2404dee473b11da8c52102974f4ef_cwq",
        "source": "cwq",
        "entities": {
            "Cancer": "m.0qcr0",
            "Difficult Kind": "m.0x3rwj"
        },
        "s_expression": "(AND (JOIN (R medicine.notable_person_with_medical_condition.condition) (JOIN music.featured_artist.recordings m.0x3rwj)) (JOIN medicine.disease.parent_disease m.0qcr0))",
        "actions": [
            "get_relations(m.0x3rwj)",
            "get_neighbors(m.0x3rwj,music.recording.featured_artists)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.notable_person_with_medical_condition.condition)",
            "get_relations(m.0qcr0)",
            "get_neighbors(m.0qcr0,medicine.disease.includes_diseases)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.03z_9l",
                "answer_type": "Entity",
                "entity_name": "Meningioma"
            }
        ]
    },
    {
        "question": "the culex tarsalis transmits how many infectious diseases?",
        "qid": "4303160007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Culex tarsalis": "m.0gfmf55"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.0gfmf55)))))",
        "actions": [
            "get_relations(m.0gfmf55)",
            "get_neighbors(m.0gfmf55,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "30"
            }
        ]
    },
    {
        "question": "the subject of the quote: gracefulness is to the body what understanding is to the mind. spoken by angel of remembrance is what?",
        "qid": "4300443010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Gracefulness is to the body what understanding is to the mind.": "m.048gk7g",
            "Angel of Remembrance": "m.0h3grm9"
        },
        "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048gk7g)))",
        "actions": [
            "get_relations(m.0h3grm9)",
            "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.subjects)",
            "get_relations(m.048gk7g)",
            "get_neighbors(m.048gk7g,media_common.quotation.subjects)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.048kqhn",
                "entity_name": "Grace"
            }
        ]
    },
    {
        "question": "what type of dish contains crawfish tails and is common in louisiana creole cuisine?",
        "qid": "4301356011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Crawfish tails": "m.07706lz",
            "Louisiana Creole cuisine": "m.016w_c"
        },
        "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.07706lz) (JOIN (R dining.cuisine.dishes) m.016w_c))))",
        "actions": [
            "get_relations(m.07706lz)",
            "get_neighbors(m.07706lz,food.ingredient.dishes)",
            "get_relations(m.016w_c)",
            "get_neighbors(m.016w_c,dining.cuisine.dishes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,food.dish.type_of_dish1)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z1m1x",
                "entity_name": "Soup"
            }
        ]
    },
    {
        "question": "When did the sports team playing out of Ed Smith Stadium arena win the World Series?",
        "qid": "WebQTest-1680_fe7307f6c664979a4a0b35113c50bc2c_cwq",
        "source": "cwq",
        "entities": {
            "Ed Smith Stadium": "m.066c0s"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.066c0s)) time.event.end_date)",
        "actions": [
            "get_relations(m.066c0s)",
            "get_neighbors(m.066c0s,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.046_p6",
                "answer_type": "Entity",
                "entity_name": "1983 World Series"
            }
        ]
    },
    {
        "question": "what category of schools does florida state university college of arts and sciences and the publisher of libertine magazine fall under?",
        "qid": "4301751010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Libertine Magazine": "m.05prrml",
            "Florida State University College of Arts and Sciences": "m.02vqczm"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.05prrml)) (JOIN (R education.educational_institution.school_type) m.02vqczm)))",
        "actions": [
            "get_relations(m.05prrml)",
            "get_neighbors(m.05prrml,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.02vqczm)",
            "get_neighbors(m.02vqczm,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jxkf",
                "entity_name": "Public university"
            }
        ]
    },
    {
        "question": "What standard time zone is used in Michigan and locations near the Tulsa Internationsal Airport?",
        "qid": "WebQTest-1264_72ce675be82a5655a30547169d8008e9_cwq",
        "source": "cwq",
        "entities": {
            "Michigan": "m.04rrx",
            "tulsa internationsal airport": "m.01qgx3"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.04rrx) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01qgx3)))",
        "actions": [
            "get_relations(m.04rrx)",
            "get_neighbors(m.04rrx,location.location.time_zones)",
            "get_relations(m.01qgx3)",
            "get_neighbors(m.01qgx3,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02fqwt",
                "answer_type": "Entity",
                "entity_name": "Central Time Zone"
            }
        ]
    },
    {
        "question": "When was the last time that The Hunt Family's football team won the superbowl?",
        "qid": "WebQTrn-3623_6ecacb498c6491bc693d0e8222182601_cwq",
        "source": "cwq",
        "entities": {
            "The Hunt Family": "m.010n_74d"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.010n_74d)) time.event.end_date)",
        "actions": [
            "get_relations(m.010n_74d)",
            "get_neighbors(m.010n_74d,sports.sports_team_owner.teams_owned)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.076mc",
                "answer_type": "Entity",
                "entity_name": "Super Bowl IV"
            }
        ]
    },
    {
        "question": "I'm what time zone are parts of Texas and the Strathmore (D.J. Murray) airport?",
        "qid": "WebQTest-1845_cab1228be4e8c16ee35a67b7ac63b264_cwq",
        "source": "cwq",
        "entities": {
            "Texas": "m.07b_l",
            "Strathmore (D.J. Murray) Airport": "m.09slsk"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
        "actions": [
            "get_relations(m.07b_l)",
            "get_neighbors(m.07b_l,location.location.time_zones)",
            "get_relations(m.09slsk)",
            "get_neighbors(m.09slsk,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hczc",
                "answer_type": "Entity",
                "entity_name": "Mountain Time Zone"
            }
        ]
    },
    {
        "question": "which was the most recently formed cyclone that is in the same category as tropical storm rachel?",
        "qid": "4303808000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tropical Storm Rachel": "m.0crbvqz"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0crbvqz))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.0crbvqz)",
            "get_neighbors(m.0crbvqz,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011jnng3",
                "entity_name": "Hurricane Iselle"
            }
        ]
    },
    {
        "question": "games developed by fromsoftware and distributed through physical media released where?",
        "qid": "4301141001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Physical media": "m.0663y78",
            "FromSoftware": "m.06zl7g"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06zl7g))))",
        "actions": [
            "get_relations(m.0663y78)",
            "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.06zl7g)",
            "get_neighbors(m.06zl7g,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_3d",
                "entity_name": "Japan"
            }
        ]
    },
    {
        "question": "what is the industry in which union operates and is the common parent industry of automobile industry?",
        "qid": "4301917009000_grailqa",
        "source": "grailqa",
        "entities": {
            "union": "m.054w78",
            "automobile industry": "m.015smg"
        },
        "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.015smg)))",
        "actions": [
            "get_relations(m.054w78)",
            "get_neighbors(m.054w78,business.trade_union.industry)",
            "get_relations(#0)",
            "get_neighbors(#0,business.industry.child_industry)",
            "get_relations(m.015smg)",
            "get_neighbors(m.015smg,business.industry.child_industry)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0126b6d7",
                "entity_name": "Ballyclare Limited"
            }
        ]
    },
    {
        "question": "which is the number of automotive classes which are examples of ford freestar and kia sedona?",
        "qid": "3206121012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ford Freestar": "m.0224xp",
            "kia sedona": "m.05pfy5"
        },
        "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.0224xp) (JOIN automotive.automotive_class.examples m.05pfy5))))",
        "actions": [
            "get_relations(m.0224xp)",
            "get_neighbors(m.0224xp,automotive.model.automotive_class)",
            "get_relations(m.05pfy5)",
            "get_neighbors(m.05pfy5,automotive.model.automotive_class)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "In which timezone is Texas, and near, Tulsa International Airport?",
        "qid": "WebQTrn-1563_72ce675be82a5655a30547169d8008e9_cwq",
        "source": "cwq",
        "entities": {
            "Texas": "m.07b_l",
            "Tulsa International Airport": "m.01qgx3"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01qgx3)))",
        "actions": [
            "get_relations(m.07b_l)",
            "get_neighbors(m.07b_l,location.location.time_zones)",
            "get_relations(m.01qgx3)",
            "get_neighbors(m.01qgx3,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02fqwt",
                "answer_type": "Entity",
                "entity_name": "Central Time Zone"
            }
        ]
    },
    {
        "question": "a camera with a bayer and iso setting of 200 has what type of sensor type?",
        "qid": "4300861007000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "200": "m.01xrf_p"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.01xrf_p))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.01xrf_p)",
            "get_neighbors(m.01xrf_p,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            }
        ]
    },
    {
        "question": "What was the last championship won by the team coached by Tom Thiboeau?",
        "qid": "WebQTrn-3707_d0d5f9f0ae25465e1efba1abf9a39089_cwq",
        "source": "cwq",
        "entities": {
            "tom thiboeau": "m.043jv80"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.043jv80)) time.event.start_date)",
        "actions": [
            "get_relations(m.043jv80)",
            "get_neighbors(m.043jv80,basketball.basketball_coach.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04zt01",
                "answer_type": "Entity",
                "entity_name": "1998 NBA Finals"
            }
        ]
    },
    {
        "question": "when is the last time the pittsburgh steelers won a superbowl",
        "qid": "WebQTest-1523_webqsp",
        "source": "webqsp",
        "entities": {
            "pittsburgh steelers": "m.05tfm",
            "Superbowl": "m.06x5s"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.05tfm) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.05tfm)",
            "get_neighbors(m.05tfm,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04n7r5",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLIII"
            }
        ]
    },
    {
        "question": "What is the home city of the champion of the 2010 World Series Championship?",
        "qid": "WebQTrn-52_1315945fdcb4fad1310ab7862120be0f_cwq",
        "source": "cwq",
        "entities": {
            "2010 World Series": "m.09gnk2r"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.09gnk2r)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.09gnk2r)",
            "get_neighbors(m.09gnk2r,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.01_gsg",
                "answer_type": "Entity",
                "entity_name": "AT&T Park"
            }
        ]
    },
    {
        "question": "in what countries is the version developed by calaris studios and distributed through wii ware released?",
        "qid": "4301141017000_grailqa",
        "source": "grailqa",
        "entities": {
            "wii ware": "m.03hfyj6",
            "Calaris Studios": "m.0fpnfkn"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.0fpnfkn))))",
        "actions": [
            "get_relations(m.03hfyj6)",
            "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.0fpnfkn)",
            "get_neighbors(m.0fpnfkn,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.075g54v",
                "entity_name": "Wii/DS NA"
            }
        ]
    },
    {
        "question": "how many spacecrafts did ball aerospace and technologies corp. and orbital sciences corporation manufacture?",
        "qid": "3201449009000_grailqa",
        "source": "grailqa",
        "entities": {
            "ball aerospace and technologies corp.": "m.02dxz4",
            "Orbital Sciences Corporation": "m.037jwk"
        },
        "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.02dxz4) (JOIN spaceflight.spacecraft.manufacturer m.037jwk))))",
        "actions": [
            "get_relations(m.02dxz4)",
            "get_neighbors(m.02dxz4,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
            "get_relations(m.037jwk)",
            "get_neighbors(m.037jwk,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many practices are there that practices eastern christians and protestantism?",
        "qid": "3204573004000_grailqa",
        "source": "grailqa",
        "entities": {
            "eastern christians": "m.0blk0",
            "Protestantism": "m.05sfs"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.0blk0) (JOIN (R religion.religion.practices) m.05sfs))))",
        "actions": [
            "get_relations(m.0blk0)",
            "get_neighbors(m.0blk0,religion.religion.practices)",
            "get_relations(m.05sfs)",
            "get_neighbors(m.05sfs,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "find which artwork on wood was created in the era of leonard de vinci.",
        "qid": "4301655012000_grailqa",
        "source": "grailqa",
        "entities": {
            "leonard de vinci": "m.04lg6",
            "Wood": "m.083vt"
        },
        "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.04lg6)) (JOIN visual_art.artwork.support m.083vt)))",
        "actions": [
            "get_relations(m.04lg6)",
            "get_neighbors(m.04lg6,visual_art.visual_artist.associated_periods_or_movements)",
            "get_relations(#0)",
            "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
            "get_relations(m.083vt)",
            "get_neighbors(m.083vt,visual_art.visual_art_support.artworks)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.08my3g",
                "entity_name": "Three Graces"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08r4bj",
                "entity_name": "Saint George and the Dragon"
            }
        ]
    },
    {
        "question": "When did the team that won Super Bowl XXX last win the Super Bowl?",
        "qid": "WebQTest-994_f051fbe657aaa023d74839c8e8029bef_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "Super Bowl XXX": "m.076wz"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.076wz)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.076wz)",
            "get_neighbors(m.076wz,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.076wz",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXX"
            }
        ]
    },
    {
        "question": "how many camera iso capabilities are the iso setting used by k10d and pentax k2000?",
        "qid": "3205827011000_grailqa",
        "source": "grailqa",
        "entities": {
            "k10d": "m.0gzt1g",
            "Pentax K2000": "m.04n1r2f"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.0gzt1g) (JOIN (R digicams.digital_camera.iso_setting) m.04n1r2f))))",
        "actions": [
            "get_relations(m.0gzt1g)",
            "get_neighbors(m.0gzt1g,digicams.digital_camera.iso_setting)",
            "get_relations(m.04n1r2f)",
            "get_neighbors(m.04n1r2f,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "6"
            }
        ]
    },
    {
        "question": "what social sciences discipline does mcclelland conduct research in?",
        "qid": "4302233000000_grailqa",
        "source": "grailqa",
        "entities": {
            "social sciences": "m.06n6p",
            "mcclelland": "m.018pq1"
        },
        "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.06n6p) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.018pq1))))",
        "actions": [
            "get_relations(m.06n6p)",
            "get_neighbors(m.06n6p,education.field_of_study.subdisciplines)",
            "get_relations(m.018pq1)",
            "get_neighbors(m.018pq1,education.academic.research_areas)",
            "get_relations(#1)",
            "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.046d3s",
                "entity_name": "Development studies"
            }
        ]
    },
    {
        "question": "Who did Bear Grylls influence who started Google?",
        "qid": "WebQTrn-2393_e803a55d6d2ab9abbcbd4e211c38b626_cwq",
        "source": "cwq",
        "entities": {
            "google": "m.0387r",
            "Bear Grylls": "m.06st6r"
        },
        "s_expression": "(AND (JOIN (R law.invention.inventor) m.0387r) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.06st6r)))",
        "actions": [
            "get_relations(m.0387r)",
            "get_neighbors(m.0387r,law.invention.inventor)",
            "get_relations(m.06st6r)",
            "get_neighbors(m.06st6r,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0gjpq",
                "answer_type": "Entity",
                "entity_name": "Larry Page"
            }
        ]
    },
    {
        "question": "What is the home field of the sports team whose mascot is named Fredbird?",
        "qid": "WebQTrn-2444_06d5101218b4299633a55b1f229e9b40_cwq",
        "source": "cwq",
        "entities": {
            "Fredbird": "m.03p0zx"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.team_mascot m.03p0zx)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.03p0zx)",
            "get_neighbors(m.03p0zx,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "which variable stars is the most distant?",
        "qid": "4303393002000_grailqa",
        "source": "grailqa",
        "entities": {
            "variable stars": "m.0gzxf"
        },
        "s_expression": "(ARGMAX (AND astronomy.celestial_object (JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategories) m.0gzxf))) astronomy.celestial_object.cosmological_distance)",
        "actions": [
            "get_relations(m.0gzxf)",
            "get_neighbors(m.0gzxf,astronomy.celestial_object_category.subcategories)",
            "get_relations(#0)",
            "get_neighbors(#0,astronomy.celestial_object_category.objects)",
            "get_attributes(#1)",
            "argmax(#1,astronomy.celestial_object.cosmological_distance)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l1js",
                "entity_name": "Proxima Centauri"
            }
        ]
    },
    {
        "question": "what is the number of programming language paradigms for euclid and bliss ?",
        "qid": "3205793006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Euclid": "m.03fbrg",
            "BLISS": "m.022l9v"
        },
        "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03fbrg) (JOIN computer.programming_language_paradigm.languages m.022l9v))))",
        "actions": [
            "get_relations(m.03fbrg)",
            "get_neighbors(m.03fbrg,computer.programming_language.language_paradigms)",
            "get_relations(m.022l9v)",
            "get_neighbors(m.022l9v,computer.programming_language.language_paradigms)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "When was the last time Jerry Jones' team win the Superbowl?",
        "qid": "WebQTrn-387_5e43a21c08076aabc07f1a6fd6ae6bb9_cwq",
        "source": "cwq",
        "entities": {
            "Jerry Jones": "m.016b9c"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (AND (JOIN (R sports.sports_championship_event.champion) common.topic) (JOIN sports.professional_sports_team.owner_s m.016b9c))) time.event.end_date)",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,sports.sports_championship_event.champion)",
            "get_relations(m.016b9c)",
            "get_neighbors(m.016b9c,sports.sports_team_owner.teams_owned)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,sports.sports_team.championships)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.076wz",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXX"
            }
        ]
    },
    {
        "question": "there are how many games published by electronic arts available in the us?",
        "qid": "444000501_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "us": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "jimi hendrix: an evolution of sound has how many exhibition subjects?",
        "qid": "4302933012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Jimi Hendrix: An Evolution of Sound": "m.07fxk21"
        },
        "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.07fxk21)))))",
        "actions": [
            "get_relations(m.07fxk21)",
            "get_neighbors(m.07fxk21,exhibitions.exhibition.exhibition_types)",
            "get_relations(#0)",
            "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
            "get_relations(#1)",
            "get_neighbors(#1,exhibitions.exhibition.subjects)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "27"
            }
        ]
    },
    {
        "question": "for the casinos owned by the same person as bellagio, which one is the smallest?",
        "qid": "496000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Bellagio": "m.033bxs"
        },
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "actions": [
            "get_relations(m.033bxs)",
            "get_neighbors(m.033bxs,base.casinos.casino.owner)",
            "get_relations(#0)",
            "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
            "get_attributes(#1)",
            "argmin(#1,base.casinos.casino.rooms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "question": "how many infectious diseases can a flea transmit?",
        "qid": "4303160000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Flea": "m.0k8by"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.0k8by)))))",
        "actions": [
            "get_relations(m.0k8by)",
            "get_neighbors(m.0k8by,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "103"
            }
        ]
    },
    {
        "question": "Name the year and championship first won by the team that play in Old Trafford, Greater Manchester?",
        "qid": "WebQTrn-1018_b87d6f4be9902915cf4ce73d259aa48c_cwq",
        "source": "cwq",
        "entities": {
            "Old Trafford, Greater Manchester": "m.07cd78"
        },
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.location m.07cd78)) time.event.end_date)",
        "actions": [
            "get_relations(m.07cd78)",
            "get_neighbors(m.07cd78,sports.sports_team_location.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmin(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04gk9y8",
                "answer_type": "Entity",
                "entity_name": "1976\u201377 FA Cup"
            }
        ]
    },
    {
        "question": "what is the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 1600?",
        "qid": "4300861006000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "1600": "m.01xrg51"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.01xrg51))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.01xrg51)",
            "get_neighbors(m.01xrg51,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            }
        ]
    },
    {
        "question": "what cheese with a crumbly texture is sourced from cows and goat?",
        "qid": "4301155014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Goat": "m.03fwl",
            "cows": "m.01xq0k1",
            "Crumbly": "m.02wlqk0"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.03fwl) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02wlqk0))))",
        "actions": [
            "get_relations(m.03fwl)",
            "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
            "get_relations(m.01xq0k1)",
            "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
            "get_relations(m.02wlqk0)",
            "get_neighbors(m.02wlqk0,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cl7d5",
                "entity_name": "Castelmagno cheese"
            }
        ]
    },
    {
        "question": "which military units participated in the gettysburg battle are from the same place as 1st louisiana native guard?",
        "qid": "250000401_graphquestions",
        "source": "graphquestions",
        "entities": {
            "gettysburg battle": "m.01jnm",
            "1st Louisiana Native Guard": "m.0hr6dl9"
        },
        "s_expression": "(AND base.americancivilwar.military_unit (AND (JOIN military.military_unit.place_of_origin (JOIN (R military.military_unit.place_of_origin) m.0hr6dl9)) (JOIN base.americancivilwar.military_unit.conflicts_participated_in m.01jnm)))",
        "actions": [
            "get_relations(m.0hr6dl9)",
            "get_neighbors(m.0hr6dl9,military.military_unit.place_of_origin)",
            "get_relations(#0)",
            "get_neighbors(#0,military.military_unit_place_of_origin.military_units)",
            "get_relations(m.01jnm)",
            "get_neighbors(m.01jnm,base.americancivilwar.battle.military_units_involved_in_this_conflict)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gjww9",
                "entity_name": "10th Louisiana Infantry"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j2l684",
                "entity_name": "15th Louisiana Infantry Regiment"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j2l66_",
                "entity_name": "14th Louisiana Infantry Regiment"
            }
        ]
    },
    {
        "question": "polytechnic university of catalonia employee johannes kepler works in what dept?",
        "qid": "4301362001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Johannes Kepler": "m.0403d",
            "Polytechnic University of Catalonia": "m.0h3xj"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0403d)) (JOIN (R education.university.departments) m.0h3xj)))",
        "actions": [
            "get_relations(m.0403d)",
            "get_neighbors(m.0403d,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.0h3xj)",
            "get_neighbors(m.0h3xj,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0121jr9_",
                "entity_name": "BarcelonaTech (UPC) School of Mathematics and Statistics"
            }
        ]
    },
    {
        "question": "What legal system is practiced in the birthplace of Emanuel Lasker within Australia?",
        "qid": "WebQTrn-3360_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Australia": "m.0chghy",
            "Emanuel Lasker": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.0chghy)",
            "get_neighbors(m.0chghy,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "which was the most recently formed cyclone in the same category as tropical storm hanna?",
        "qid": "4303808004000_grailqa",
        "source": "grailqa",
        "entities": {
            "tropical storm hanna": "m.04jhm3w"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.04jhm3w))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.04jhm3w)",
            "get_neighbors(m.04jhm3w,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011v6mk8",
                "entity_name": "Typhoon Kalmaegi"
            }
        ]
    },
    {
        "question": "Who was the vice president of the president who said \"Seriously, I do not think I fit for the presidency.\" ?",
        "qid": "WebQTrn-1777_87feb43d4b743e2f0172e00f50bfada2_cwq",
        "source": "cwq",
        "entities": {
            "Seriously, I do not think I fit for the presidency.": "m.048jc3k"
        },
        "s_expression": "(ARGMAX (JOIN (R government.us_president.vice_president) (JOIN people.person.quotations m.048jc3k)) government.us_vice_president.vice_president_number)",
        "actions": [
            "get_relations(m.048jc3k)",
            "get_neighbors(m.048jc3k,media_common.quotation.author)",
            "get_relations(#0)",
            "get_neighbors(#0,government.us_president.vice_president)",
            "get_attributes(#1)",
            "argmax(#1,government.us_vice_president.vice_president_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.0rmg",
                "answer_type": "Entity",
                "entity_name": "Andrew Johnson"
            }
        ]
    },
    {
        "question": "which programming language paradigm does php3 and java script follow?",
        "qid": "4300417007000_grailqa",
        "source": "grailqa",
        "entities": {
            "php3": "m.060kv",
            "java script": "m.02p97"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.02p97)) (JOIN (R computer.programming_language.language_paradigms) m.060kv)))",
        "actions": [
            "get_relations(m.02p97)",
            "get_neighbors(m.02p97,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.060kv)",
            "get_neighbors(m.060kv,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01c3bz",
                "entity_name": "Imperative programming"
            }
        ]
    },
    {
        "question": "what sonatas was most recently performed?",
        "qid": "4303240000000_grailqa",
        "source": "grailqa",
        "entities": {
            "sonatas": "m.0c0yr"
        },
        "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0c0yr))) music.composition.date_of_first_performance)",
        "actions": [
            "get_relations(m.0c0yr)",
            "get_neighbors(m.0c0yr,music.compositional_form.subforms)",
            "get_relations(#0)",
            "get_neighbors(#0,music.compositional_form.compositions)",
            "get_attributes(#1)",
            "argmax(#1,music.composition.date_of_first_performance)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0wfz80v",
                "entity_name": "Piano Sonata No. 1"
            }
        ]
    },
    {
        "question": "What government did Japan have and was the government in the place that Emanuel Laskar was born in.?",
        "qid": "WebQTrn-2482_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Japan": "m.03_3d",
            "emanuel laskar": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.03_3d)",
            "get_neighbors(m.03_3d,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "which most recently formed cyclone was of the same category as tropical storm rachel?",
        "qid": "4303808001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tropical Storm Rachel": "m.0crbvqz"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0crbvqz))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.0crbvqz)",
            "get_neighbors(m.0crbvqz,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011jnng3",
                "entity_name": "Hurricane Iselle"
            }
        ]
    },
    {
        "question": "what isos does the camera d1 support from nikkor?",
        "qid": "4304013008000_grailqa",
        "source": "grailqa",
        "entities": {
            "d1": "m.07mx9v",
            "Nikkor": "m.030s04"
        },
        "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.07mx9v) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.030s04))))",
        "actions": [
            "get_relations(m.07mx9v)",
            "get_neighbors(m.07mx9v,digicams.digital_camera.iso_setting)",
            "get_relations(m.030s04)",
            "get_neighbors(m.030s04,digicams.camera_sensor_manufacturer.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.iso_setting)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg58",
                "entity_name": "800"
            }
        ]
    },
    {
        "question": "In the region of Australia where Emanuel Lascar was born, what form of government ruled the land?",
        "qid": "WebQTest-1226_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Australia": "m.0chghy",
            "emanuel lascar": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.0chghy)",
            "get_neighbors(m.0chghy,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "what is the number of religious texts that include both jehovah's witness and oriental orthodox texts?",
        "qid": "3206221009000_grailqa",
        "source": "grailqa",
        "entities": {
            "oriental orthodox": "m.05pbd",
            "jehovah's witness": "m.0dtdq"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.05pbd) (JOIN (R religion.religion.texts) m.0dtdq))))",
        "actions": [
            "get_relations(m.05pbd)",
            "get_neighbors(m.05pbd,religion.religion.texts)",
            "get_relations(m.0dtdq)",
            "get_neighbors(m.0dtdq,religion.religion.texts)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "where can you get games developed by nintendo on virtual console?",
        "qid": "498000500_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Nintendo": "m.059wk",
            "Virtual Console": "m.07sg3j"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
        "actions": [
            "get_relations(m.059wk)",
            "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
            "get_relations(m.07sg3j)",
            "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02j9z",
                "entity_name": "Europe"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_3d",
                "entity_name": "Japan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059g4",
                "entity_name": "North America"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0chghy",
                "entity_name": "Australia"
            }
        ]
    },
    {
        "question": "where is the version developed by first star software and distributed through virtual console released?",
        "qid": "4301141025000_grailqa",
        "source": "grailqa",
        "entities": {
            "Virtual Console": "m.07sg3j",
            "First Star Software": "m.02pzfw"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pzfw))))",
        "actions": [
            "get_relations(m.07sg3j)",
            "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.02pzfw)",
            "get_neighbors(m.02pzfw,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09c7w0",
                "entity_name": "United States of America"
            }
        ]
    },
    {
        "question": "When did Sports Owner Tom Gores sports team last win the Championship?",
        "qid": "WebQTest-895_afa15f6b9dc58ac550f7e43be659229c_cwq",
        "source": "cwq",
        "entities": {
            "Tom Gores": "m.0dftcf"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0dftcf)) time.event.start_date)",
        "actions": [
            "get_relations(m.0dftcf)",
            "get_neighbors(m.0dftcf,sports.sports_team_owner.teams_owned)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.07p0zz",
                "answer_type": "Entity",
                "entity_name": "2004 NBA Finals"
            }
        ]
    },
    {
        "question": "how many other typefaces from microsoft are designed by the same person who designed verdana?",
        "qid": "491000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Verdana": "m.0h56_",
            "Microsoft": "m.04sv4"
        },
        "s_expression": "(COUNT (AND base.typefaces.typeface (AND (JOIN base.typefaces.typeface.typeface_creator (JOIN (R base.typefaces.typeface.typeface_creator) m.0h56_)) (JOIN base.typefaces.typeface.foundry m.04sv4))))",
        "actions": [
            "get_relations(m.0h56_)",
            "get_neighbors(m.0h56_,base.typefaces.typeface.typeface_creator)",
            "get_relations(#0)",
            "get_neighbors(#0,base.typefaces.typeface_creator.typefaces_created)",
            "get_relations(m.04sv4)",
            "get_neighbors(m.04sv4,base.typefaces.typeface_foundry.typefaces)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "What standard time zone is used in Michigan and locations near Venice Municipal Airport?",
        "qid": "WebQTest-1264_623b8370871966e2e8aeb301482e1558_cwq",
        "source": "cwq",
        "entities": {
            "Michigan": "m.04rrx",
            "Venice Municipal Airport": "m.026w2y7"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.04rrx) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.026w2y7)))",
        "actions": [
            "get_relations(m.04rrx)",
            "get_neighbors(m.04rrx,location.location.time_zones)",
            "get_relations(m.026w2y7)",
            "get_neighbors(m.026w2y7,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ]
    },
    {
        "question": "what concertos was performed most recently?",
        "qid": "4303240005000_grailqa",
        "source": "grailqa",
        "entities": {
            "concertos": "m.0c0y7"
        },
        "s_expression": "(ARGMAX (AND music.composition (JOIN music.composition.form (JOIN music.compositional_form.superforms m.0c0y7))) music.composition.date_of_first_performance)",
        "actions": [
            "get_relations(m.0c0y7)",
            "get_neighbors(m.0c0y7,music.compositional_form.subforms)",
            "get_relations(#0)",
            "get_neighbors(#0,music.compositional_form.compositions)",
            "get_attributes(#1)",
            "argmax(#1,music.composition.date_of_first_performance)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04j50hm",
                "entity_name": "Concerto for Piano and Orchestra no. 2"
            }
        ]
    },
    {
        "question": "the setting that is used by sony a100 and olympus stylus 1020 has how many camera iso capabilities?",
        "qid": "3205827004000_grailqa",
        "source": "grailqa",
        "entities": {
            "sony a100": "m.03hfz55",
            "Olympus Stylus 1020": "m.03q2p88"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03hfz55) (JOIN (R digicams.digital_camera.iso_setting) m.03q2p88))))",
        "actions": [
            "get_relations(m.03hfz55)",
            "get_neighbors(m.03hfz55,digicams.digital_camera.iso_setting)",
            "get_relations(m.03q2p88)",
            "get_neighbors(m.03q2p88,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "6"
            }
        ]
    },
    {
        "question": "what was the programming language first introduced by van rossum which was influenced by another language?",
        "qid": "4303199017000_grailqa",
        "source": "grailqa",
        "entities": {
            "van rossum": "m.01h05c"
        },
        "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.01h05c))) computer.programming_language.introduced)",
        "actions": [
            "get_relations(m.01h05c)",
            "get_neighbors(m.01h05c,computer.programming_language_developer.programming_languages_developed)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.influenced)",
            "get_attributes(#1)",
            "argmin(#1,computer.programming_language.introduced)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zrn",
                "entity_name": "Perl"
            }
        ]
    },
    {
        "question": "Where is the home stadium of the team who won the 1946 World Series championship?",
        "qid": "WebQTrn-2444_8f2cd432b509e5b8fe681bb55bca2767_cwq",
        "source": "cwq",
        "entities": {
            "1946 World Series": "m.04qhpf"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.04qhpf)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.04qhpf)",
            "get_neighbors(m.04qhpf,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06k1v5"
            }
        ]
    },
    {
        "question": "Which arena does the squad that claimed victory in the 1938 Stanley Cup Finals championship play its games in?",
        "qid": "WebQTest-1027_28503761a4f035cb28b9b60c4a6af408_cwq",
        "source": "cwq",
        "entities": {
            "1938 Stanley Cup Finals": "m.03c6qq8"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.03c6qq8)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.03c6qq8)",
            "get_neighbors(m.03c6qq8,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.02nshs",
                "answer_type": "Entity",
                "entity_name": "United Center"
            }
        ]
    },
    {
        "question": "drugs formulated from aluminum oxide/kaolin/barium cation/bromine/calcium cation/chimaphila umbellata/chlorine/ferric cation/hydrofluoric acid/lemna minor/nitric acid/lead/strychnine/comfrey root homeopathic preparation containing active ingredient serotonin have what dosage form?",
        "qid": "5400022013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Aluminum oxide/Kaolin/Barium cation/Bromine/Calcium cation/Chimaphila umbellata/Chlorine/Ferric cation/Hydrofluoric acid/Lemna minor/Nitric acid/Lead/Strychnine/Comfrey root homeopathic preparation": "m.0hqx2f4",
            "Serotonin": "m.073z8"
        },
        "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqx2f4)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.073z8))))",
        "actions": [
            "get_relations(m.0hqx2f4)",
            "get_neighbors(m.0hqx2f4,medicine.drug.marketed_formulations)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
            "get_relations(m.073z8)",
            "get_neighbors(m.073z8,medicine.drug_ingredient.active_moiety_of_formulation)",
            "get_relations(#2)",
            "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
            "intersection(#1,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04k94",
                "entity_name": "Liquid"
            }
        ]
    },
    {
        "question": "what track released and written by brian pugsley is the longest?",
        "qid": "4300020007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Brian Pugsley": "m.03d_z6z"
        },
        "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.03d_z6z))) music.release_track.length)",
        "actions": [
            "get_relations(m.03d_z6z)",
            "get_neighbors(m.03d_z6z,music.engineer.tracks_engineered)",
            "get_relations(#0)",
            "get_neighbors(#0,music.recording.tracks)",
            "get_attributes(#1)",
            "argmax(#1,music.release_track.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mv1yrl",
                "entity_name": "Mumma"
            }
        ]
    },
    {
        "question": "who is the founding figure of the religion featuredlag baomer, that is part of abrahamic faith?",
        "qid": "4302278012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Lag BaOmer": "m.05m6br",
            "abrahamic faith": "m.0f_h6"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.05m6br) (JOIN religion.religion.is_part_of m.0f_h6))))",
        "actions": [
            "get_relations(m.05m6br)",
            "get_neighbors(m.05m6br,time.holiday.featured_in_religions)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01b5wx",
                "entity_name": "Sarah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            }
        ]
    },
    {
        "question": "where in unc charlotte college of computing and informatics does yuji matsumoto work?",
        "qid": "4301362004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Yuji Matsumoto": "m.0zrnb4z",
            "UNC Charlotte College of Computing and Informatics": "m.0hpdwzy"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0zrnb4z)) (JOIN (R education.university.departments) m.0hpdwzy)))",
        "actions": [
            "get_relations(m.0zrnb4z)",
            "get_neighbors(m.0zrnb4z,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.0hpdwzy)",
            "get_neighbors(m.0hpdwzy,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hz79b9",
                "entity_name": "UNC Charlotte Department of Computer Science"
            }
        ]
    },
    {
        "question": "which type of symptoms does the fip and old age diseases have in common?",
        "qid": "246000302_graphquestions",
        "source": "graphquestions",
        "entities": {
            "fip": "m.06_1k9",
            "Old age": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "Which timezone currently contains both Nevada and locations near the San Francisco International Airport?",
        "qid": "WebQTrn-2382_18a4999497ccd2fae27570283a228147_cwq",
        "source": "cwq",
        "entities": {
            "Nevada": "m.059_c",
            "San Francisco International Airport": "m.01l4xk"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.059_c) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01l4xk)))",
        "actions": [
            "get_relations(m.059_c)",
            "get_neighbors(m.059_c,location.location.time_zones)",
            "get_relations(m.01l4xk)",
            "get_neighbors(m.01l4xk,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02lcqs",
                "answer_type": "Entity",
                "entity_name": "Pacific Time Zone"
            }
        ]
    },
    {
        "question": "what is the attitude of the first dog and the german shepherds?",
        "qid": "4300459012000_grailqa",
        "source": "grailqa",
        "entities": {
            "first dog": "m.05t073s",
            "german shepherds": "m.0km5c"
        },
        "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.05t073s)) (JOIN (R biology.animal_breed.temperament) m.0km5c)))",
        "actions": [
            "get_relations(m.05t073s)",
            "get_neighbors(m.05t073s,biology.pedigreed_animal.breed)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.0km5c)",
            "get_neighbors(m.0km5c,biology.animal_breed.temperament)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kqpjd",
                "entity_name": "Obedient"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kpkld",
                "entity_name": "Intelligent"
            }
        ]
    },
    {
        "question": "The team that won the 1973 NBA Finals Championship last won the Championship in what year?",
        "qid": "WebQTest-998_920d8cef50c023e0a693d393bf609007_cwq",
        "source": "cwq",
        "entities": {
            "1973 NBA Finals": "m.0cs1kg"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0cs1kg)) time.event.start_date)",
        "actions": [
            "get_relations(m.0cs1kg)",
            "get_neighbors(m.0cs1kg,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0cs1kg"
            }
        ]
    },
    {
        "question": "there are how many games published by electronic arts available in the united states?",
        "qid": "444000502_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "united states": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "how many amusement parks do tokyo disneyland and disneyland park have?",
        "qid": "3206299008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Disneyland Park": "m.04cj6k",
            "Tokyo Disneyland": "m.044z1n"
        },
        "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.04cj6k) (JOIN amusement_parks.amusement_park_area.parks m.044z1n))))",
        "actions": [
            "get_relations(m.04cj6k)",
            "get_neighbors(m.04cj6k,amusement_parks.park.areas)",
            "get_relations(m.044z1n)",
            "get_neighbors(m.044z1n,amusement_parks.park.areas)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "what subject does the quote in love, as in gluttony, pleasure is a matter of the utmost precision. as spoken by the angel of remembrance refer to?",
        "qid": "4300443015000_grailqa",
        "source": "grailqa",
        "entities": {
            "In love, as in gluttony, pleasure is a matter of the utmost precision.": "m.048j2cm",
            "Angel of Remembrance": "m.0h3grm9"
        },
        "s_expression": "(AND media_common.quotation_subject (AND (JOIN (R media_common.quotation.subjects) (JOIN media_common.quotation.spoken_by_character m.0h3grm9)) (JOIN (R media_common.quotation.subjects) m.048j2cm)))",
        "actions": [
            "get_relations(m.0h3grm9)",
            "get_neighbors(m.0h3grm9,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.subjects)",
            "get_relations(m.048j2cm)",
            "get_neighbors(m.048j2cm,media_common.quotation.subjects)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.048knlz",
                "entity_name": "Love"
            }
        ]
    },
    {
        "question": "what martial art has the same category as kuk sool won and has grappling?",
        "qid": "4301064000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kuk Sool Won": "m.055rn5",
            "Grappling": "m.039cp"
        },
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.055rn5)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp)))",
        "actions": [
            "get_relations(m.055rn5)",
            "get_neighbors(m.055rn5,martial_arts.martial_art.category)",
            "get_relations(#0)",
            "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
            "get_relations(m.039cp)",
            "get_neighbors(m.039cp,martial_arts.martial_art_category.martial_arts)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tm7f",
                "entity_name": "Kajukenbo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bs3p",
                "entity_name": "Sanshou"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.041d65",
                "entity_name": "Vovinam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k4r",
                "entity_name": "Tai chi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vqp5",
                "entity_name": "Systema"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09h901",
                "entity_name": "Shid\u014dkan Karate"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hbj9",
                "entity_name": "Hapkido"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qcyb",
                "entity_name": "Kalaripayattu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02618d8",
                "entity_name": "Russian All-Round Fighting"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.048yh",
                "entity_name": "Krav Maga"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05b65c",
                "entity_name": "Hwa Rang Do"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.061px",
                "entity_name": "Pankration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06jm_r",
                "entity_name": "Bartitsu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06k44z",
                "entity_name": "Modern Arnis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n18n",
                "entity_name": "Dait\u014d-ry\u016b Aiki-j\u016bjutsu"
            }
        ]
    },
    {
        "question": "the czecho-slovakia has how many breeds of dogs that has the same temperament as the cairn terriers?",
        "qid": "4303460009000_grailqa",
        "source": "grailqa",
        "entities": {
            "cairn terriers": "m.02z57c",
            "czecho-slovakia": "m.01mk6"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.01mk6)) (JOIN (R biology.animal_breed.temperament) m.02z57c))))",
        "actions": [
            "get_relations(m.01mk6)",
            "get_neighbors(m.01mk6,biology.breed_origin.breeds_originating_here)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.02z57c)",
            "get_neighbors(m.02z57c,biology.animal_breed.temperament)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "blitz basic and object lisp use programming language paradigm what is the other program language influenced by?",
        "qid": "4300798006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Object Lisp": "m.042ttz",
            "Blitz BASIC": "m.01jm0"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.042ttz) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.01jm0))))",
        "actions": [
            "get_relations(m.042ttz)",
            "get_neighbors(m.042ttz,computer.programming_language.language_paradigms)",
            "get_relations(m.01jm0)",
            "get_neighbors(m.01jm0,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            }
        ]
    },
    {
        "question": "Who was Niccolo Machiavelli influenced by, that was a psychoanalyst?",
        "qid": "WebQTrn-1719_599508e0ec066d52b4ffa8f5eeb85b8a_cwq",
        "source": "cwq",
        "entities": {
            "niccolo machiavelli": "m.05cvs",
            "Psychoanalyst": "m.02nblbn"
        },
        "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.05cvs) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.02nblbn)))",
        "actions": [
            "get_relations(m.05cvs)",
            "get_neighbors(m.05cvs,influence.influence_node.influenced_by)",
            "get_relations(m.02nblbn)",
            "get_neighbors(m.02nblbn,people.profession.people_with_this_profession)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.05qmj",
                "answer_type": "Entity",
                "entity_name": "Plato"
            },
            {
                "answer_argument": "m.0gz_",
                "answer_type": "Entity",
                "entity_name": "Aristotle"
            }
        ]
    },
    {
        "question": "what are the number of religious practices that practice hinduism and taoism?",
        "qid": "3204573003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hinduism": "m.03j6c",
            "Taoism": "m.07gvx"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.03j6c) (JOIN (R religion.religion.practices) m.07gvx))))",
        "actions": [
            "get_relations(m.03j6c)",
            "get_neighbors(m.03j6c,religion.religion.practices)",
            "get_relations(m.07gvx)",
            "get_neighbors(m.07gvx,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "which breeds have similar temperament as the picardy spaniel and the seppala siberian sleddogs?",
        "qid": "4300795005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Picardy Spaniel": "m.02qx_df",
            "seppala siberian sleddogs": "m.01p08w"
        },
        "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.02qx_df) (JOIN biology.breed_temperament.breeds m.01p08w))))",
        "actions": [
            "get_relations(m.02qx_df)",
            "get_neighbors(m.02qx_df,biology.animal_breed.temperament)",
            "get_relations(m.01p08w)",
            "get_neighbors(m.01p08w,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,biology.breed_temperament.breeds)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4blp",
                "entity_name": "Braque d'Auvergne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01f57_",
                "entity_name": "Chinese Crested Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p39m",
                "entity_name": "American Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03htgw",
                "entity_name": "Koolie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ysz",
                "entity_name": "Italian Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05sfy0",
                "entity_name": "L\u00f6wchen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08s0ws",
                "entity_name": "Boykin Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kwdc",
                "entity_name": "German Wirehaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gx1zf",
                "entity_name": "Billy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dhvj7",
                "entity_name": "Kromfohrl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074g8y",
                "entity_name": "Manchester Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05h0h0",
                "entity_name": "Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0182yx",
                "entity_name": "Shetland Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.062dgz",
                "entity_name": "Lagotto Romagnolo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121bvrw_",
                "entity_name": "Biewer Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011lh",
                "entity_name": "Azawakh"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0183xd",
                "entity_name": "Vizsla"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cx_v",
                "entity_name": "Chesapeake Bay Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01hzb8",
                "entity_name": "Great Pyrenees"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j0x",
                "entity_name": "Basenji"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01kv93",
                "entity_name": "Staffordshire Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p3d7",
                "entity_name": "Alaskan Malamute"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p5rd",
                "entity_name": "Bernese Mountain Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pm38",
                "entity_name": "Clumber Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01s7fj",
                "entity_name": "Shih Tzu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x5q1",
                "entity_name": "J\u00e4mthund"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xtxb",
                "entity_name": "Cavalier King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020z5t",
                "entity_name": "English Springer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025wmcw",
                "entity_name": "Cavapoo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0266ts8",
                "entity_name": "Basset Bleu de Gascogne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02700gv",
                "entity_name": "Ariegeois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0271kpq",
                "entity_name": "Spanish Water Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dtrb",
                "entity_name": "Swedish Lapphund"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_73c",
                "entity_name": "Rat Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cyl6",
                "entity_name": "Maltese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kf24",
                "entity_name": "Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kgrx",
                "entity_name": "Cardigan Welsh Corgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kw9d",
                "entity_name": "German Shorthaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nscg",
                "entity_name": "Bearded Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rfz5",
                "entity_name": "Irish Soft-coated Wheaten Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjrc",
                "entity_name": "Groenendael"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wbf7",
                "entity_name": "Bedlington Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wbgd",
                "entity_name": "English Cocker Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wcn0z",
                "entity_name": "Russian Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.031pqh",
                "entity_name": "Peruvian Hairless Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353h4",
                "entity_name": "Border Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353qr",
                "entity_name": "Dandie Dinmont Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0388_c",
                "entity_name": "Japanese Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.038wt3",
                "entity_name": "French Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.039rzl",
                "entity_name": "Irish Setter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.039s48",
                "entity_name": "Irish Red and White Setter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_7wn",
                "entity_name": "Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_vlr",
                "entity_name": "Smooth Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cq_p",
                "entity_name": "Kerry Blue Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d12",
                "entity_name": "Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fyyd",
                "entity_name": "Shar Pei"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jjm4",
                "entity_name": "Norwich Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l5cy",
                "entity_name": "Spinone Italiano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ydd_",
                "entity_name": "Havanese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0403wp9",
                "entity_name": "Muggin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410k_5",
                "entity_name": "Treeing Tennessee Brindle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dm6",
                "entity_name": "Komondor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04gp8k",
                "entity_name": "English Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jj62w",
                "entity_name": "Llewellyn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mgcx",
                "entity_name": "Bench-Legged Feist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nmst",
                "entity_name": "King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04prkf",
                "entity_name": "Small M\u00fcnsterl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04svjlt",
                "entity_name": "American Squirrel Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04svljl",
                "entity_name": "Braque Saint-Germain"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04swl7y",
                "entity_name": "Halden Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04swlxt",
                "entity_name": "Hellenikos Ichnilatis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxcxt",
                "entity_name": "Posavac Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04t5jl6",
                "entity_name": "American Leopard Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.057_4d",
                "entity_name": "Canadian Eskimo Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05kz7n",
                "entity_name": "Rajapalayam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05t252",
                "entity_name": "Volpino Italiano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05tbqb",
                "entity_name": "Coton de Tulear"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y236",
                "entity_name": "New Guinea singing dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06h8yy",
                "entity_name": "Dogo Argentino"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0708qt",
                "entity_name": "Artois Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074pqh",
                "entity_name": "Spanish Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773fb",
                "entity_name": "Treeing Walker Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0778jb",
                "entity_name": "Redbone Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07blj0",
                "entity_name": "Large M\u00fcnsterl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07dx0m",
                "entity_name": "Japanese Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07j9bq",
                "entity_name": "Alano Espa\u00f1ol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08626",
                "entity_name": "Whippet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08f_zh",
                "entity_name": "Pont-Audemer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08gl4z",
                "entity_name": "Dutch Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08mgkp",
                "entity_name": "American Staghound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bjrtp",
                "entity_name": "Cirneco dell'Etna"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bllpv",
                "entity_name": "Puggle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bq1jd",
                "entity_name": "Kaikadi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cbgst",
                "entity_name": "Kintamani"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djh8b",
                "entity_name": "Silken Windhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpx6y",
                "entity_name": "German Longhaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f339h",
                "entity_name": "Portuguese Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fgh8v",
                "entity_name": "Cesky Fousek"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fl887",
                "entity_name": "Braque du Bourbonnais"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gt5n2",
                "entity_name": "Cretan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvx7",
                "entity_name": "Pharaoh Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hw_s",
                "entity_name": "Basset Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nr94",
                "entity_name": "Bichon Frise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p3f7",
                "entity_name": "Standard Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p29g",
                "entity_name": "Alapaha Blue Blood Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pyhj",
                "entity_name": "Shiloh Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020dr1",
                "entity_name": "Bluetick coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_s2m",
                "entity_name": "Black Mouth Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025tcp1",
                "entity_name": "Russell Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026qz0j",
                "entity_name": "Polish Hunting Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fvym",
                "entity_name": "Goldendoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fxgn",
                "entity_name": "Cockapoo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kfwr",
                "entity_name": "Poodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktbm",
                "entity_name": "Smooth Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n_s4",
                "entity_name": "Korean Jindo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pp4mc",
                "entity_name": "Bohemian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pxllv",
                "entity_name": "Blue Picardy Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z57c",
                "entity_name": "Cairn Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b6hk",
                "entity_name": "Catalan Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jgg9",
                "entity_name": "Cesky Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0408cgh",
                "entity_name": "Stephens Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044lwh",
                "entity_name": "Irish Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxb0m",
                "entity_name": "Kemmer Stock Hybrid Squirrel Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxbjk",
                "entity_name": "Parnell's Carolina Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05py4h",
                "entity_name": "Old Danish Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06k88g",
                "entity_name": "Hovawart"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07bln6",
                "entity_name": "Curly Coated Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07p7st",
                "entity_name": "Portuguese Podengo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07t_h2",
                "entity_name": "Africanis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07vgwn",
                "entity_name": "Pumi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08c5h8",
                "entity_name": "Brazilian Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09v1cn",
                "entity_name": "Ratonero Bodeguero Andaluz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b26w3",
                "entity_name": "Schnoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b3s8y",
                "entity_name": "Czechoslovakian Wolfdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bq2r1",
                "entity_name": "Indian Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3k58",
                "entity_name": "Pra\u017esk\u00fd Krysa\u0159\u00edk"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cqpth",
                "entity_name": "Hortaya borzaya"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fsg8",
                "entity_name": "Harrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hkfc",
                "entity_name": "Kooikerhondje"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1ct",
                "entity_name": "Wirehaired Pointing Griffon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0blw4s",
                "entity_name": "Huntaway"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wfy",
                "entity_name": "Pomeranian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z404",
                "entity_name": "Newfoundland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027z5xc",
                "entity_name": "Gull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02f1fz",
                "entity_name": "West Highland White Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kdvy",
                "entity_name": "Pyrenean Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02l61f",
                "entity_name": "Rough Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pl0tr",
                "entity_name": "Dorgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ppbk1",
                "entity_name": "American English Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qllrh",
                "entity_name": "Porcelaine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rf9c3",
                "entity_name": "Central Anatolian Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rjc05",
                "entity_name": "Dalmatian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rwwfw",
                "entity_name": "Kyi-Leo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ryncw",
                "entity_name": "Ariege Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjst",
                "entity_name": "Laekenois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xp9c",
                "entity_name": "Miniature Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xlb",
                "entity_name": "Irish Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xv1",
                "entity_name": "Lakeland Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.038wvd",
                "entity_name": "Toy Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03grfxm",
                "entity_name": "Taigan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045lcs",
                "entity_name": "Chien Fran\u00e7ais Blanc et Noir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fzvx",
                "entity_name": "Cane Corso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051ppn",
                "entity_name": "Glen of Imaal Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.053_t0",
                "entity_name": "Stabyhoun"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.055br8",
                "entity_name": "Thai Bangkaew Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bkt9",
                "entity_name": "German Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c21l",
                "entity_name": "South Russian Ovcharka"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06m828",
                "entity_name": "Petit Basset Griffon Vend\u00e9en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06w066",
                "entity_name": "English Foxhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08c4cj",
                "entity_name": "Irish Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08pmt0",
                "entity_name": "Alaskan Klee Kai"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08r0rx",
                "entity_name": "Norrbottenspets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dflqz",
                "entity_name": "Blue Lacy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgnzvz",
                "entity_name": "Burgos Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018z4d",
                "entity_name": "Bloodhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p2dp",
                "entity_name": "Affenpinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02bp0t",
                "entity_name": "Pekingese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjtz",
                "entity_name": "Malinois"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlqx",
                "entity_name": "Basset Fauve de Bretagne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353wm",
                "entity_name": "English Toy Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cr7fw",
                "entity_name": "Morkie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ys4",
                "entity_name": "Ibizan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049jr6",
                "entity_name": "American Pit Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dzzn",
                "entity_name": "Neapolitan Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyhd",
                "entity_name": "Tibetan Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06c5rq",
                "entity_name": "Grand Bleu de Gascogne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.081zj5",
                "entity_name": "Welsh Springer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fxnkq",
                "entity_name": "Moscow Watchdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fzb8x",
                "entity_name": "Bracco Italiano"
            }
        ]
    },
    {
        "question": "what crumbly textured cheese is made from the products of domestic sheep and cows?",
        "qid": "4301155005000_grailqa",
        "source": "grailqa",
        "entities": {
            "domestic sheep": "m.07bgp",
            "cows": "m.01xq0k1",
            "Crumbly": "m.02wlqk0"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02wlqk0))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.01xq0k1)",
            "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
            "get_relations(m.02wlqk0)",
            "get_neighbors(m.02wlqk0,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cl7d5",
                "entity_name": "Castelmagno cheese"
            }
        ]
    },
    {
        "question": "what olympic event was contested officially in 1904 olympics and other olympic games in tokyo metropolis?",
        "qid": "4300161015000_grailqa",
        "source": "grailqa",
        "entities": {
            "tokyo metropolis": "m.07dfk",
            "1904 olympics": "m.018wrk"
        },
        "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.07dfk)) (JOIN olympics.olympic_event.olympic_games_contested m.018wrk)))",
        "actions": [
            "get_relations(m.07dfk)",
            "get_neighbors(m.07dfk,olympics.olympic_host_city.olympics_hosted)",
            "get_relations(#0)",
            "get_neighbors(#0,olympics.olympic_games.events)",
            "get_relations(m.018wrk)",
            "get_neighbors(m.018wrk,olympics.olympic_games.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gnx9y",
                "entity_name": "Men's 300m Free Rifle, 3 Positions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cx",
                "entity_name": "Men's \u00c9p\u00e9e individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cl",
                "entity_name": "Men's Shot put"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pc",
                "entity_name": "Men's Discus throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk29t",
                "entity_name": "Men's Parallel bars"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2c_",
                "entity_name": "Men's Gymnastics, individual all-round"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2cj",
                "entity_name": "Men's Long jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2f7",
                "entity_name": "Men's 50m pistol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hl",
                "entity_name": "Men's Athletics, 100m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2lq",
                "entity_name": "Men's Foil individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2mz",
                "entity_name": "Men's Marathon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qm",
                "entity_name": "Men's Athletics, 400m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2rd",
                "entity_name": "Men's Pole vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2tl",
                "entity_name": "Men's Athletics, 400m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2x7",
                "entity_name": "Men's Pommel horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2xq",
                "entity_name": "Men's Sabre individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2yh",
                "entity_name": "Men's Athletics, 200m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2zl",
                "entity_name": "Men's Horizontal bar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk300",
                "entity_name": "Men's Hammer throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30h",
                "entity_name": "Men's Athletics, 110m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32_",
                "entity_name": "Men's Triple jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32p",
                "entity_name": "Men's High jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39d",
                "entity_name": "Men's Vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3b5",
                "entity_name": "Men's Athletics, 800m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3dj",
                "entity_name": "Men's Decathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3kp",
                "entity_name": "Men's Rings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3l9",
                "entity_name": "Men's Single sculls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3n5",
                "entity_name": "Men's Athletics, 1500m"
            }
        ]
    },
    {
        "question": "What type of government does Japan use in Baldur von Schirach's place of birth?",
        "qid": "WebQTest-738_3f76d491e90682cc29e3de2546e1f9c5_cwq",
        "source": "cwq",
        "entities": {
            "Japan": "m.03_3d",
            "Baldur von Schirach": "m.0143sn"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
        "actions": [
            "get_relations(m.03_3d)",
            "get_neighbors(m.03_3d,location.country.form_of_government)",
            "get_relations(m.0143sn)",
            "get_neighbors(m.0143sn,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "What zoo in downtown Chicago opened latest?",
        "qid": "WebQTrn-825_e7bc77994fe673069b79e5bfbfd7da41_cwq",
        "source": "cwq",
        "entities": {
            "Chicago": "m.01_d4"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) zoos.zoo.opened)",
        "actions": [
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,location.location.contains)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,zoos.zoo.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.02jw0z",
                "answer_type": "Entity",
                "entity_name": "Shedd Aquarium"
            }
        ]
    },
    {
        "question": "What form of Government is the UK, birth place of Baldur von Schirach?",
        "qid": "WebQTest-659_3f76d491e90682cc29e3de2546e1f9c5_cwq",
        "source": "cwq",
        "entities": {
            "UK": "m.07ssc",
            "Baldur von Schirach": "m.0143sn"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.07ssc) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
        "actions": [
            "get_relations(m.07ssc)",
            "get_neighbors(m.07ssc,location.country.form_of_government)",
            "get_relations(m.0143sn)",
            "get_neighbors(m.0143sn,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "what religion is part of east asian religions and has same practices with buddhism?",
        "qid": "4300140006000_grailqa",
        "source": "grailqa",
        "entities": {
            "East Asian religions": "m.028b9mc",
            "Buddhism": "m.092bf5"
        },
        "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.092bf5)) (JOIN religion.religion.is_part_of m.028b9mc)))",
        "actions": [
            "get_relations(m.092bf5)",
            "get_neighbors(m.092bf5,religion.religion.practices)",
            "get_relations(#0)",
            "get_neighbors(#0,religion.religious_practice.practice_of)",
            "get_relations(m.028b9mc)",
            "get_neighbors(m.028b9mc,religion.religion.includes)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gvx",
                "entity_name": "Taoism"
            }
        ]
    },
    {
        "question": "how many camera iso capabilities are the iso setting used by kodak z712 is zoom digital camera and samsung s1050?",
        "qid": "3205827000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kodak Z712 IS ZOOM digital camera": "m.03hpfyz",
            "Samsung S1050": "m.03q2r11"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03hpfyz) (JOIN (R digicams.digital_camera.iso_setting) m.03q2r11))))",
        "actions": [
            "get_relations(m.03hpfyz)",
            "get_neighbors(m.03hpfyz,digicams.digital_camera.iso_setting)",
            "get_relations(m.03q2r11)",
            "get_neighbors(m.03q2r11,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "7"
            }
        ]
    },
    {
        "question": "how many different game cube models used powerpc processors?",
        "qid": "3205922015000_grailqa",
        "source": "grailqa",
        "entities": {
            "game cube": "m.0f0w2",
            "PowerPC": "m.0620f"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0f0w2) (JOIN computer.computer.processor m.0620f))))",
        "actions": [
            "get_relations(m.0f0w2)",
            "get_neighbors(m.0f0w2,computer.computer.includes_models)",
            "get_relations(m.0620f)",
            "get_neighbors(m.0620f,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what are quotations from jihan, froth daughter that are addressed the same as \"i want to live like a man.\"?",
        "qid": "4302343014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Jihan, Froth Daughter": "m.0bxttn0",
            "\"I want to live like a man.\"": "m.0j3x8j6"
        },
        "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxttn0)) (JOIN media_common.quotation_addressee.quotations m.0j3x8j6)))",
        "actions": [
            "get_relations(m.0bxttn0)",
            "get_neighbors(m.0bxttn0,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.addressee)",
            "get_relations(m.0j3x8j6)",
            "get_neighbors(m.0j3x8j6,media_common.quotation.addressee)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxj80p",
                "entity_name": "Tempus"
            }
        ]
    },
    {
        "question": "what cheese from domestic sheep milk has the same texture as asiago cheese?",
        "qid": "4302129007000_grailqa",
        "source": "grailqa",
        "entities": {
            "domestic sheep": "m.07bgp",
            "Asiago cheese": "m.02k5rl"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.02k5rl))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.02k5rl)",
            "get_neighbors(m.02k5rl,food.cheese.texture)",
            "get_relations(#1)",
            "get_neighbors(#1,food.cheese_texture.cheeses)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01glzg",
                "entity_name": "Cabrales cheese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.068kk",
                "entity_name": "Pecorino Romano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02h8bgl",
                "entity_name": "Berkswell"
            }
        ]
    },
    {
        "question": "what religion is party of syncretism and has same practices with hinduism?",
        "qid": "4300140017000_grailqa",
        "source": "grailqa",
        "entities": {
            "Syncretism": "m.0r8kd4z",
            "Hinduism": "m.03j6c"
        },
        "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.03j6c)) (JOIN religion.religion.is_part_of m.0r8kd4z)))",
        "actions": [
            "get_relations(m.03j6c)",
            "get_neighbors(m.03j6c,religion.religion.practices)",
            "get_relations(#0)",
            "get_neighbors(#0,religion.religious_practice.practice_of)",
            "get_relations(m.0r8kd4z)",
            "get_neighbors(m.0r8kd4z,religion.religion.includes)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gvx",
                "entity_name": "Taoism"
            }
        ]
    },
    {
        "question": "the religion featuring tisha b'av, which is part of abrahamic faith, has a founding leader who is named what?",
        "qid": "4302278000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tisha B'Av": "m.01t663",
            "abrahamic faith": "m.0f_h6"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.01t663) (JOIN religion.religion.is_part_of m.0f_h6))))",
        "actions": [
            "get_relations(m.01t663)",
            "get_neighbors(m.01t663,time.holiday.featured_in_religions)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01b5wx",
                "entity_name": "Sarah"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwb",
                "entity_name": "Abraham"
            }
        ]
    },
    {
        "question": "for ned stark's children, how many of them were born in winterfell?",
        "qid": "448000501_graphquestions",
        "source": "graphquestions",
        "entities": {
            "ned stark": "m.03qs0n1",
            "Winterfell": "m.04sstyx"
        },
        "s_expression": "(COUNT (AND fictional_universe.fictional_character (AND (JOIN (R fictional_universe.fictional_character.children) m.03qs0n1) (JOIN fictional_universe.fictional_character.place_of_birth m.04sstyx))))",
        "actions": [
            "get_relations(m.03qs0n1)",
            "get_neighbors(m.03qs0n1,fictional_universe.fictional_character.children)",
            "get_relations(m.04sstyx)",
            "get_neighbors(m.04sstyx,fictional_universe.fictional_setting.fictional_characters_born_here)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "what was the most recently formed cyclone in the same category as hurricane dolly?",
        "qid": "4303808010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hurricane Dolly": "m.04dn799"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.04dn799))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.04dn799)",
            "get_neighbors(m.04dn799,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011v6mk8",
                "entity_name": "Typhoon Kalmaegi"
            }
        ]
    },
    {
        "question": "name the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 3200?",
        "qid": "4300861002000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "3200": "m.01xrg4v"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.01xrg4v))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.01xrg4v)",
            "get_neighbors(m.01xrg4v,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            }
        ]
    },
    {
        "question": "which amusement ride is the fastest of all the ones designed by the person who designed the mansion ride?",
        "qid": "482000201_graphquestions",
        "source": "graphquestions",
        "entities": {
            "mansion": "m.01p79p"
        },
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "actions": [
            "get_relations(m.01p79p)",
            "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
            "get_relations(#0)",
            "get_neighbors(#0,amusement_parks.ride_designer.rides)",
            "get_attributes(#1)",
            "argmax(#1,amusement_parks.ride.max_speed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "question": "which storage type is supported by canon 1d mark iii and those with color filter array of foveon x3 sensor?",
        "qid": "4302099014000_grailqa",
        "source": "grailqa",
        "entities": {
            "canon 1d mark iii": "m.02pmy2l",
            "Foveon X3 sensor": "m.02g86w"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.02pmy2l) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02g86w))))",
        "actions": [
            "get_relations(m.02pmy2l)",
            "get_neighbors(m.02pmy2l,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.02g86w)",
            "get_neighbors(m.02g86w,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rlj7",
                "entity_name": "CompactFlash"
            }
        ]
    },
    {
        "question": "What was the name of the song that Pink composed on Atom Heart Mother's first album?",
        "qid": "WebQTest-954_8048491a0f6eda7e90ddc7bd375bdd84_cwq",
        "source": "cwq",
        "entities": {
            "Atom Heart Mother": "m.059s8w"
        },
        "s_expression": "(ARGMIN (JOIN (R music.artist.album) (JOIN music.composer.compositions m.059s8w)) music.album.release_date)",
        "actions": [
            "get_relations(m.059s8w)",
            "get_neighbors(m.059s8w,music.composition.composer)",
            "get_relations(#0)",
            "get_neighbors(#0,music.artist.album)",
            "get_attributes(#1)",
            "argmin(#1,music.album.release_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0h3bhb1",
                "answer_type": "Entity",
                "entity_name": "Psychedelic Session-compilation album"
            }
        ]
    },
    {
        "question": "in what countries is the version developed by commodore gaming and distributed through virtual console released?",
        "qid": "4301141009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Virtual Console": "m.07sg3j",
            "Commodore Gaming": "m.02pz6yx"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.02pz6yx))))",
        "actions": [
            "get_relations(m.07sg3j)",
            "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.02pz6yx)",
            "get_neighbors(m.02pz6yx,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09c7w0",
                "entity_name": "United States of America"
            }
        ]
    },
    {
        "question": "Where do most people live in the country where Egyptian Arabic is spoken?",
        "qid": "WebQTrn-3037_eacad512118512366a932ffd59ad4578_cwq",
        "source": "cwq",
        "entities": {
            "Egyptian Arabic": "m.02hx2cr"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.languages_spoken m.02hx2cr)) topic_server.population_number)",
        "actions": [
            "get_relations(m.02hx2cr)",
            "get_neighbors(m.02hx2cr,language.human_language.countries_spoken_in)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "what year did the mets win their first world series",
        "qid": "WebQTrn-2356_webqsp",
        "source": "webqsp",
        "entities": {
            "mets": "m.05g76",
            "World Series": "m.0fjp3"
        },
        "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) m.05g76) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
        "actions": [
            "get_relations(m.05g76)",
            "get_neighbors(m.05g76,sports.sports_team.championships)",
            "get_relations(m.0fjp3)",
            "get_neighbors(m.0fjp3,sports.sports_championship.events)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmin(#2,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04jg9_",
                "answer_type": "Entity",
                "entity_name": "1969 World Series"
            }
        ]
    },
    {
        "question": "of tropical cyclones that affected bahamas, which are in the same category with hurricane gloria?",
        "qid": "4300198013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hurricane Gloria": "m.03wcnw",
            "Bahamas": "m.0160w"
        },
        "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.03wcnw)) (JOIN meteorology.tropical_cyclone.affected_areas m.0160w)))",
        "actions": [
            "get_relations(m.03wcnw)",
            "get_neighbors(m.03wcnw,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_relations(m.0160w)",
            "get_neighbors(m.0160w,meteorology.cyclone_affected_area.cyclones)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vnsr",
                "entity_name": "1900 Galveston hurricane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cz3m",
                "entity_name": "Hurricane Hazel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jnnpy",
                "entity_name": "Hurricane Ike"
            }
        ]
    },
    {
        "question": "name all types of museums of the same type as mus\u00e9e d'art contemporain de montr\u00e9al and arlington gallery.",
        "qid": "5400031003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Mus\u00e9e d'art contemporain de Montr\u00e9al": "m.027yjjq",
            "Arlington Gallery": "m.04_jgbb"
        },
        "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.027yjjq) (JOIN architecture.type_of_museum.museums m.04_jgbb)))))",
        "actions": [
            "get_relations(m.027yjjq)",
            "get_neighbors(m.027yjjq,architecture.museum.type_of_museum)",
            "get_relations(m.04_jgbb)",
            "get_neighbors(m.04_jgbb,architecture.museum.type_of_museum)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,architecture.type_of_museum.museums)",
            "get_relations(#3)",
            "get_neighbors(#3,architecture.museum.type_of_museum)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gz",
                "entity_name": "Modern art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9td2",
                "entity_name": "National museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9jkk",
                "entity_name": "Architecture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgh_k",
                "entity_name": "History museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgjgh",
                "entity_name": "Natural history museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jvjpx6",
                "entity_name": "Antiquities museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026w5hv",
                "entity_name": "Contemporary art gallery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pn3n6",
                "entity_name": "Historic house museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0528d17",
                "entity_name": "Photography Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt8qr",
                "entity_name": "Culture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gt",
                "entity_name": "Archaeology museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059x_pp",
                "entity_name": "Archaeological Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvyw7",
                "entity_name": "Design museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027v0wz",
                "entity_name": "University museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059vqps",
                "entity_name": "Ancient Art Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9gbh",
                "entity_name": "Jewish museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j58y",
                "entity_name": "Science museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0w_y7rb",
                "entity_name": "Asian art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99t0",
                "entity_name": "Decorative art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djx8f",
                "entity_name": "Children's museum"
            }
        ]
    },
    {
        "question": "what museums share a type with powerhouse museum and montshire museum of science?",
        "qid": "5400031002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Powerhouse Museum": "m.02x7mq",
            "Montshire Museum of Science": "m.03pbmr"
        },
        "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.02x7mq) (JOIN architecture.type_of_museum.museums m.03pbmr)))))",
        "actions": [
            "get_relations(m.02x7mq)",
            "get_neighbors(m.02x7mq,architecture.museum.type_of_museum)",
            "get_relations(m.03pbmr)",
            "get_neighbors(m.03pbmr,architecture.museum.type_of_museum)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,architecture.type_of_museum.museums)",
            "get_relations(#3)",
            "get_neighbors(#3,architecture.museum.type_of_museum)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgjgh",
                "entity_name": "Natural history museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hhbr",
                "entity_name": "Art Gallery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgh_k",
                "entity_name": "History museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt8qr",
                "entity_name": "Culture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9d_3",
                "entity_name": "Technology museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pwl3",
                "entity_name": "Maritime museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lc8dl",
                "entity_name": "Aviation museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fpc1f2",
                "entity_name": "Industrial museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djx8f",
                "entity_name": "Children's museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fxy91",
                "entity_name": "Aviation museum"
            }
        ]
    },
    {
        "question": "what kind of content do the producer of wait wait... don't tell me and american radio works produce?",
        "qid": "4300832007000_grailqa",
        "source": "grailqa",
        "entities": {
            "wait wait... don't tell me": "m.041z1gp",
            "american radio works": "m.03n18r"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.041z1gp)) (JOIN broadcast.content.producer m.03n18r)))",
        "actions": [
            "get_relations(m.041z1gp)",
            "get_neighbors(m.041z1gp,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.03n18r)",
            "get_neighbors(m.03n18r,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bty83",
                "entity_name": "APM: Weekend America"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03btxkg",
                "entity_name": "APM: American RadioWorks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bty93",
                "entity_name": "APM: Word for Word"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bty9_",
                "entity_name": "APM: Garrison Keillor's The Writer's Almanac"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d6d9s",
                "entity_name": "APM: Future Tense"
            }
        ]
    },
    {
        "question": "how many religious practices are there that practices jainism and krishna?",
        "qid": "3204573002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Jainism": "m.042s9",
            "krishna": "m.017j3y"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.042s9) (JOIN (R religion.religion.practices) m.017j3y))))",
        "actions": [
            "get_relations(m.042s9)",
            "get_neighbors(m.042s9,religion.religion.practices)",
            "get_relations(m.017j3y)",
            "get_neighbors(m.017j3y,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many different mac models used motorola 68040 processors?",
        "qid": "3205922007000_grailqa",
        "source": "grailqa",
        "entities": {
            "mac": "m.0zd6",
            "Motorola 68040": "m.05397"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.05397))))",
        "actions": [
            "get_relations(m.0zd6)",
            "get_neighbors(m.0zd6,computer.computer.includes_models)",
            "get_relations(m.05397)",
            "get_neighbors(m.05397,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "What stadium is home to the team that won the 2014 NFC championship.?",
        "qid": "WebQTest-784_d26df923e473be97aa92099f79546c25_cwq",
        "source": "cwq",
        "entities": {
            "2014 nfc championship": "m.0_gtzyv"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.championships m.0_gtzyv)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.0_gtzyv)",
            "get_neighbors(m.0_gtzyv,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.01db_j",
                "answer_type": "Entity",
                "entity_name": "CenturyLink Field"
            }
        ]
    },
    {
        "question": "what camera storage type is supported by panasonic lumix dmc-g2 and the digital camera with iso setting of 12800?",
        "qid": "4302372009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Panasonic Lumix DMC-G2": "m.0gywrrp",
            "12800": "m.04sy2g0"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.04sy2g0)) (JOIN (R digicams.digital_camera.supported_storage_types) m.0gywrrp)))",
        "actions": [
            "get_relations(m.04sy2g0)",
            "get_neighbors(m.04sy2g0,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.0gywrrp)",
            "get_neighbors(m.0gywrrp,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0220vm1",
                "entity_name": "SDHC Card"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h27nlb",
                "entity_name": "SDXC Card"
            }
        ]
    },
    {
        "question": "Team owner John Mara last won which Super Bowls?",
        "qid": "WebQTrn-3290_79bdd4bc7e7acdf09d75459e5efe7293_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "John Mara": "m.094w0s"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.094w0s)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.094w0s)",
            "get_neighbors(m.094w0s,sports.sports_team_owner.teams_owned)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.043t_rh",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVI"
            },
            {
                "answer_argument": "m.04myq1",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLII"
            },
            {
                "answer_argument": "m.076sw",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXI"
            },
            {
                "answer_argument": "m.076v7",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXV"
            }
        ]
    },
    {
        "question": "What is the cause of death of the subject of the film Whitney Houston - I Will Always: Unauthorized?",
        "qid": "WebQTrn-2600_a15616e0fe214498a348b5ad6934d511_cwq",
        "source": "cwq",
        "entities": {
            "Drug overdose": "m.01tf_6",
            "Whitney Houston - I Will Always: Unauthorized": "m.012vsnwl"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN film.film_subject.films m.012vsnwl)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
        "actions": [
            "get_relations(m.012vsnwl)",
            "get_neighbors(m.012vsnwl,film.film.subjects)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.01tf_6)",
            "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02nx6jb",
                "answer_type": "Entity",
                "entity_name": "Cocaine overdose"
            }
        ]
    },
    {
        "question": "what category of schools do villanova university school of law and the publisher of george fox university journal fall under?",
        "qid": "4301751005000_grailqa",
        "source": "grailqa",
        "entities": {
            "George Fox University Journal": "m.0zp1xtf",
            "Villanova University School of Law": "m.02p80mq"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.0zp1xtf)) (JOIN (R education.educational_institution.school_type) m.02p80mq)))",
        "actions": [
            "get_relations(m.0zp1xtf)",
            "get_neighbors(m.0zp1xtf,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.02p80mq)",
            "get_neighbors(m.02p80mq,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rs41",
                "entity_name": "Private school"
            }
        ]
    },
    {
        "question": "what visual art form is made by albrecht d\u00fcrer besides printmaker?",
        "qid": "4302283007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Albrecht D\u00fcrer": "m.0z6n",
            "printmaker": "m.0bp7w"
        },
        "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.0z6n) (JOIN visual_art.artwork.art_form m.0bp7w))))",
        "actions": [
            "get_relations(m.0z6n)",
            "get_neighbors(m.0z6n,visual_art.visual_artist.artworks)",
            "get_relations(m.0bp7w)",
            "get_neighbors(m.0bp7w,visual_art.visual_art_form.artworks)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,visual_art.artwork.art_form)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qdh",
                "entity_name": "Painting"
            }
        ]
    },
    {
        "question": "When did the sports team that won the 1974 FA Cup Final championship most recently win the league championship?",
        "qid": "WebQTest-608_6ded35570d49c59e5db960a8330f3486_cwq",
        "source": "cwq",
        "entities": {
            "Football League Cup": "m.012dbw",
            "1974 FA Cup Final": "m.027_53v"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.027_53v)) (JOIN sports.sports_championship_event.championship m.012dbw)) time.event.end_date)",
        "actions": [
            "get_relations(m.027_53v)",
            "get_neighbors(m.027_53v,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.012dbw)",
            "get_neighbors(m.012dbw,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0h_b67k",
                "answer_type": "Entity",
                "entity_name": "2012 Football League Cup Final"
            }
        ]
    },
    {
        "question": "what automotive classes of pontiac parisienne had been modeled after the 2014 ford focus?",
        "qid": "4300308008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Pontiac Parisienne": "m.04p80l",
            "2014 Ford Focus": "m.0_v8m4q"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.04p80l) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0_v8m4q))))",
        "actions": [
            "get_relations(m.04p80l)",
            "get_neighbors(m.04p80l,automotive.model.automotive_class)",
            "get_relations(m.0_v8m4q)",
            "get_neighbors(m.0_v8m4q,automotive.model_year.model)",
            "get_relations(#1)",
            "get_neighbors(#1,automotive.model.automotive_class)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.021mp2",
                "entity_name": "Sedan"
            }
        ]
    },
    {
        "question": "there is a specific cheese with a crumbly texture that is sourced from goat and ovine, what is it called?",
        "qid": "4301155006000_grailqa",
        "source": "grailqa",
        "entities": {
            "ovine": "m.07bgp",
            "Goat": "m.03fwl",
            "Crumbly": "m.02wlqk0"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN food.cheese.texture m.02wlqk0))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.03fwl)",
            "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
            "get_relations(m.02wlqk0)",
            "get_neighbors(m.02wlqk0,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cl7d5",
                "entity_name": "Castelmagno cheese"
            }
        ]
    },
    {
        "question": "what regions sell vc nintendo games?",
        "qid": "498000101_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Nintendo": "m.059wk",
            "vc": "m.07sg3j"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.developer m.059wk) (JOIN cvg.game_version.distributed_through m.07sg3j))))",
        "actions": [
            "get_relations(m.059wk)",
            "get_neighbors(m.059wk,cvg.cvg_developer.game_versions_developed)",
            "get_relations(m.07sg3j)",
            "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02j9z",
                "entity_name": "Europe"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_3d",
                "entity_name": "Japan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059g4",
                "entity_name": "North America"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0chghy",
                "entity_name": "Australia"
            }
        ]
    },
    {
        "question": "what number of camera iso capability are utilized in the iso setting by hp photosmart e337 and sony cyber-shot dsc-w90?",
        "qid": "3205827014000_grailqa",
        "source": "grailqa",
        "entities": {
            "HP Photosmart E337": "m.03q2r6b",
            "Sony Cyber-shot DSC-W90": "m.04wjk1x"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03q2r6b) (JOIN (R digicams.digital_camera.iso_setting) m.04wjk1x))))",
        "actions": [
            "get_relations(m.03q2r6b)",
            "get_neighbors(m.03q2r6b,digicams.digital_camera.iso_setting)",
            "get_relations(m.04wjk1x)",
            "get_neighbors(m.04wjk1x,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "question": "fip and some disease caused by old age share which symptoms?",
        "qid": "246000002_graphquestions",
        "source": "graphquestions",
        "entities": {
            "fip": "m.06_1k9",
            "Old age": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "In what place is Harvard University where Scottish Americans are born?",
        "qid": "WebQTest-207_1688c5f3e3514e570a2ea05f5308616f_cwq",
        "source": "cwq",
        "entities": {
            "Harvard University": "m.03ksy",
            "Scottish American": "m.07bch9"
        },
        "s_expression": "(AND (JOIN (R location.location.containedby) m.03ksy) (JOIN location.location.people_born_here (JOIN people.person.ethnicity m.07bch9)))",
        "actions": [
            "get_relations(m.03ksy)",
            "get_neighbors(m.03ksy,location.location.containedby)",
            "get_relations(m.07bch9)",
            "get_neighbors(m.07bch9,people.ethnicity.people)",
            "get_relations(#1)",
            "get_neighbors(#1,people.person.place_of_birth)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01qh7",
                "answer_type": "Entity",
                "entity_name": "Cambridge"
            }
        ]
    },
    {
        "question": "what dug dosage form exist for drugs formulated from dimethicone/silicon and has active ingredient levothyroxine sodium?\n: liquid",
        "qid": "5400022002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Dimethicone/Silicon": "m.0hqwzb7",
            "levothyroxine sodium": "m.05h3j6"
        },
        "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqwzb7)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.05h3j6))))",
        "actions": [
            "get_relations(m.0hqwzb7)",
            "get_neighbors(m.0hqwzb7,medicine.drug.marketed_formulations)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
            "get_relations(m.05h3j6)",
            "get_neighbors(m.05h3j6,medicine.drug_ingredient.active_moiety_of_formulation)",
            "get_relations(#2)",
            "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
            "intersection(#1,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04k94",
                "entity_name": "Liquid"
            }
        ]
    },
    {
        "question": "virtual console, which is developed by sega of japan, was released where?",
        "qid": "4301141003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Virtual Console": "m.07sg3j",
            "sega of japan": "m.06p8m"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.07sg3j) (JOIN (R cvg.cvg_developer.game_versions_developed) m.06p8m))))",
        "actions": [
            "get_relations(m.07sg3j)",
            "get_neighbors(m.07sg3j,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.06p8m)",
            "get_neighbors(m.06p8m,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.075g54v",
                "entity_name": "Wii/DS NA"
            }
        ]
    },
    {
        "question": "what is the farthest variable stars?",
        "qid": "4303393000000_grailqa",
        "source": "grailqa",
        "entities": {
            "variable stars": "m.0gzxf"
        },
        "s_expression": "(ARGMAX (AND astronomy.celestial_object (JOIN (R astronomy.celestial_object_category.objects) (JOIN (R astronomy.celestial_object_category.subcategories) m.0gzxf))) astronomy.celestial_object.cosmological_distance)",
        "actions": [
            "get_relations(m.0gzxf)",
            "get_neighbors(m.0gzxf,astronomy.celestial_object_category.subcategories)",
            "get_relations(#0)",
            "get_neighbors(#0,astronomy.celestial_object_category.objects)",
            "get_attributes(#1)",
            "argmax(#1,astronomy.celestial_object.cosmological_distance)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0l1js",
                "entity_name": "Proxima Centauri"
            }
        ]
    },
    {
        "question": "which amusement ride is the fastest of all the ones designed by the person who designed the haunted mansion ride?",
        "qid": "482000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Haunted Mansion": "m.01p79p"
        },
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "actions": [
            "get_relations(m.01p79p)",
            "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
            "get_relations(#0)",
            "get_neighbors(#0,amusement_parks.ride_designer.rides)",
            "get_attributes(#1)",
            "argmax(#1,amusement_parks.ride.max_speed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "question": "what diseases transmitted via sex have the same type of infectious agent as tb?",
        "qid": "481000301_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Sex": "m.06ng1",
            "tb": "m.07jwr"
        },
        "s_expression": "(AND medicine.infectious_disease (AND (JOIN (R medicine.transmission_route.infections_that_travel_this_way) m.06ng1) (JOIN medicine.infectious_disease.infectious_agent_type (JOIN medicine.type_of_infectious_agent.diseases m.07jwr))))",
        "actions": [
            "get_relations(m.06ng1)",
            "get_neighbors(m.06ng1,medicine.transmission_route.infections_that_travel_this_way)",
            "get_relations(m.07jwr)",
            "get_neighbors(m.07jwr,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "question": "what is the number of religious practices that practices tibetan buddhism and taoism?",
        "qid": "3204573000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tibetan Buddhism": "m.07mc4",
            "Taoism": "m.07gvx"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.07mc4) (JOIN (R religion.religion.practices) m.07gvx))))",
        "actions": [
            "get_relations(m.07mc4)",
            "get_neighbors(m.07mc4,religion.religion.practices)",
            "get_relations(m.07gvx)",
            "get_neighbors(m.07gvx,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "which medications to treat pains have sludge syndrome as a side effect?",
        "qid": "4301182004000_grailqa",
        "source": "grailqa",
        "entities": {
            "pains": "m.062t2",
            "SLUDGE syndrome": "m.025yc7f"
        },
        "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.062t2)))",
        "actions": [
            "get_relations(m.025yc7f)",
            "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.symptom.side_effect_of)",
            "get_relations(m.062t2)",
            "get_neighbors(m.062t2,medicine.disease.treatments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03brks",
                "entity_name": "Buprenorphine"
            }
        ]
    },
    {
        "question": "what type of storage is supported by sony alpha 850 with foveon x3 sensor color filter array?",
        "qid": "4302099015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Sony Alpha 850": "m.06_v4pc",
            "Foveon X3 sensor": "m.02g86w"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.06_v4pc) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02g86w))))",
        "actions": [
            "get_relations(m.06_v4pc)",
            "get_neighbors(m.06_v4pc,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.02g86w)",
            "get_neighbors(m.02g86w,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rlj7",
                "entity_name": "CompactFlash"
            }
        ]
    },
    {
        "question": "which supreme served ski run is rated by blue square?",
        "qid": "4301587001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Blue square": "m.04knmg3",
            "Supreme": "m.04kk20l"
        },
        "s_expression": "(AND skiing.ski_run (AND (JOIN skiing.ski_run.rating (JOIN (R skiing.run_rating_symbol.run_rating) m.04knmg3)) (JOIN skiing.ski_run.served_by m.04kk20l)))",
        "actions": [
            "get_relations(m.04knmg3)",
            "get_neighbors(m.04knmg3,skiing.run_rating_symbol.run_rating)",
            "get_relations(#0)",
            "get_neighbors(#0,skiing.run_rating.ski_runs)",
            "get_relations(m.04kk20l)",
            "get_neighbors(m.04kk20l,skiing.ski_lift.runs_served)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmp6",
                "entity_name": "3 Bears"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmmq",
                "entity_name": "Rock N' Roll"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmq6",
                "entity_name": "Big Dipper"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmsg",
                "entity_name": "Sleepy Hollow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04knmsq",
                "entity_name": "Upper Big Dipper"
            }
        ]
    },
    {
        "question": "how many exhibition subjects are in nature interrupted?",
        "qid": "4302933007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Nature Interrupted": "m.04l246c"
        },
        "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04l246c)))))",
        "actions": [
            "get_relations(m.04l246c)",
            "get_neighbors(m.04l246c,exhibitions.exhibition.exhibition_types)",
            "get_relations(#0)",
            "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
            "get_relations(#1)",
            "get_neighbors(#1,exhibitions.exhibition.subjects)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "15"
            }
        ]
    },
    {
        "question": "how many contents about radio documentary were produced by the producer of small things considered?",
        "qid": "4303008000000_grailqa",
        "source": "grailqa",
        "entities": {
            "Radio documentary": "m.03hxd3",
            "Small Things Considered": "m.05v2fbl"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.03hxd3) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.05v2fbl)))))",
        "actions": [
            "get_relations(m.03hxd3)",
            "get_neighbors(m.03hxd3,broadcast.genre.content)",
            "get_relations(m.05v2fbl)",
            "get_neighbors(m.05v2fbl,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what is a common maldivian cuisine dish that contains tuna fish?",
        "qid": "4301356015000_grailqa",
        "source": "grailqa",
        "entities": {
            "tuna fish": "m.0cj45",
            "Maldivian cuisine": "m.02rzrkf"
        },
        "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0cj45) (JOIN (R dining.cuisine.dishes) m.02rzrkf))))",
        "actions": [
            "get_relations(m.0cj45)",
            "get_neighbors(m.0cj45,food.ingredient.dishes)",
            "get_relations(m.02rzrkf)",
            "get_neighbors(m.02rzrkf,dining.cuisine.dishes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,food.dish.type_of_dish1)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n47s4r",
                "entity_name": "Paste"
            }
        ]
    },
    {
        "question": "a digital camera that has the color filter array type of bayer and iso settings of 12800 has what sensor type?",
        "qid": "4300861009000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "12800": "m.04sy2g0"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.04sy2g0))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.04sy2g0)",
            "get_neighbors(m.04sy2g0,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "which religion is part of the restoration and has same practices with eastern christians?",
        "qid": "4300140009000_grailqa",
        "source": "grailqa",
        "entities": {
            "The Restoration": "m.0dl7db1",
            "eastern christians": "m.0blk0"
        },
        "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.0blk0)) (JOIN religion.religion.is_part_of m.0dl7db1)))",
        "actions": [
            "get_relations(m.0blk0)",
            "get_neighbors(m.0blk0,religion.religion.practices)",
            "get_relations(#0)",
            "get_neighbors(#0,religion.religious_practice.practice_of)",
            "get_relations(m.0dl7db1)",
            "get_neighbors(m.0dl7db1,religion.religion.includes)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.058x5",
                "entity_name": "Mormonism"
            }
        ]
    },
    {
        "question": "what quantity of amusement park areas are there in florida and disneyland park parks?",
        "qid": "3206299005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Disneyland Park": "m.04cj6k",
            "florida": "m.02mv6p"
        },
        "s_expression": "(COUNT (AND amusement_parks.amusement_park_area (AND (JOIN amusement_parks.amusement_park_area.parks m.04cj6k) (JOIN amusement_parks.amusement_park_area.parks m.02mv6p))))",
        "actions": [
            "get_relations(m.04cj6k)",
            "get_neighbors(m.04cj6k,amusement_parks.park.areas)",
            "get_relations(m.02mv6p)",
            "get_neighbors(m.02mv6p,amusement_parks.park.areas)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "what is the camera iso capability number of the iso setting used by sony cyber-shot dsc-w130 and nikon coolpix l6?",
        "qid": "3205827005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Sony Cyber-shot DSC-W130": "m.04wjkdh",
            "Nikon Coolpix L6": "m.03q2jq8"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.04wjkdh) (JOIN (R digicams.digital_camera.iso_setting) m.03q2jq8))))",
        "actions": [
            "get_relations(m.04wjkdh)",
            "get_neighbors(m.04wjkdh,digicams.digital_camera.iso_setting)",
            "get_relations(m.03q2jq8)",
            "get_neighbors(m.03q2jq8,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "the m5 and dkw 3=6 are in which class of automobiles?",
        "qid": "4301079008000_grailqa",
        "source": "grailqa",
        "entities": {
            "DKW 3=6": "m.03qj3_x",
            "m5": "m.04dvgq"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.03qj3_x)) (JOIN automotive.automotive_class.examples m.04dvgq)))",
        "actions": [
            "get_relations(m.03qj3_x)",
            "get_neighbors(m.03qj3_x,automotive.model.predecessor)",
            "get_relations(#0)",
            "get_neighbors(#0,automotive.model.automotive_class)",
            "get_relations(m.04dvgq)",
            "get_neighbors(m.04dvgq,automotive.model.automotive_class)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.021mp2",
                "entity_name": "Sedan"
            }
        ]
    },
    {
        "question": "What type of guitar is played by the composer of Through Glass?",
        "qid": "WebQTest-1279_b711a2a4cbd4a6cc3bebde944f325016_cwq",
        "source": "cwq",
        "entities": {
            "Guitar": "m.0342h",
            "Through Glass": "m.0fs34n"
        },
        "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.composer.compositions m.0fs34n)) (JOIN music.instrument.family m.0342h))",
        "actions": [
            "get_relations(m.0fs34n)",
            "get_neighbors(m.0fs34n,music.composition.composer)",
            "get_relations(#0)",
            "get_neighbors(#0,music.group_member.instruments_played)",
            "get_relations(m.0342h)",
            "get_neighbors(m.0342h,music.instrument.variation)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.018vs",
                "answer_type": "Entity",
                "entity_name": "Bass guitar"
            }
        ]
    },
    {
        "question": "what is the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 120?",
        "qid": "4300861022000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "120": "m.04pf295"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.04pf295))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.04pf295)",
            "get_neighbors(m.04pf295,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            }
        ]
    },
    {
        "question": "what kind of viewfinder does the matsushita electric industrial's camera with a sensor that compresses image files into mts use?",
        "qid": "4302274007000_grailqa",
        "source": "grailqa",
        "entities": {
            "mts": "m.042zv3q",
            "matsushita electric industrial": "m.0nk5b"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.042zv3q) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.0nk5b))))",
        "actions": [
            "get_relations(m.042zv3q)",
            "get_neighbors(m.042zv3q,digicams.camera_compressed_format.cameras)",
            "get_relations(m.0nk5b)",
            "get_neighbors(m.0nk5b,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.026krtn",
                "entity_name": "Live preview"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.036132",
                "entity_name": "Electronic viewfinder"
            }
        ]
    },
    {
        "question": "what quantity of breed from swiss confederation share the same temperament with the toy bulldog?",
        "qid": "4303460006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Toy Bulldog": "m.038wvd",
            "swiss confederation": "m.06mzp"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.06mzp)) (JOIN (R biology.animal_breed.temperament) m.038wvd))))",
        "actions": [
            "get_relations(m.06mzp)",
            "get_neighbors(m.06mzp,biology.breed_origin.breeds_originating_here)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.038wvd)",
            "get_neighbors(m.038wvd,biology.animal_breed.temperament)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "question": "name the camera storage type supported by pentax optio s60 and a digital camera with an iso setting of 2500.",
        "qid": "4302372008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Pentax Optio S60": "m.03q2lk_",
            "2500": "m.0h27q8w"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.0h27q8w)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2lk_)))",
        "actions": [
            "get_relations(m.0h27q8w)",
            "get_neighbors(m.0h27q8w,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.03q2lk_)",
            "get_neighbors(m.03q2lk_,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            }
        ]
    },
    {
        "question": "what is the total number of infectious diseases that can be transmitted by a mosquito?",
        "qid": "4303160008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Mosquito": "m.09f96"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.09f96)))))",
        "actions": [
            "get_relations(m.09f96)",
            "get_neighbors(m.09f96,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "110"
            }
        ]
    },
    {
        "question": "which are automotive classes of 1957 ford in the model of 1999 dodge charger concept?",
        "qid": "4300308014000_grailqa",
        "source": "grailqa",
        "entities": {
            "1957 Ford": "m.0gm1g3",
            "1999 Dodge Charger Concept": "m.0f7xbh"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN (R automotive.model.automotive_class) m.0gm1g3) (JOIN automotive.automotive_class.examples (JOIN automotive.model.model_years m.0f7xbh))))",
        "actions": [
            "get_relations(m.0gm1g3)",
            "get_neighbors(m.0gm1g3,automotive.model.automotive_class)",
            "get_relations(m.0f7xbh)",
            "get_neighbors(m.0f7xbh,automotive.model_year.model)",
            "get_relations(#1)",
            "get_neighbors(#1,automotive.model.automotive_class)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d1dj",
                "entity_name": "Coup\u00e9"
            }
        ]
    },
    {
        "question": "What kind of government does the country where Alvaro Gil Cabral was born in have?",
        "qid": "WebQTrn-2060_aae1720ca8d746eb8883d69655f9e1e0_cwq",
        "source": "cwq",
        "entities": {
            "Spain": "m.06mkj",
            "alvaro gil cabral": "g.121r_b9t"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.121r_b9t)))",
        "actions": [
            "get_relations(m.06mkj)",
            "get_neighbors(m.06mkj,location.country.form_of_government)",
            "get_relations(g.121r_b9t)",
            "get_neighbors(g.121r_b9t,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.04szc",
                "answer_type": "Entity",
                "entity_name": "Monarchy"
            }
        ]
    },
    {
        "question": "which is the number of automotive classes which are examples of ford falcon (xy) and fpv f6?",
        "qid": "3206121004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ford Falcon (XY)": "m.02rstw2",
            "FPV F6": "m.0dr0bd"
        },
        "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.02rstw2) (JOIN automotive.automotive_class.examples m.0dr0bd))))",
        "actions": [
            "get_relations(m.02rstw2)",
            "get_neighbors(m.02rstw2,automotive.model.automotive_class)",
            "get_relations(m.0dr0bd)",
            "get_neighbors(m.0dr0bd,automotive.model.automotive_class)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "a + and c++ programming language use programming language paradigm what is the other program language influenced by?",
        "qid": "4300798010000_grailqa",
        "source": "grailqa",
        "entities": {
            "c++ programming language": "m.0jgqg",
            "a +": "m.03m66l"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.0jgqg) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.03m66l))))",
        "actions": [
            "get_relations(m.0jgqg)",
            "get_neighbors(m.0jgqg,computer.programming_language.language_paradigms)",
            "get_relations(m.03m66l)",
            "get_neighbors(m.03m66l,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "Which child of Ike and Tina Turner was born in LA?",
        "qid": "WebQTest-1655_6fde3c0b416bc40ae3692db7df6a6c53_cwq",
        "source": "cwq",
        "entities": {
            "Tina Turner": "m.01vwyqp",
            "ike": "m.0dbzg",
            "la": "m.030qb3t"
        },
        "s_expression": "(AND (JOIN (R people.person.children) m.01vwyqp) (AND (JOIN people.person.parents m.0dbzg) (JOIN people.person.place_of_birth m.030qb3t)))",
        "actions": [
            "get_relations(m.01vwyqp)",
            "get_neighbors(m.01vwyqp,people.person.children)",
            "get_relations(m.0dbzg)",
            "get_neighbors(m.0dbzg,people.person.children)",
            "get_relations(m.030qb3t)",
            "get_neighbors(m.030qb3t,location.location.people_born_here)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_argument": "m.0ggl36p",
                "answer_type": "Entity",
                "entity_name": "Ronnie Turner"
            }
        ]
    },
    {
        "question": "how many active websites are owned by media tools ltd.?",
        "qid": "3206340001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "Media Tools Ltd.": "m.01285gc2"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.01285gc2))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.01285gc2)",
            "get_neighbors(m.01285gc2,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "which person designed the imac dv and next computer?",
        "qid": "4301299014000_grailqa",
        "source": "grailqa",
        "entities": {
            "NeXT Computer": "m.04_1mz4",
            "imac dv": "m.02p3xw8"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.02p3xw8)) (JOIN (R computer.computer.key_designers) m.04_1mz4)))",
        "actions": [
            "get_relations(m.02p3xw8)",
            "get_neighbors(m.02p3xw8,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.04_1mz4)",
            "get_neighbors(m.04_1mz4,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3r",
                "entity_name": "Steve Jobs"
            }
        ]
    },
    {
        "question": "reflections on community development: stories from bedford stuyvesant restoration corporation has how many exhibition subjects?",
        "qid": "4302933006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Reflections on Community Development: Stories from Bedford Stuyvesant Restoration Corporation": "m.04kwpfb"
        },
        "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04kwpfb)))))",
        "actions": [
            "get_relations(m.04kwpfb)",
            "get_neighbors(m.04kwpfb,exhibitions.exhibition.exhibition_types)",
            "get_relations(#0)",
            "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
            "get_relations(#1)",
            "get_neighbors(#1,exhibitions.exhibition.subjects)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "41"
            }
        ]
    },
    {
        "question": "When was the last time did the team that plays its home games at MCU Park won the World Series?",
        "qid": "WebQTest-1556_97aaf1de55537c27da2ebda0f76491ab_cwq",
        "source": "cwq",
        "entities": {
            "MCU Park": "m.02y110"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.02y110)) time.event.end_date)",
        "actions": [
            "get_relations(m.02y110)",
            "get_neighbors(m.02y110,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q9lc",
                "answer_type": "Entity",
                "entity_name": "1986 World Series"
            }
        ]
    },
    {
        "question": "what other rocket did the manufacturer of saturn int-21 and delta 2 create?",
        "qid": "4300129011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Saturn INT-21": "m.0d8cz_",
            "delta 2": "m.026j5q"
        },
        "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.0d8cz_) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.026j5q))))",
        "actions": [
            "get_relations(m.0d8cz_)",
            "get_neighbors(m.0d8cz_,spaceflight.rocket.manufacturer)",
            "get_relations(m.026j5q)",
            "get_neighbors(m.026j5q,spaceflight.rocket.manufacturer)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0269d32",
                "entity_name": "Saturn-Shuttle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_9dl",
                "entity_name": "Delta IV"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pvlp",
                "entity_name": "Delta III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dqk5f",
                "entity_name": "Ares I"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fbp58",
                "entity_name": "Saturn INT-20"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07932",
                "entity_name": "Saturn V"
            }
        ]
    },
    {
        "question": "casio exilim ex-z75 supports which storage type along with the digital camera with iso setting of high iso auto?",
        "qid": "4302372001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Casio Exilim EX-Z75": "m.03q2qv9",
            "High ISO Auto": "m.02nqg65"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.02nqg65)) (JOIN (R digicams.digital_camera.supported_storage_types) m.03q2qv9)))",
        "actions": [
            "get_relations(m.02nqg65)",
            "get_neighbors(m.02nqg65,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.03q2qv9)",
            "get_neighbors(m.03q2qv9,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0220vm1",
                "entity_name": "SDHC Card"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z76m",
                "entity_name": "MultiMediaCard"
            }
        ]
    },
    {
        "question": "what isos are currently supported by d40x cameras from unknown?",
        "qid": "4304013004000_grailqa",
        "source": "grailqa",
        "entities": {
            "d40x": "m.02pv_hy",
            "Unknown": "m.01xrf_0"
        },
        "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.02pv_hy) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.01xrf_0))))",
        "actions": [
            "get_relations(m.02pv_hy)",
            "get_neighbors(m.02pv_hy,digicams.digital_camera.iso_setting)",
            "get_relations(m.01xrf_0)",
            "get_neighbors(m.01xrf_0,digicams.camera_sensor_manufacturer.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.iso_setting)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_x",
                "entity_name": "100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_7",
                "entity_name": "Auto"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_g",
                "entity_name": "400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_p",
                "entity_name": "200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg51",
                "entity_name": "1600"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg58",
                "entity_name": "800"
            }
        ]
    },
    {
        "question": "what is the number of active websites owned by vivek rp?",
        "qid": "3206340003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "Vivek Rp": "m.0gj5q3j"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.0gj5q3j))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.0gj5q3j)",
            "get_neighbors(m.0gj5q3j,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "which unit mass that shares the same unit as joule per cubic metre has the maximum weight mass in kilograms?",
        "qid": "4302823002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Joule per cubic metre": "m.02sj51f"
        },
        "s_expression": "(ARGMAX (AND measurement_unit.mass_unit (JOIN (R measurement_unit.measurement_system.weight_units) (JOIN (R measurement_unit.energy_density_unit.measurement_system) m.02sj51f))) measurement_unit.mass_unit.weightmass_in_kilograms)",
        "actions": [
            "get_relations(m.02sj51f)",
            "get_neighbors(m.02sj51f,measurement_unit.energy_density_unit.measurement_system)",
            "get_relations(#0)",
            "get_neighbors(#0,measurement_unit.measurement_system.weight_units)",
            "get_attributes(#1)",
            "argmax(#1,measurement_unit.mass_unit.weightmass_in_kilograms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ny7",
                "entity_name": "Tonne"
            }
        ]
    },
    {
        "question": "What are the movies starring Adam Sandler that involved National Film Board of Cananda?",
        "qid": "WebQTrn-1677_22837422e25cf0a05cb0efba9aa80402_cwq",
        "source": "cwq",
        "entities": {
            "Adam Sandler": "m.0pz91",
            "national film board of cananda": "m.014l4w"
        },
        "s_expression": "(AND (JOIN (R film.producer.film) m.0pz91) (JOIN film.film.genre (JOIN organization.organization_sector.organizations_in_this_sector m.014l4w)))",
        "actions": [
            "get_relations(m.0pz91)",
            "get_neighbors(m.0pz91,film.producer.film)",
            "get_relations(m.014l4w)",
            "get_neighbors(m.014l4w,organization.organization.sectors)",
            "get_relations(#1)",
            "get_neighbors(#1,film.film_genre.films_in_this_genre)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.010rdrd1"
            },
            {
                "answer_argument": "m.02m7tn"
            }
        ]
    },
    {
        "question": "how many religious practices are there that practices jehovah's witness and mormonites?",
        "qid": "3204573007000_grailqa",
        "source": "grailqa",
        "entities": {
            "jehovah's witness": "m.0dtdq",
            "mormonites": "m.058x5"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.0dtdq) (JOIN (R religion.religion.practices) m.058x5))))",
        "actions": [
            "get_relations(m.0dtdq)",
            "get_neighbors(m.0dtdq,religion.religion.practices)",
            "get_relations(m.058x5)",
            "get_neighbors(m.058x5,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "which political ideology does the people's monarchist party and queensland state election, 1977 follow?",
        "qid": "4302370001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Queensland state election, 1977": "m.025_983",
            "People's Monarchist Party": "m.069gcq"
        },
        "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.025_983)) (JOIN (R government.political_party.ideology) m.069gcq)))",
        "actions": [
            "get_relations(m.025_983)",
            "get_neighbors(m.025_983,government.parliamentary_election.government_formed_by)",
            "get_relations(#0)",
            "get_neighbors(#0,government.political_party.ideology)",
            "get_relations(m.069gcq)",
            "get_neighbors(m.069gcq,government.political_party.ideology)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yqp",
                "entity_name": "Conservatism"
            }
        ]
    },
    {
        "question": "which visual art form is made by maya ying lin besides installation art?",
        "qid": "4302283015000_grailqa",
        "source": "grailqa",
        "entities": {
            "maya ying lin": "m.04vdx",
            "Installation art": "m.012z_m"
        },
        "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.04vdx) (JOIN visual_art.artwork.art_form m.012z_m))))",
        "actions": [
            "get_relations(m.04vdx)",
            "get_neighbors(m.04vdx,visual_art.visual_artist.artworks)",
            "get_relations(m.012z_m)",
            "get_neighbors(m.012z_m,visual_art.visual_art_form.artworks)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,visual_art.artwork.art_form)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06msq",
                "entity_name": "Sculpture"
            }
        ]
    },
    {
        "question": "on the third day and a multi-part musical release labelled apple records were produced by who?",
        "qid": "4301847007000_grailqa",
        "source": "grailqa",
        "entities": {
            "On the Third Day": "m.031ql_f",
            "Apple Records": "m.019n_t"
        },
        "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.019n_t)) (JOIN (R music.release.producers) m.031ql_f)))",
        "actions": [
            "get_relations(m.019n_t)",
            "get_neighbors(m.019n_t,music.record_label.releases)",
            "get_relations(#0)",
            "get_neighbors(#0,music.release.producers)",
            "get_relations(m.031ql_f)",
            "get_neighbors(m.031ql_f,music.release.producers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0473q",
                "entity_name": "Jeff Lynne"
            }
        ]
    },
    {
        "question": "what is the number of canadian whiskey blends with corn whiskey with scotch are there?",
        "qid": "4302561004000_grailqa",
        "source": "grailqa",
        "entities": {
            "scotch": "m.01k5lq",
            "canadian whiskey": "m.0212n",
            "Corn whiskey": "m.01yr36"
        },
        "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01k5lq) (AND (JOIN distilled_spirits.blended_spirit.style m.0212n) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01yr36)))))",
        "actions": [
            "get_relations(m.01k5lq)",
            "get_neighbors(m.01k5lq,distilled_spirits.distilled_spirit_type.blends)",
            "get_relations(m.0212n)",
            "get_neighbors(m.0212n,distilled_spirits.blended_spirit_style.blends)",
            "get_relations(m.01yr36)",
            "get_neighbors(m.01yr36,distilled_spirits.distilled_spirit_type.blends)",
            "intersection(#1,#2)",
            "intersection(#0,#3)",
            "count(#4)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what programming language paradigm is followed by programming languages such as abc and derivatives of icon?",
        "qid": "4300417013000_grailqa",
        "source": "grailqa",
        "entities": {
            "ABC": "m.012whz",
            "Icon": "m.03tr0"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.03tr0)) (JOIN (R computer.programming_language.language_paradigms) m.012whz)))",
        "actions": [
            "get_relations(m.03tr0)",
            "get_neighbors(m.03tr0,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.012whz)",
            "get_neighbors(m.012whz,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05yd5",
                "entity_name": "Procedural programming"
            }
        ]
    },
    {
        "question": "games developed by frontier developments and distributed through wii ware released where?",
        "qid": "4301141021000_grailqa",
        "source": "grailqa",
        "entities": {
            "wii ware": "m.03hfyj6",
            "Frontier Developments": "m.069dh8"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.069dh8))))",
        "actions": [
            "get_relations(m.03hfyj6)",
            "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.069dh8)",
            "get_neighbors(m.069dh8,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.075g54v",
                "entity_name": "Wii/DS NA"
            }
        ]
    },
    {
        "question": "What Hilltop Park sports stadium houses home games?",
        "qid": "WebQTrn-52_1afd5634cb719e3b77b4345510599ca8_cwq",
        "source": "cwq",
        "entities": {
            "Hilltop Park": "m.039nhz"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) (JOIN sports.sports_team.arena_stadium m.039nhz)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.039nhz)",
            "get_neighbors(m.039nhz,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.arena_stadium)",
            "get_attributes(#1)",
            "argmax(#1,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.01_gsg",
                "answer_type": "Entity",
                "entity_name": "AT&T Park"
            }
        ]
    },
    {
        "question": "what programming language paradigm is used by hy and another programming language influenced by lfe?",
        "qid": "4300798014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hy": "m.011smwfp",
            "LFE": "m.0_82v0s"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.011smwfp) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.0_82v0s))))",
        "actions": [
            "get_relations(m.011smwfp)",
            "get_neighbors(m.011smwfp,computer.programming_language.language_paradigms)",
            "get_relations(m.0_82v0s)",
            "get_neighbors(m.0_82v0s,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "what number of camera iso capability are utilized in the iso setting by pentax k110d and sony cyber-shot dsc-w150?",
        "qid": "3205827008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Pentax K110D": "m.02pm0z5",
            "Sony Cyber-shot DSC-W150": "m.04wjky8"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.02pm0z5) (JOIN (R digicams.digital_camera.iso_setting) m.04wjky8))))",
        "actions": [
            "get_relations(m.02pm0z5)",
            "get_neighbors(m.02pm0z5,digicams.digital_camera.iso_setting)",
            "get_relations(m.04wjky8)",
            "get_neighbors(m.04wjky8,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "6"
            }
        ]
    },
    {
        "question": "Which structure in downtown Chicago opened most recently?",
        "qid": "WebQTrn-825_402d2dd9cab43436b0fb03a9fca57784_cwq",
        "source": "cwq",
        "entities": {
            "Chicago": "m.01_d4"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) architecture.structure.opened)",
        "actions": [
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,location.location.contains)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,architecture.structure.opened)"
        ],
        "answer": [
            {
                "answer_argument": "m.06_7k",
                "answer_type": "Entity",
                "entity_name": "Willis Tower"
            }
        ]
    },
    {
        "question": "how many different breeds from czech republic share the same temperament as the brazilian terrier?",
        "qid": "4303460004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Brazilian Terrier": "m.08c5h8",
            "Czech Republic": "m.01mjq"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.01mjq)) (JOIN (R biology.animal_breed.temperament) m.08c5h8))))",
        "actions": [
            "get_relations(m.01mjq)",
            "get_neighbors(m.01mjq,biology.breed_origin.breeds_originating_here)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.08c5h8)",
            "get_neighbors(m.08c5h8,biology.animal_breed.temperament)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "question": "what is the political ideology followed by the national liberal party and the australian federal election, 2004?",
        "qid": "4302370007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Australian federal election, 2004": "m.02br3q",
            "National Liberal Party": "m.02m99c"
        },
        "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.02br3q)) (JOIN (R government.political_party.ideology) m.02m99c)))",
        "actions": [
            "get_relations(m.02br3q)",
            "get_neighbors(m.02br3q,government.parliamentary_election.government_formed_by)",
            "get_relations(#0)",
            "get_neighbors(#0,government.political_party.ideology)",
            "get_relations(m.02m99c)",
            "get_neighbors(m.02m99c,government.political_party.ideology)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04hbc",
                "entity_name": "Liberalism"
            }
        ]
    },
    {
        "question": "the core text of abrahamic faiths that is honored by shabbat practitioners is called what?",
        "qid": "4300898007000_grailqa",
        "source": "grailqa",
        "entities": {
            "abrahamic faiths": "m.0f_h6",
            "Shabbat": "m.0747p"
        },
        "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0f_h6) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.0747p))))",
        "actions": [
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.texts)",
            "get_relations(m.0747p)",
            "get_neighbors(m.0747p,religion.religious_practice.practice_of)",
            "get_relations(#1)",
            "get_neighbors(#1,religion.religion.texts)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gn9",
                "entity_name": "Tanakh"
            }
        ]
    },
    {
        "question": "which character lives in the fictional bandaran island chain of the sacred band of stepsons universe?",
        "qid": "4300742007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Bandaran island chain": "m.0d4qny9",
            "The Sacred Band of Stepsons universe": "m.0ch8hcq"
        },
        "s_expression": "(AND fictional_universe.fictional_character (JOIN fictional_universe.fictional_character.places_lived (AND (JOIN fictional_universe.fictional_setting.setting_type m.0d4qny9) (JOIN (R fictional_universe.fictional_universe.locations) m.0ch8hcq))))",
        "actions": [
            "get_relations(m.0d4qny9)",
            "get_neighbors(m.0d4qny9,fictional_universe.type_of_fictional_setting.settings)",
            "get_relations(m.0ch8hcq)",
            "get_neighbors(m.0ch8hcq,fictional_universe.fictional_universe.locations)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,fictional_universe.fictional_setting.characters_that_have_lived_here)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxw253",
                "entity_name": "Cyrus, shape-changer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cvc9fk",
                "entity_name": "Sturm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxj80p",
                "entity_name": "Tempus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg08q",
                "entity_name": "Randal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxtyd0",
                "entity_name": "Roxane, Nisibisi witch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg05_",
                "entity_name": "Niko"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxtt5p",
                "entity_name": "Askelon of Meridian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxttn0",
                "entity_name": "Jihan, Froth Daughter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cms8kp",
                "entity_name": "Kouras"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg093",
                "entity_name": "Arton"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3vjqr",
                "entity_name": "Nino"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0mpkv",
                "entity_name": "Stormbringer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3w0tt",
                "entity_name": "Bandaran adepts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cvc9f6",
                "entity_name": "Levitas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b_k83w",
                "entity_name": "Tabet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck6018",
                "entity_name": "Jamad"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0bpb_",
                "entity_name": "Shamshi, Stepson"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck601y",
                "entity_name": "Macon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dgdw91",
                "entity_name": "Nameless adepts"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck601h",
                "entity_name": "King Genos"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dwxf_",
                "entity_name": "Seth"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ck601q",
                "entity_name": "Crevis"
            }
        ]
    },
    {
        "question": "Which form of government was practiced within Sparta and within the countries ruled by Philip III of Spain?",
        "qid": "WebQTrn-73_12781e726ed82c2dac09fcd2dce236fb_cwq",
        "source": "cwq",
        "entities": {
            "Sparta": "m.09472",
            "Philip III of Spain": "m.012rkn"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN royalty.kingdom.rulers m.012rkn)))",
        "actions": [
            "get_relations(m.09472)",
            "get_neighbors(m.09472,location.country.form_of_government)",
            "get_relations(m.012rkn)",
            "get_neighbors(m.012rkn,royalty.monarch.kingdom)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.04szc",
                "answer_type": "Entity",
                "entity_name": "Monarchy"
            }
        ]
    },
    {
        "question": "which department of columbia u does sang-wook cheong work in?",
        "qid": "4301362002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Sang-Wook Cheong": "m.0105mj92",
            "columbia u": "m.01w5m"
        },
        "s_expression": "(AND education.department (AND (JOIN education.department.field (JOIN education.field_of_study.academics_in_this_field m.0105mj92)) (JOIN (R education.university.departments) m.01w5m)))",
        "actions": [
            "get_relations(m.0105mj92)",
            "get_neighbors(m.0105mj92,education.academic.research_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,education.field_of_study.academic_departments)",
            "get_relations(m.01w5m)",
            "get_neighbors(m.01w5m,education.university.departments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dbg1p",
                "entity_name": "Columbia University Department of Physics"
            }
        ]
    },
    {
        "question": "how many active websites are owned by monsoon multimedia?",
        "qid": "3206340012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "Monsoon Multimedia": "m.02v_qm2"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.02v_qm2))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.02v_qm2)",
            "get_neighbors(m.02v_qm2,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many practices are there that practices protestantism and anglicans?",
        "qid": "3204573010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Protestantism": "m.05sfs",
            "anglicans": "m.0n2g"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.05sfs) (JOIN (R religion.religion.practices) m.0n2g))))",
        "actions": [
            "get_relations(m.05sfs)",
            "get_neighbors(m.05sfs,religion.religion.practices)",
            "get_relations(m.0n2g)",
            "get_neighbors(m.0n2g,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "there exists a musical release produced by angel in my heart and labelled virgin records, what is it?",
        "qid": "4301990013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Angel in My Heart": "m.0mw22q",
            "Virgin Records": "m.0n85g"
        },
        "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0mw22q)) (JOIN music.release.label m.0n85g)))",
        "actions": [
            "get_relations(m.0mw22q)",
            "get_neighbors(m.0mw22q,music.recording.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,music.producer.releases_produced)",
            "get_relations(m.0n85g)",
            "get_neighbors(m.0n85g,music.record_label.releases)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01kf2vl",
                "entity_name": "Northern Star"
            }
        ]
    },
    {
        "question": "What time is it in Texas at the Tulsa International Airport?",
        "qid": "WebQTrn-464_72ce675be82a5655a30547169d8008e9_cwq",
        "source": "cwq",
        "entities": {
            "Texas": "m.07b_l",
            "Tulsa International Airport": "m.01qgx3"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01qgx3)))",
        "actions": [
            "get_relations(m.07b_l)",
            "get_neighbors(m.07b_l,location.location.time_zones)",
            "get_relations(m.01qgx3)",
            "get_neighbors(m.01qgx3,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02fqwt"
            }
        ]
    },
    {
        "question": "Which timezone is Kansas in that is also a location near Strathmore (dj Murray) airport?",
        "qid": "WebQTrn-2514_cab1228be4e8c16ee35a67b7ac63b264_cwq",
        "source": "cwq",
        "entities": {
            "Kansas": "m.0488g",
            "strathmore (dj murray) airport": "m.09slsk"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.0488g) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
        "actions": [
            "get_relations(m.0488g)",
            "get_neighbors(m.0488g,location.location.time_zones)",
            "get_relations(m.09slsk)",
            "get_neighbors(m.09slsk,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hczc",
                "answer_type": "Entity",
                "entity_name": "Mountain Time Zone"
            }
        ]
    },
    {
        "question": "what programming language paradigm do programming laguages such as livescript and derivatives of lisp follow?",
        "qid": "4300417000000_grailqa",
        "source": "grailqa",
        "entities": {
            "LiveScript": "m.0_l9rcz",
            "Lisp": "m.04kyw"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04kyw)) (JOIN (R computer.programming_language.language_paradigms) m.0_l9rcz)))",
        "actions": [
            "get_relations(m.04kyw)",
            "get_neighbors(m.04kyw,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.0_l9rcz)",
            "get_neighbors(m.0_l9rcz,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "what is the name of the most recently formed cyclone in the same category as typhoon sanba?",
        "qid": "4303808002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Typhoon Sanba": "m.0n49xww"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0n49xww))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.0n49xww)",
            "get_neighbors(m.0n49xww,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0z2p66v",
                "entity_name": "Typhoon Haiyan"
            }
        ]
    },
    {
        "question": "which storage type is supported by sony alpha 850 and those with color filter array of foveon x3 sensor?",
        "qid": "4302099007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Sony Alpha 850": "m.06_v4pc",
            "Foveon X3 sensor": "m.02g86w"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.06_v4pc) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02g86w))))",
        "actions": [
            "get_relations(m.06_v4pc)",
            "get_neighbors(m.06_v4pc,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.02g86w)",
            "get_neighbors(m.02g86w,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01rlj7",
                "entity_name": "CompactFlash"
            }
        ]
    },
    {
        "question": "what is the number of active websites owned by linkedin corporation?",
        "qid": "3206340011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "LinkedIn Corporation": "m.0w03805"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.0w03805))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.0w03805)",
            "get_neighbors(m.0w03805,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what science discipline does newtonian science conduct research in?",
        "qid": "4302233004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Science": "m.06mq7",
            "newtonian science": "m.03s9v"
        },
        "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.06mq7) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.03s9v))))",
        "actions": [
            "get_relations(m.06mq7)",
            "get_neighbors(m.06mq7,education.field_of_study.subdisciplines)",
            "get_relations(m.03s9v)",
            "get_neighbors(m.03s9v,education.academic.research_areas)",
            "get_relations(#1)",
            "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.09pz7",
                "entity_name": "Natural science"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09vvxv",
                "entity_name": "Formal science"
            }
        ]
    },
    {
        "question": "what are the diseases transmitted through sex that have the same type of infectious agents as tuberculosis?",
        "qid": "481000400_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Sex": "m.06ng1",
            "Tuberculosis": "m.07jwr"
        },
        "s_expression": "(AND medicine.infectious_disease (AND (JOIN (R medicine.transmission_route.infections_that_travel_this_way) m.06ng1) (JOIN medicine.infectious_disease.infectious_agent_type (JOIN medicine.type_of_infectious_agent.diseases m.07jwr))))",
        "actions": [
            "get_relations(m.06ng1)",
            "get_neighbors(m.06ng1,medicine.transmission_route.infections_that_travel_this_way)",
            "get_relations(m.07jwr)",
            "get_neighbors(m.07jwr,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "question": "What type of government is used in the UK where Emanuel Lasker was born?",
        "qid": "WebQTest-659_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "UK": "m.07ssc",
            "Emanuel Lasker": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.07ssc) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.07ssc)",
            "get_neighbors(m.07ssc,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "which staple scottish food dishes contain chicken meat?",
        "qid": "4301356005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Chicken meat": "m.0f25w9",
            "scottish food": "m.0ftx68"
        },
        "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.0f25w9) (JOIN (R dining.cuisine.dishes) m.0ftx68))))",
        "actions": [
            "get_relations(m.0f25w9)",
            "get_neighbors(m.0f25w9,food.ingredient.dishes)",
            "get_relations(m.0ftx68)",
            "get_neighbors(m.0ftx68,dining.cuisine.dishes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,food.dish.type_of_dish1)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z1m1x",
                "entity_name": "Soup"
            }
        ]
    },
    {
        "question": "What drug killed the artist who went on Moment of Truth World Tour?",
        "qid": "WebQTrn-2600_d695af9f3b17666dd434043cacddafe1_cwq",
        "source": "cwq",
        "entities": {
            "Drug overdose": "m.01tf_6",
            "Moment of Truth World Tour": "m.04crr_4"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.04crr_4)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
        "actions": [
            "get_relations(m.04crr_4)",
            "get_neighbors(m.04crr_4,music.concert_tour.artist)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.01tf_6)",
            "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02nx6jb",
                "answer_type": "Entity",
                "entity_name": "Cocaine overdose"
            }
        ]
    },
    {
        "question": "which programming language paradigm does dialect and java programming language follow?",
        "qid": "4300417001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Dialect": "m.03cmd8m",
            "java programming language": "m.07sbkfb"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.07sbkfb)) (JOIN (R computer.programming_language.language_paradigms) m.03cmd8m)))",
        "actions": [
            "get_relations(m.07sbkfb)",
            "get_neighbors(m.07sbkfb,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.03cmd8m)",
            "get_neighbors(m.03cmd8m,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            }
        ]
    },
    {
        "question": "What year did Steve Bisciotti's team win the Superbowl?",
        "qid": "WebQTrn-2136_8d86dc5e03446f0e50fd69bc06ae0658_cwq",
        "source": "cwq",
        "entities": {
            "superbowl": "m.06x5s",
            "Steve Bisciotti": "m.06x8mf"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.06x8mf)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.06x8mf)",
            "get_neighbors(m.06x8mf,sports.sports_team_owner.teams_owned)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVII"
            },
            {
                "answer_argument": "m.076yq",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXXV"
            }
        ]
    },
    {
        "question": "Where do most of the people who subscribe to the newspaper Akher Saa live?",
        "qid": "WebQTrn-3037_3b676cf5603d91ac09fd09d3697b68fb_cwq",
        "source": "cwq",
        "entities": {
            "Akher Saa": "m.05f4_4z"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN periodicals.newspaper_circulation_area.newspapers m.05f4_4z)) topic_server.population_number)",
        "actions": [
            "get_relations(m.05f4_4z)",
            "get_neighbors(m.05f4_4z,book.newspaper.circulation_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "what sort of programming language paradigm is followed by programming languages such as qi and derivatives of lambda calculus?",
        "qid": "4300417009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Qi": "m.02prj6h",
            "Lambda calculus": "m.04mg4"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04mg4)) (JOIN (R computer.programming_language.language_paradigms) m.02prj6h)))",
        "actions": [
            "get_relations(m.04mg4)",
            "get_neighbors(m.04mg4,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.02prj6h)",
            "get_neighbors(m.02prj6h,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "what are the number of religious practices that practice buddhism and krishna consciousness?",
        "qid": "3204573006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Buddhism": "m.092bf5",
            "krishna consciousness": "m.017j3y"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.092bf5) (JOIN (R religion.religion.practices) m.017j3y))))",
        "actions": [
            "get_relations(m.092bf5)",
            "get_neighbors(m.092bf5,religion.religion.practices)",
            "get_relations(m.017j3y)",
            "get_neighbors(m.017j3y,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "the same rocket manufacturer who manufactured ares i and saturn-v created what other rocket?",
        "qid": "4300129004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ares I": "m.0dqk5f",
            "saturn-v": "m.07932"
        },
        "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.0dqk5f) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.07932))))",
        "actions": [
            "get_relations(m.0dqk5f)",
            "get_neighbors(m.0dqk5f,spaceflight.rocket.manufacturer)",
            "get_relations(m.07932)",
            "get_neighbors(m.07932,spaceflight.rocket.manufacturer)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0269d32",
                "entity_name": "Saturn-Shuttle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_9dl",
                "entity_name": "Delta IV"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03pvlp",
                "entity_name": "Delta III"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d8cz_",
                "entity_name": "Saturn INT-21"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fbp58",
                "entity_name": "Saturn INT-20"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026j5q",
                "entity_name": "Delta II"
            }
        ]
    },
    {
        "question": "which types of storage are compatible with casio exilim ex-v8 as well as color filter array of bayer?",
        "qid": "4302099013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Casio Exilim EX-V8": "m.03q2ljb",
            "bayer": "m.02r8js"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2ljb) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
        "actions": [
            "get_relations(m.03q2ljb)",
            "get_neighbors(m.03q2ljb,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0220vm1",
                "entity_name": "SDHC Card"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z76m",
                "entity_name": "MultiMediaCard"
            }
        ]
    },
    {
        "question": "in united states of america how many games published by electronic arts are available?",
        "qid": "444000100_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "United States of America": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "what category of schools does london business school and the publisher of opus fall under?",
        "qid": "4301751002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Opus": "m.02x6y16",
            "London Business School": "m.02kzfw"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.02x6y16)) (JOIN (R education.educational_institution.school_type) m.02kzfw)))",
        "actions": [
            "get_relations(m.02x6y16)",
            "get_neighbors(m.02x6y16,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.02kzfw)",
            "get_neighbors(m.02kzfw,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05jxkf",
                "entity_name": "Public university"
            }
        ]
    },
    {
        "question": "which artwork on cardboard was painted in the era of dave robertson?",
        "qid": "4301655007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Dave Robertson": "m.0t52347",
            "cardboard": "m.03q7pgh"
        },
        "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.0t52347)) (JOIN visual_art.artwork.support m.03q7pgh)))",
        "actions": [
            "get_relations(m.0t52347)",
            "get_neighbors(m.0t52347,visual_art.visual_artist.associated_periods_or_movements)",
            "get_relations(#0)",
            "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
            "get_relations(m.03q7pgh)",
            "get_neighbors(m.03q7pgh,visual_art.visual_art_support.artworks)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011f2bng",
                "entity_name": "The Old Age of William Tell"
            }
        ]
    },
    {
        "question": "rocky top's sundance kid and porcelaine are breeds that share what temperament?",
        "qid": "4300459002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Rocky Top's Sundance Kid": "m.0dlnf7n",
            "Porcelaine": "m.02qllrh"
        },
        "s_expression": "(AND biology.breed_temperament (AND (JOIN (R biology.animal_breed.temperament) (JOIN (R biology.pedigreed_animal.breed) m.0dlnf7n)) (JOIN (R biology.animal_breed.temperament) m.02qllrh)))",
        "actions": [
            "get_relations(m.0dlnf7n)",
            "get_neighbors(m.0dlnf7n,biology.pedigreed_animal.breed)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.02qllrh)",
            "get_neighbors(m.02qllrh,biology.animal_breed.temperament)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kp0pq",
                "entity_name": "Active"
            }
        ]
    },
    {
        "question": "how many religious texts do christanity and church of god share?",
        "qid": "3206221001000_grailqa",
        "source": "grailqa",
        "entities": {
            "church of god": "m.02q21kx",
            "christanity": "m.01lp8"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.02q21kx) (JOIN (R religion.religion.texts) m.01lp8))))",
        "actions": [
            "get_relations(m.02q21kx)",
            "get_neighbors(m.02q21kx,religion.religion.texts)",
            "get_relations(m.01lp8)",
            "get_neighbors(m.01lp8,religion.religion.texts)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "Wehn did the team with the mascot named Benny the Bull last win the championship?",
        "qid": "WebQTrn-3707_ebbb01712f3eb1443b2895961ec14272_cwq",
        "source": "cwq",
        "entities": {
            "Benny the Bull": "m.067z_k"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.067z_k)) time.event.start_date)",
        "actions": [
            "get_relations(m.067z_k)",
            "get_neighbors(m.067z_k,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04zt01",
                "answer_type": "Entity",
                "entity_name": "1998 NBA Finals"
            }
        ]
    },
    {
        "question": "What is the ocean that the water flowing underneath the Bethanga Bridge empties into?",
        "qid": "WebQTrn-1234_7051979c1a99a094b204a20afe3b82ec_cwq",
        "source": "cwq",
        "entities": {
            "Ocean": "m.05kq4",
            "Bethanga Bridge": "m.010hrn7g"
        },
        "s_expression": "(AND (JOIN (R geography.river.mouth) (JOIN geography.body_of_water.bridges m.010hrn7g)) (JOIN geography.geographical_feature.category m.05kq4))",
        "actions": [
            "get_relations(m.010hrn7g)",
            "get_neighbors(m.010hrn7g,transportation.bridge.body_of_water_spanned)",
            "get_relations(#0)",
            "get_neighbors(#0,geography.river.mouth)",
            "get_relations(m.05kq4)",
            "get_neighbors(m.05kq4,geography.geographical_feature_category.features)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.06nqw",
                "answer_type": "Entity",
                "entity_name": "Southern Ocean"
            }
        ]
    },
    {
        "question": "the same rocket manufacturer who manufactured energia and n1 created what other rocket?\nsaturn int-20, delta iii, delta ii...",
        "qid": "4300129007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Energia": "m.09dm5",
            "N1": "m.0346nk"
        },
        "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.09dm5) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.0346nk))))",
        "actions": [
            "get_relations(m.09dm5)",
            "get_neighbors(m.09dm5,spaceflight.rocket.manufacturer)",
            "get_relations(m.0346nk)",
            "get_neighbors(m.0346nk,spaceflight.rocket.manufacturer)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0407zvl",
                "entity_name": "Sputnik"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0187hy",
                "entity_name": "Soyuz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0232bk",
                "entity_name": "Voskhod"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0283h2_",
                "entity_name": "Polyot"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027f0v8",
                "entity_name": "Soyuz-2"
            }
        ]
    },
    {
        "question": "what was the first programming language influenced by another whatwg language?",
        "qid": "4303199008000_grailqa",
        "source": "grailqa",
        "entities": {
            "WHATWG": "m.05x46k"
        },
        "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.05x46k))) computer.programming_language.introduced)",
        "actions": [
            "get_relations(m.05x46k)",
            "get_neighbors(m.05x46k,computer.programming_language_developer.programming_languages_developed)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.influenced)",
            "get_attributes(#1)",
            "argmin(#1,computer.programming_language.introduced)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bp8q",
                "entity_name": "Curl"
            }
        ]
    },
    {
        "question": "what number of contents about classical music are produced by the same producer as radio lab?",
        "qid": "4303008005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Classical music": "m.0ggq0m",
            "radio lab": "m.02rpln2"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.0ggq0m) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.02rpln2)))))",
        "actions": [
            "get_relations(m.0ggq0m)",
            "get_neighbors(m.0ggq0m,broadcast.genre.content)",
            "get_relations(m.02rpln2)",
            "get_neighbors(m.02rpln2,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "Where is the Chicago Shakespeare Theater located?",
        "qid": "WebQTrn-825_e771cad04213001ba8aae56d6e8016db_cwq",
        "source": "cwq",
        "entities": {
            "Chicago": "m.01_d4",
            "Chicago Shakespeare Theater": "m.06plzq"
        },
        "s_expression": "(AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (AND (JOIN location.location.containedby m.01_d4) (JOIN location.location.contains m.06plzq)))",
        "actions": [
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,location.location.contains)",
            "get_relations(m.06plzq)",
            "get_neighbors(m.06plzq,location.location.containedby)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_argument": "m.0c7ln",
                "answer_type": "Entity",
                "entity_name": "Navy Pier"
            }
        ]
    },
    {
        "question": "face the music and apple records were both produced by whom?",
        "qid": "4301847006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Face the Music": "m.031hssh",
            "Apple Records": "m.019n_t"
        },
        "s_expression": "(AND music.producer (AND (JOIN (R music.release.producers) (JOIN music.release.label m.019n_t)) (JOIN (R music.release.producers) m.031hssh)))",
        "actions": [
            "get_relations(m.019n_t)",
            "get_neighbors(m.019n_t,music.record_label.releases)",
            "get_relations(#0)",
            "get_neighbors(#0,music.release.producers)",
            "get_relations(m.031hssh)",
            "get_neighbors(m.031hssh,music.release.producers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0473q",
                "entity_name": "Jeff Lynne"
            }
        ]
    },
    {
        "question": "find all quotations from tempus that are addressed to whom \"men make their own fates -- it's personal, not a matter for debate\" was addressed to",
        "qid": "4302343001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tempus": "m.0bxj80p",
            "\"Men make their own fates -- it's personal, not a matter for debate\"": "m.0g9qhhd"
        },
        "s_expression": "(AND media_common.quotation_addressee (AND (JOIN media_common.quotation_addressee.quotations (JOIN (R fictional_universe.fictional_character.quotations) m.0bxj80p)) (JOIN media_common.quotation_addressee.quotations m.0g9qhhd)))",
        "actions": [
            "get_relations(m.0bxj80p)",
            "get_neighbors(m.0bxj80p,fictional_universe.fictional_character.quotations)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.quotation.addressee)",
            "get_relations(m.0g9qhhd)",
            "get_neighbors(m.0g9qhhd,media_common.quotation.addressee)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cpg0cq",
                "entity_name": "Straton"
            }
        ]
    },
    {
        "question": "how many models of apple 1 computers used 6502 microprocessor processors?",
        "qid": "3205922014000_grailqa",
        "source": "grailqa",
        "entities": {
            "apple 1": "m.0n_v",
            "6502 microprocessor": "m.0530y"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0n_v) (JOIN computer.computer.processor m.0530y))))",
        "actions": [
            "get_relations(m.0n_v)",
            "get_neighbors(m.0n_v,computer.computer.includes_models)",
            "get_relations(m.0530y)",
            "get_neighbors(m.0530y,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "the international ladies garment workers' union operates in which common parent industry of the fire hazards?",
        "qid": "4301917011000_grailqa",
        "source": "grailqa",
        "entities": {
            "international ladies garment workers' union": "m.054w78",
            "fire hazards": "m.03wymq"
        },
        "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.03wymq)))",
        "actions": [
            "get_relations(m.054w78)",
            "get_neighbors(m.054w78,business.trade_union.industry)",
            "get_relations(#0)",
            "get_neighbors(#0,business.industry.child_industry)",
            "get_relations(m.03wymq)",
            "get_neighbors(m.03wymq,business.industry.child_industry)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0126b6d7",
                "entity_name": "Ballyclare Limited"
            }
        ]
    },
    {
        "question": "matthew h. sommer conducts research in which asian studies discipline?",
        "qid": "4302233006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Asian studies": "m.06zq7_",
            "Matthew H. Sommer": "m.0cl8sr6"
        },
        "s_expression": "(AND education.field_of_study (AND (JOIN (R education.field_of_study.subdisciplines) m.06zq7_) (JOIN (R education.field_of_study.subdiscipline_of) (JOIN (R education.academic.research_areas) m.0cl8sr6))))",
        "actions": [
            "get_relations(m.06zq7_)",
            "get_neighbors(m.06zq7_,education.field_of_study.subdisciplines)",
            "get_relations(m.0cl8sr6)",
            "get_neighbors(m.0cl8sr6,education.academic.research_areas)",
            "get_relations(#1)",
            "get_neighbors(#1,education.field_of_study.subdiscipline_of)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02111p",
                "entity_name": "Sinology"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08_8bx",
                "entity_name": "East Asian Studies"
            }
        ]
    },
    {
        "question": "Who was influenced by Melanie Klein and in turn influenced Whitman's poetry?",
        "qid": "WebQTrn-3358_5dcd3d0995310bd9bcaea14ff53b887e_cwq",
        "source": "cwq",
        "entities": {
            "whitman": "m.085gk",
            "Melanie Klein": "m.014shr"
        },
        "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.085gk) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.014shr)))",
        "actions": [
            "get_relations(m.085gk)",
            "get_neighbors(m.085gk,influence.influence_node.influenced_by)",
            "get_relations(m.014shr)",
            "get_neighbors(m.014shr,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.039n1",
                "answer_type": "Entity",
                "entity_name": "Georg Wilhelm Friedrich Hegel"
            }
        ]
    },
    {
        "question": "which programming language paradigm does qi and lambda calculus follow?",
        "qid": "4300417014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Qi": "m.02prj6h",
            "Lambda calculus": "m.04mg4"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04mg4)) (JOIN (R computer.programming_language.language_paradigms) m.02prj6h)))",
        "actions": [
            "get_relations(m.04mg4)",
            "get_neighbors(m.04mg4,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.02prj6h)",
            "get_neighbors(m.02prj6h,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ykw",
                "entity_name": "Functional programming"
            }
        ]
    },
    {
        "question": "Who founded Pixar, and was influenced by Stephen Colbert?",
        "qid": "WebQTrn-248_391e41c63cd4d9aeaa2144eece52067c_cwq",
        "source": "cwq",
        "entities": {
            "Pixar": "m.0kk9v",
            "Stephen Colbert": "m.01xdf5"
        },
        "s_expression": "(AND (JOIN (R organization.organization.founders) m.0kk9v) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01xdf5)))",
        "actions": [
            "get_relations(m.0kk9v)",
            "get_neighbors(m.0kk9v,organization.organization.founders)",
            "get_relations(m.01xdf5)",
            "get_neighbors(m.01xdf5,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.06y3r",
                "answer_type": "Entity",
                "entity_name": "Steve Jobs"
            }
        ]
    },
    {
        "question": "What Canadian government exists where Baldur von Schirach was born?",
        "qid": "WebQTrn-1702_3f76d491e90682cc29e3de2546e1f9c5_cwq",
        "source": "cwq",
        "entities": {
            "canadian": "m.0d060g",
            "Baldur von Schirach": "m.0143sn"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0d060g) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
        "actions": [
            "get_relations(m.0d060g)",
            "get_neighbors(m.0d060g,location.country.form_of_government)",
            "get_relations(m.0143sn)",
            "get_neighbors(m.0143sn,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "what drugs have serotonin as an active ingredient and are also made from aluminum oxide/kaolin/barium cation/bromine/calcium cation/chimaphila umbellata/chlorine/ferric cation/hydrofluoric acid/lemna minor/nitric acid/lead/strychnine/comfrey root homeopathic preparation?",
        "qid": "5400022012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Aluminum oxide/Kaolin/Barium cation/Bromine/Calcium cation/Chimaphila umbellata/Chlorine/Ferric cation/Hydrofluoric acid/Lemna minor/Nitric acid/Lead/Strychnine/Comfrey root homeopathic preparation": "m.0hqx2f4",
            "Serotonin": "m.073z8"
        },
        "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0hqx2f4)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.073z8))))",
        "actions": [
            "get_relations(m.0hqx2f4)",
            "get_neighbors(m.0hqx2f4,medicine.drug.marketed_formulations)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
            "get_relations(m.073z8)",
            "get_neighbors(m.073z8,medicine.drug_ingredient.active_moiety_of_formulation)",
            "get_relations(#2)",
            "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
            "intersection(#1,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04k94",
                "entity_name": "Liquid"
            }
        ]
    },
    {
        "question": "What time zone is in the location near Strathmore (DJ Murray) Airport in Texas?",
        "qid": "WebQTrn-2759_cab1228be4e8c16ee35a67b7ac63b264_cwq",
        "source": "cwq",
        "entities": {
            "Texas": "m.07b_l",
            "strathmore (dj murray) airport": "m.09slsk"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.09slsk)))",
        "actions": [
            "get_relations(m.07b_l)",
            "get_neighbors(m.07b_l,location.location.time_zones)",
            "get_relations(m.09slsk)",
            "get_neighbors(m.09slsk,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02hczc",
                "answer_type": "Entity",
                "entity_name": "Mountain Time Zone"
            }
        ]
    },
    {
        "question": "which person designed the iphone4 and mac?",
        "qid": "4301299012000_grailqa",
        "source": "grailqa",
        "entities": {
            "mac": "m.0zd6",
            "iphone4": "m.0c0bg9c"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.0c0bg9c)) (JOIN (R computer.computer.key_designers) m.0zd6)))",
        "actions": [
            "get_relations(m.0c0bg9c)",
            "get_neighbors(m.0c0bg9c,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.0zd6)",
            "get_neighbors(m.0zd6,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3r",
                "entity_name": "Steve Jobs"
            }
        ]
    },
    {
        "question": "what is the isos that kodak easyshare m753 by canon, inc. supports?",
        "qid": "4304013002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kodak EasyShare M753": "m.04wk7k7",
            "canon, inc.": "m.01bvx1"
        },
        "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.04wk7k7) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.01bvx1))))",
        "actions": [
            "get_relations(m.04wk7k7)",
            "get_neighbors(m.04wk7k7,digicams.digital_camera.iso_setting)",
            "get_relations(m.01bvx1)",
            "get_neighbors(m.01bvx1,digicams.camera_sensor_manufacturer.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.iso_setting)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_x",
                "entity_name": "100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_7",
                "entity_name": "Auto"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_g",
                "entity_name": "400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_p",
                "entity_name": "200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg58",
                "entity_name": "800"
            }
        ]
    },
    {
        "question": "what is the name of the automotive class associated with the models audi and the predecessor astra?",
        "qid": "4301079005000_grailqa",
        "source": "grailqa",
        "entities": {
            "astra": "m.01j3dc",
            "audi": "m.02pnv6"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.01j3dc)) (JOIN automotive.automotive_class.examples m.02pnv6)))",
        "actions": [
            "get_relations(m.01j3dc)",
            "get_neighbors(m.01j3dc,automotive.model.predecessor)",
            "get_relations(#0)",
            "get_neighbors(#0,automotive.model.automotive_class)",
            "get_relations(m.02pnv6)",
            "get_neighbors(m.02pnv6,automotive.model.automotive_class)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02swz_",
                "entity_name": "Compact car"
            }
        ]
    },
    {
        "question": "what breed of dog would have a similar temperament to the maltese dog and english setter?",
        "qid": "4300795009000_grailqa",
        "source": "grailqa",
        "entities": {
            "maltese dog": "m.02cyl6",
            "English Setter": "m.0gz1d"
        },
        "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.02cyl6) (JOIN biology.breed_temperament.breeds m.0gz1d))))",
        "actions": [
            "get_relations(m.02cyl6)",
            "get_neighbors(m.02cyl6,biology.animal_breed.temperament)",
            "get_relations(m.0gz1d)",
            "get_neighbors(m.0gz1d,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,biology.breed_temperament.breeds)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dd3t",
                "entity_name": "Black Norwegian Elkhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4blp",
                "entity_name": "Braque d'Auvergne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qn1p",
                "entity_name": "English Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p39m",
                "entity_name": "American Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01sc6y",
                "entity_name": "Patterdale Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03htgw",
                "entity_name": "Koolie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ysz",
                "entity_name": "Italian Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05sfy0",
                "entity_name": "L\u00f6wchen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08s0ws",
                "entity_name": "Boykin Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gz2b",
                "entity_name": "Australian Kelpie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0km3f",
                "entity_name": "Labrador Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kwdc",
                "entity_name": "German Wirehaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gx1zf",
                "entity_name": "Billy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t032",
                "entity_name": "Golden Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020z66",
                "entity_name": "Miniature Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0182yx",
                "entity_name": "Shetland Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0km5c",
                "entity_name": "German Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0183xd",
                "entity_name": "Vizsla"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cx_v",
                "entity_name": "Chesapeake Bay Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01hzb8",
                "entity_name": "Great Pyrenees"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j0x",
                "entity_name": "Basenji"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01kv93",
                "entity_name": "Staffordshire Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p5rd",
                "entity_name": "Bernese Mountain Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pm38",
                "entity_name": "Clumber Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01s7fj",
                "entity_name": "Shih Tzu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020z5t",
                "entity_name": "English Springer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0271kpq",
                "entity_name": "Spanish Water Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_73c",
                "entity_name": "Rat Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kf24",
                "entity_name": "Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kgrx",
                "entity_name": "Cardigan Welsh Corgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kw9d",
                "entity_name": "German Shorthaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nscg",
                "entity_name": "Bearded Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rfz5",
                "entity_name": "Irish Soft-coated Wheaten Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjrc",
                "entity_name": "Groenendael"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wbf7",
                "entity_name": "Bedlington Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.031pqh",
                "entity_name": "Peruvian Hairless Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353h4",
                "entity_name": "Border Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035xn5",
                "entity_name": "Toy Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_vlr",
                "entity_name": "Smooth Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cq_p",
                "entity_name": "Kerry Blue Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d12",
                "entity_name": "Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jjm4",
                "entity_name": "Norwich Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l5cy",
                "entity_name": "Spinone Italiano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ydd_",
                "entity_name": "Havanese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0403wp9",
                "entity_name": "Muggin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410k_5",
                "entity_name": "Treeing Tennessee Brindle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dm6",
                "entity_name": "Komondor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jj62w",
                "entity_name": "Llewellyn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nmst",
                "entity_name": "King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04prkf",
                "entity_name": "Small M\u00fcnsterl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04swlxt",
                "entity_name": "Hellenikos Ichnilatis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.057_4d",
                "entity_name": "Canadian Eskimo Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05tbqb",
                "entity_name": "Coton de Tulear"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y236",
                "entity_name": "New Guinea singing dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074pqh",
                "entity_name": "Spanish Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773fb",
                "entity_name": "Treeing Walker Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07dx0m",
                "entity_name": "Japanese Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08626",
                "entity_name": "Whippet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08f_zh",
                "entity_name": "Pont-Audemer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bjrtp",
                "entity_name": "Cirneco dell'Etna"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bllpv",
                "entity_name": "Puggle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpx6y",
                "entity_name": "German Longhaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fl887",
                "entity_name": "Braque du Bourbonnais"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gt5n2",
                "entity_name": "Cretan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvx7",
                "entity_name": "Pharaoh Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hw_s",
                "entity_name": "Basset Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nr94",
                "entity_name": "Bichon Frise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p3f7",
                "entity_name": "Standard Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1203ng2yx",
                "entity_name": "Damchi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017lw7",
                "entity_name": "American Eskimo Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d7mc",
                "entity_name": "Black and Tan Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dj7",
                "entity_name": "Beagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01llgk",
                "entity_name": "Boxer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p33b",
                "entity_name": "Mudi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p85j",
                "entity_name": "Barbet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pq45",
                "entity_name": "Chinook"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01przn",
                "entity_name": "Mackenzie River husky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pyhj",
                "entity_name": "Shiloh Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020dr1",
                "entity_name": "Bluetick coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026067b",
                "entity_name": "Guejae Gae"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026qz0j",
                "entity_name": "Polish Hunting Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0285t83",
                "entity_name": "German Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fvym",
                "entity_name": "Goldendoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fxgn",
                "entity_name": "Cockapoo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kfwr",
                "entity_name": "Poodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktbm",
                "entity_name": "Smooth Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kvr1",
                "entity_name": "Puli"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n_s4",
                "entity_name": "Korean Jindo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p1d4",
                "entity_name": "St. Bernard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pp4mc",
                "entity_name": "Bohemian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pxllv",
                "entity_name": "Blue Picardy Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qx4jn",
                "entity_name": "IrishJacks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x9dk",
                "entity_name": "Boston Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlz3",
                "entity_name": "Bergamasco Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z2jdn",
                "entity_name": "Beagador"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z57c",
                "entity_name": "Cairn Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xnp",
                "entity_name": "Welsh Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03606n",
                "entity_name": "Sapsali"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0363rs",
                "entity_name": "Toy Manchester Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b6hk",
                "entity_name": "Catalan Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b8_5",
                "entity_name": "Brittany"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03grqp",
                "entity_name": "Drentse Patrijshond"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gt33k",
                "entity_name": "Tamaskan Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h71r",
                "entity_name": "Bouvier des Flandres"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nrh1z",
                "entity_name": "Canadian Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yk8l",
                "entity_name": "Tibetan Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0408cgh",
                "entity_name": "Stephens Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410kz_",
                "entity_name": "Schapendoes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044lwh",
                "entity_name": "Irish Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f2yc",
                "entity_name": "Anatolian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mhks",
                "entity_name": "Jagdterrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04svlc5",
                "entity_name": "Braque du Puy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxbdx",
                "entity_name": "Mullins Feist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxbjk",
                "entity_name": "Parnell's Carolina Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05z8jf",
                "entity_name": "Shikoku"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06llrr",
                "entity_name": "Carolina Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_8",
                "entity_name": "Scottish Deerhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076zg",
                "entity_name": "Saluki"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07bln6",
                "entity_name": "Curly Coated Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07p7st",
                "entity_name": "Portuguese Podengo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07vgwn",
                "entity_name": "Pumi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08c5h8",
                "entity_name": "Brazilian Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08pb1g",
                "entity_name": "Australian Stumpy Tail Cattle Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.093z2k",
                "entity_name": "Carlin Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09kkkg",
                "entity_name": "Istrian Coarse-haired Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b26w3",
                "entity_name": "Schnoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b6c67",
                "entity_name": "German Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bq2r1",
                "entity_name": "Indian Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3k58",
                "entity_name": "Pra\u017esk\u00fd Krysa\u0159\u00edk"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c8gtz",
                "entity_name": "Valley Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cqpth",
                "entity_name": "Hortaya borzaya"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dbk_j",
                "entity_name": "Kai Ken"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gh46s",
                "entity_name": "Tahltan Bear Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h01s5",
                "entity_name": "Skye Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hkfc",
                "entity_name": "Kooikerhondje"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j7vm",
                "entity_name": "Kuvasz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lbw4",
                "entity_name": "Great Dane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1ct",
                "entity_name": "Wirehaired Pointing Griffon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ysvz",
                "entity_name": "Louisiana Catahoula Leopard Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0blw4s",
                "entity_name": "Huntaway"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wfy",
                "entity_name": "Pomeranian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017t3p",
                "entity_name": "Airedale Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_gx_",
                "entity_name": "Yorkshire Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01fgs3",
                "entity_name": "Boerboel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j7n4",
                "entity_name": "Swedish Vallhund"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01k9j2",
                "entity_name": "Mexican Hairless Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p89l",
                "entity_name": "Sarplaninac"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p900",
                "entity_name": "Beauceron"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pkw7",
                "entity_name": "Papillon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z404",
                "entity_name": "Newfoundland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_s6d",
                "entity_name": "Croatian Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_sbw",
                "entity_name": "French Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026nbpz",
                "entity_name": "Mountain View Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028br6g",
                "entity_name": "French Brittany"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_70q",
                "entity_name": "Briard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_jdw",
                "entity_name": "Portuguese Water Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kh72",
                "entity_name": "Parson Russell Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kn5w",
                "entity_name": "Entlebucher Mountain Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02l61f",
                "entity_name": "Rough Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pl0tr",
                "entity_name": "Dorgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ppbk1",
                "entity_name": "American English Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q6wxt",
                "entity_name": "Karakachan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qllrh",
                "entity_name": "Porcelaine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qr3y_",
                "entity_name": "Northern Inuit Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rjc05",
                "entity_name": "Dalmatian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xp9c",
                "entity_name": "Miniature Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xlb",
                "entity_name": "Irish Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xv1",
                "entity_name": "Lakeland Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035405",
                "entity_name": "Finnish Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.038wvd",
                "entity_name": "Toy Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c51t7",
                "entity_name": "Welsh Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dszr",
                "entity_name": "Akbash dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03f84m",
                "entity_name": "American Hairless Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fqgz",
                "entity_name": "Australian Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03g_78s",
                "entity_name": "Gaddi Kutta"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gymyk",
                "entity_name": "Vikhan Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03j7p3",
                "entity_name": "Old English Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l04k",
                "entity_name": "Nova Scotia Duck Tolling Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nn344",
                "entity_name": "Catahoula Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03vrbz",
                "entity_name": "Lhasa Apso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0413r8v",
                "entity_name": "Treeing Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045tty",
                "entity_name": "Japanese Chin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q65n",
                "entity_name": "Giant Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxch4",
                "entity_name": "Pocket Beagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04y09b",
                "entity_name": "Landseer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051ppn",
                "entity_name": "Glen of Imaal Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.054kbj",
                "entity_name": "Utonagan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.055br8",
                "entity_name": "Thai Bangkaew Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qgc4",
                "entity_name": "Polish Lowland Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y5lx",
                "entity_name": "Maremma Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05z86m",
                "entity_name": "Lancashire Heeler"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06g210",
                "entity_name": "Canaan Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06pq2r",
                "entity_name": "Doberman Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06smkm",
                "entity_name": "Tosa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06v_sc",
                "entity_name": "American Foxhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06w066",
                "entity_name": "English Foxhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071jj",
                "entity_name": "Siberian Husky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_n",
                "entity_name": "Sloughi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.082x3k",
                "entity_name": "Eurasier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089vcl",
                "entity_name": "Thai Ridgeback"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08kkns",
                "entity_name": "Plott Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08pmt0",
                "entity_name": "Alaskan Klee Kai"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dflqz",
                "entity_name": "Blue Lacy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g0rch",
                "entity_name": "Danish Swedish Farmdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwdp",
                "entity_name": "Border Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018z4d",
                "entity_name": "Bloodhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d7fl",
                "entity_name": "Jack Russell Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02bp0t",
                "entity_name": "Pekingese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kwjt",
                "entity_name": "Weimaraner"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjwg",
                "entity_name": "Tervuren"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353wm",
                "entity_name": "English Toy Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cr7fw",
                "entity_name": "Morkie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03w0j9",
                "entity_name": "Tibetan Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ys4",
                "entity_name": "Ibizan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049jr6",
                "entity_name": "American Pit Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyhd",
                "entity_name": "Tibetan Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06c5rq",
                "entity_name": "Grand Bleu de Gascogne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c779w",
                "entity_name": "Berger Picard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fxnkq",
                "entity_name": "Moscow Watchdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035w0_",
                "entity_name": "Perro de Presa Canario"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j0g",
                "entity_name": "Borzoi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018g_l",
                "entity_name": "Rhodesian Ridgeback"
            }
        ]
    },
    {
        "question": "who discovered o as well as an element in the d-block?",
        "qid": "480000001_graphquestions",
        "source": "graphquestions",
        "entities": {
            "d-block": "m.0j7pr",
            "o": "m.025s6bf"
        },
        "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.periodic_table_block.elements) m.0j7pr)) (JOIN chemistry.element_discoverer.discovered m.025s6bf)))",
        "actions": [
            "get_relations(m.0j7pr)",
            "get_neighbors(m.0j7pr,chemistry.periodic_table_block.elements)",
            "get_relations(#0)",
            "get_neighbors(#0,chemistry.chemical_element.discoverer)",
            "get_relations(m.025s6bf)",
            "get_neighbors(m.025s6bf,chemistry.chemical_element.discoverer)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ]
    },
    {
        "question": "who designed a bipropellant rocket engine with liquid hydrogen and gas-generator cycle?",
        "qid": "4300753004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Gas-generator cycle": "m.04qqvv",
            "Liquid hydrogen": "m.0g0nz"
        },
        "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqvv) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.0g0nz))))",
        "actions": [
            "get_relations(m.04qqvv)",
            "get_neighbors(m.04qqvv,spaceflight.rocket_engine_cycle.rocket_engines)",
            "get_relations(m.0g0nz)",
            "get_neighbors(m.0g0nz,spaceflight.rocket_engine_fuel.rocket_engines)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04zgxk",
                "entity_name": "Aerojet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vhl6",
                "entity_name": "Rocketdyne"
            }
        ]
    },
    {
        "question": "what type of menstrual cramps treatments have sludge syndrome side effects?",
        "qid": "4301182007000_grailqa",
        "source": "grailqa",
        "entities": {
            "menstrual cramps": "m.0255t_",
            "SLUDGE syndrome": "m.025yc7f"
        },
        "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.025yc7f)) (JOIN medicine.medical_treatment.used_to_treat m.0255t_)))",
        "actions": [
            "get_relations(m.025yc7f)",
            "get_neighbors(m.025yc7f,medicine.symptom.includes_symptoms)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.symptom.side_effect_of)",
            "get_relations(m.0255t_)",
            "get_neighbors(m.0255t_,medicine.disease.treatments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.014d3g",
                "entity_name": "Ibuprofen"
            }
        ]
    },
    {
        "question": "In what city do most of the people in the place where the Egyptian Mau breed originated?",
        "qid": "WebQTrn-3037_6ca8cba7511811830a04cd64a8a4cf77_cwq",
        "source": "cwq",
        "entities": {
            "Egyptian Mau": "m.0229mb"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN biology.breed_origin.breeds_originating_here m.0229mb)) topic_server.population_number)",
        "actions": [
            "get_relations(m.0229mb)",
            "get_neighbors(m.0229mb,biology.animal_breed.place_of_origin)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "a digital camera that has the color filter array type of bayer and iso settings of auto has what sensor type?",
        "qid": "4300861017000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "Auto": "m.01xrf_7"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.01xrf_7))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.01xrf_7)",
            "get_neighbors(m.01xrf_7,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            }
        ]
    },
    {
        "question": "list all types of museums that are of the same type as the museum of modern art and smithsonian institution",
        "qid": "5400031004000_grailqa",
        "source": "grailqa",
        "entities": {
            "the museum of modern art": "m.0hhjk",
            "Smithsonian Institution": "m.0hfyj"
        },
        "s_expression": "(AND architecture.type_of_museum (JOIN (R architecture.museum.type_of_museum) (JOIN (R architecture.type_of_museum.museums) (AND (JOIN architecture.type_of_museum.museums m.0hhjk) (JOIN architecture.type_of_museum.museums m.0hfyj)))))",
        "actions": [
            "get_relations(m.0hhjk)",
            "get_neighbors(m.0hhjk,architecture.museum.type_of_museum)",
            "get_relations(m.0hfyj)",
            "get_neighbors(m.0hfyj,architecture.museum.type_of_museum)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,architecture.type_of_museum.museums)",
            "get_relations(#3)",
            "get_neighbors(#3,architecture.museum.type_of_museum)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c9td2",
                "entity_name": "National museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gz",
                "entity_name": "Modern art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9jkk",
                "entity_name": "Architecture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgh_k",
                "entity_name": "History museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03lgjgh",
                "entity_name": "Natural history museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jvjpx6",
                "entity_name": "Antiquities museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026w5hv",
                "entity_name": "Contemporary art gallery"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pn3n6",
                "entity_name": "Historic house museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0528d17",
                "entity_name": "Photography Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04kt8qr",
                "entity_name": "Culture museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99gt",
                "entity_name": "Archaeology museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059x_pp",
                "entity_name": "Archaeological Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wvyw7",
                "entity_name": "Design museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.027v0wz",
                "entity_name": "University museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059vqps",
                "entity_name": "Ancient Art Museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l9gbh",
                "entity_name": "Jewish museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0w_y7rb",
                "entity_name": "Asian art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l99t0",
                "entity_name": "Decorative art museum"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0djx8f",
                "entity_name": "Children's museum"
            }
        ]
    },
    {
        "question": "when is the last time the ravens won a superbowl",
        "qid": "WebQTest-595_webqsp",
        "source": "webqsp",
        "entities": {
            "ravens": "m.01ct6",
            "superbowl": "m.06x5s"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) m.01ct6) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.01ct6)",
            "get_neighbors(m.01ct6,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVII"
            }
        ]
    },
    {
        "question": "feline infectious peritonitis and some disease caused by old share which symptoms?",
        "qid": "246000001_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Feline infectious peritonitis": "m.06_1k9",
            "old": "m.01hbgs"
        },
        "s_expression": "(AND base.pethealth.symptom (AND (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) m.06_1k9) (JOIN (R base.pethealth.pet_disease_or_medical_condition.symptoms) (JOIN (R base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor) m.01hbgs))))",
        "actions": [
            "get_relations(m.06_1k9)",
            "get_neighbors(m.06_1k9,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "get_relations(m.01hbgs)",
            "get_neighbors(m.01hbgs,base.pethealth.pet_disease_risk_factor.pet_diseases_with_this_risk_factor)",
            "get_relations(#1)",
            "get_neighbors(#1,base.pethealth.pet_disease_or_medical_condition.symptoms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.023s6n",
                "entity_name": "Weight loss"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0brgy",
                "entity_name": "Anorexia"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0f3kl",
                "entity_name": "Diarrhea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cjf0",
                "entity_name": "Fever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j6t0",
                "entity_name": "Fatigue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lcdk",
                "entity_name": "Anemia"
            }
        ]
    },
    {
        "question": "what camera storage type is supported by olympus d-580 zoom and the digital camera with iso setting of 80?",
        "qid": "4302372007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Olympus D-580 Zoom": "g.1jdmgz_rm",
            "80": "m.0220vx9"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.iso_setting m.0220vx9)) (JOIN (R digicams.digital_camera.supported_storage_types) g.1jdmgz_rm)))",
        "actions": [
            "get_relations(m.0220vx9)",
            "get_neighbors(m.0220vx9,digicams.camera_iso.cameras)",
            "get_relations(#0)",
            "get_neighbors(#0,digicams.digital_camera.supported_storage_types)",
            "get_relations(g.1jdmgz_rm)",
            "get_neighbors(g.1jdmgz_rm,digicams.digital_camera.supported_storage_types)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02zmtt",
                "entity_name": "xD-Picture Card"
            }
        ]
    },
    {
        "question": "what semi-firm textured cheese is made from the products of lamb and goat?",
        "qid": "4301155004000_grailqa",
        "source": "grailqa",
        "entities": {
            "lamb": "m.07bgp",
            "Goat": "m.03fwl",
            "semi-firm": "m.02h82t0"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.03fwl) (JOIN food.cheese.texture m.02h82t0))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.03fwl)",
            "get_neighbors(m.03fwl,food.cheese_milk_source.cheeses)",
            "get_relations(m.02h82t0)",
            "get_neighbors(m.02h82t0,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02h8b9t",
                "entity_name": "Benedictine"
            }
        ]
    },
    {
        "question": "what is the name of the position that stephen wilson played in which the player who authored did you see that thing? that\u2019s sidat-singh! the syracuse walking dream! also play?",
        "qid": "4300563007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Did you see that thing? That\u2019s Sidat-Singh! The Syracuse Walking Dream!": "m.09rl290",
            "Stephen Wilson": "m.0w4pvjj"
        },
        "s_expression": "(AND basketball.basketball_position (AND (JOIN basketball.basketball_position.players (JOIN (R media_common.quotation.author) m.09rl290)) (JOIN basketball.basketball_position.players m.0w4pvjj)))",
        "actions": [
            "get_relations(m.09rl290)",
            "get_neighbors(m.09rl290,media_common.quotation.author)",
            "get_relations(#0)",
            "get_neighbors(#0,basketball.basketball_player.position_s)",
            "get_relations(m.0w4pvjj)",
            "get_neighbors(m.0w4pvjj,basketball.basketball_player.position_s)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ch8k4",
                "entity_name": "Guard"
            }
        ]
    },
    {
        "question": "The team that won the 1969 World Series championship won the World Series last when?",
        "qid": "WebQTest-1556_d47235946e6c9112db92fd6fbb6e26b3_cwq",
        "source": "cwq",
        "entities": {
            "1969 World Series": "m.04jg9_"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04jg9_)) time.event.end_date)",
        "actions": [
            "get_relations(m.04jg9_)",
            "get_neighbors(m.04jg9_,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q9lc",
                "answer_type": "Entity",
                "entity_name": "1986 World Series"
            }
        ]
    },
    {
        "question": "what rocket engine designer designs a bipropellant rocket engine with rp-1 and gas-generator cycle?",
        "qid": "4300753003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Gas-generator cycle": "m.04qqvv",
            "RP-1": "m.021vvd"
        },
        "s_expression": "(AND spaceflight.rocket_engine_designer (JOIN spaceflight.rocket_engine_designer.rocket_engines (AND (JOIN (R spaceflight.rocket_engine_cycle.rocket_engines) m.04qqvv) (JOIN (R spaceflight.rocket_engine_fuel.rocket_engines) m.021vvd))))",
        "actions": [
            "get_relations(m.04qqvv)",
            "get_neighbors(m.04qqvv,spaceflight.rocket_engine_cycle.rocket_engines)",
            "get_relations(m.021vvd)",
            "get_neighbors(m.021vvd,spaceflight.rocket_engine_fuel.rocket_engines)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_engine.designed_by)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fkyw",
                "entity_name": "SpaceX"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vhl6",
                "entity_name": "Rocketdyne"
            }
        ]
    },
    {
        "question": "of the computers that used m68000 processors, how many were amiga models?",
        "qid": "3205922003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Amiga": "m.0vvw",
            "m68000": "m.052vq"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0vvw) (JOIN computer.computer.processor m.052vq))))",
        "actions": [
            "get_relations(m.0vvw)",
            "get_neighbors(m.0vvw,computer.computer.includes_models)",
            "get_relations(m.052vq)",
            "get_neighbors(m.052vq,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "how much content about technology is produced by the person that produces let the good times roll?",
        "qid": "4303008011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Technology": "m.07c1v",
            "Let the Good Times Roll": "m.05v8gm9"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.07c1v) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.05v8gm9)))))",
        "actions": [
            "get_relations(m.07c1v)",
            "get_neighbors(m.07c1v,broadcast.genre.content)",
            "get_relations(m.05v8gm9)",
            "get_neighbors(m.05v8gm9,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "When was the most recent occurance of the sports team that won the 2002 AFC Championship Game winning the Super Bowl?",
        "qid": "WebQTrn-1930_d8f2e7a988355ba12a84f09d829a5a6d_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "2002 AFC Championship Game": "m.0_gt_qg"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0_gt_qg)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.0_gt_qg)",
            "get_neighbors(m.0_gt_qg,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.032tkh",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXXIX"
            }
        ]
    },
    {
        "question": "Which suprbowls were won by an NFL team that played in the New York Metropolitan area?",
        "qid": "WebQTrn-3290_a15467d9386227fe2f79084c647b588b_cwq",
        "source": "cwq",
        "entities": {
            "suprbowls": "m.06x5s",
            "New York metropolitan area": "m.01t12z"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.location m.01t12z)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.01t12z)",
            "get_neighbors(m.01t12z,sports.sports_team_location.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.043t_rh",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVI"
            },
            {
                "answer_argument": "m.04myq1",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLII"
            },
            {
                "answer_argument": "m.076sw",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXI"
            },
            {
                "answer_argument": "m.076v7",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXV"
            }
        ]
    },
    {
        "question": "how many automotive classes are there for ford expedition and the hyundai genesis?",
        "qid": "3206121007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Ford Expedition": "m.03t26k",
            "Hyundai Genesis": "m.02q7bch"
        },
        "s_expression": "(COUNT (AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples m.03t26k) (JOIN automotive.automotive_class.examples m.02q7bch))))",
        "actions": [
            "get_relations(m.03t26k)",
            "get_neighbors(m.03t26k,automotive.model.automotive_class)",
            "get_relations(m.02q7bch)",
            "get_neighbors(m.02q7bch,automotive.model.automotive_class)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "japanese whisky blend single malt with grain whisky have how many types?",
        "qid": "4302561005000_grailqa",
        "source": "grailqa",
        "entities": {
            "Grain whisky": "m.041j_x",
            "Japanese whisky": "m.0bqwqs",
            "single malt": "m.01k5lq"
        },
        "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.041j_x) (AND (JOIN distilled_spirits.blended_spirit.style m.0bqwqs) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01k5lq)))))",
        "actions": [
            "get_relations(m.041j_x)",
            "get_neighbors(m.041j_x,distilled_spirits.distilled_spirit_type.blends)",
            "get_relations(m.0bqwqs)",
            "get_neighbors(m.0bqwqs,distilled_spirits.blended_spirit_style.blends)",
            "get_relations(m.01k5lq)",
            "get_neighbors(m.01k5lq,distilled_spirits.distilled_spirit_type.blends)",
            "intersection(#1,#2)",
            "intersection(#0,#3)",
            "count(#4)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what isos are currently supported by sony cyber-shot dsc-w170 cameras from nikon corp.?",
        "qid": "4304013011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Sony Cyber-shot DSC-W170": "m.04wjl1x",
            "nikon corp.": "m.03pmfw"
        },
        "s_expression": "(AND digicams.camera_iso (AND (JOIN digicams.camera_iso.cameras m.04wjl1x) (JOIN (R digicams.digital_camera.iso_setting) (JOIN (R digicams.camera_sensor_manufacturer.cameras) m.03pmfw))))",
        "actions": [
            "get_relations(m.04wjl1x)",
            "get_neighbors(m.04wjl1x,digicams.digital_camera.iso_setting)",
            "get_relations(m.03pmfw)",
            "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.iso_setting)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_x",
                "entity_name": "100"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_g",
                "entity_name": "400"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrf_p",
                "entity_name": "200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg4v",
                "entity_name": "3200"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg51",
                "entity_name": "1600"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg58",
                "entity_name": "800"
            }
        ]
    },
    {
        "question": "which core text of catholic religion do sacraments practitioners honor?",
        "qid": "4300898004000_grailqa",
        "source": "grailqa",
        "entities": {
            "catholic religion": "m.0c8wxp",
            "sacraments": "m.06xq6"
        },
        "s_expression": "(AND religion.religious_text (AND (JOIN (R religion.religion.texts) m.0c8wxp) (JOIN (R religion.religion.texts) (JOIN religion.religion.practices m.06xq6))))",
        "actions": [
            "get_relations(m.0c8wxp)",
            "get_neighbors(m.0c8wxp,religion.religion.texts)",
            "get_relations(m.06xq6)",
            "get_neighbors(m.06xq6,religion.religious_practice.practice_of)",
            "get_relations(#1)",
            "get_neighbors(#1,religion.religion.texts)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.015j7",
                "entity_name": "The Bible"
            }
        ]
    },
    {
        "question": "Who was the Vice President of the man about whom \"Gore Vidal's Lincoln\" was written?",
        "qid": "WebQTrn-1777_5096e7f87655bfead420edf88c0629f0_cwq",
        "source": "cwq",
        "entities": {
            "Gore Vidal's Lincoln": "m.04j21rb"
        },
        "s_expression": "(ARGMAX (JOIN (R government.us_president.vice_president) (JOIN film.film_subject.films m.04j21rb)) government.us_vice_president.vice_president_number)",
        "actions": [
            "get_relations(m.04j21rb)",
            "get_neighbors(m.04j21rb,film.film.subjects)",
            "get_relations(#0)",
            "get_neighbors(#0,government.us_president.vice_president)",
            "get_attributes(#1)",
            "argmax(#1,government.us_vice_president.vice_president_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.0rmg",
                "answer_type": "Entity",
                "entity_name": "Andrew Johnson"
            }
        ]
    },
    {
        "question": "Of what form of cancer did the artist who had a tour named Natty Dread Tour die from?",
        "qid": "WebQTrn-3531_72cf301b99cc05fd52d411e67b13d02d_cwq",
        "source": "cwq",
        "entities": {
            "Cancer": "m.0qcr0",
            "Natty Dread Tour": "m.0fdsb5"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.artist.concert_tours m.0fdsb5)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
        "actions": [
            "get_relations(m.0fdsb5)",
            "get_neighbors(m.0fdsb5,music.concert_tour.artist)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.0qcr0)",
            "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.046wcr",
                "answer_type": "Entity",
                "entity_name": "Acral lentiginous melanoma"
            },
            {
                "answer_argument": "m.04kndz2",
                "answer_type": "Entity",
                "entity_name": "Metastatic Melanoma"
            }
        ]
    },
    {
        "question": "which storage type is supported by kodak cx4200 and those with color filter array of bayer?",
        "qid": "4302099004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kodak CX4200": "m.03q2mk0",
            "bayer": "m.02r8js"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2mk0) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
        "actions": [
            "get_relations(m.03q2mk0)",
            "get_neighbors(m.03q2mk0,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tthm",
                "entity_name": "Secure Digital"
            }
        ]
    },
    {
        "question": "the camera with a sensor from matsushita electric industrial co., ltd. and a compression format of mts uses which viewfinder?",
        "qid": "4302274002000_grailqa",
        "source": "grailqa",
        "entities": {
            "mts": "m.042zv3q",
            "matsushita electric industrial co., ltd.": "m.0nk5b"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.042zv3q) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.0nk5b))))",
        "actions": [
            "get_relations(m.042zv3q)",
            "get_neighbors(m.042zv3q,digicams.camera_compressed_format.cameras)",
            "get_relations(m.0nk5b)",
            "get_neighbors(m.0nk5b,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.026krtn",
                "entity_name": "Live preview"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.036132",
                "entity_name": "Electronic viewfinder"
            }
        ]
    },
    {
        "question": "What is the name of the student that is credited with creating Google?",
        "qid": "WebQTrn-2393_562282f8faca4648a9c8ec98e3e4415d_cwq",
        "source": "cwq",
        "entities": {
            "google": "m.0387r",
            "Student": "m.014cnc"
        },
        "s_expression": "(AND (JOIN (R law.invention.inventor) m.0387r) (JOIN influence.influence_node.influenced (JOIN people.person.profession m.014cnc)))",
        "actions": [
            "get_relations(m.0387r)",
            "get_neighbors(m.0387r,law.invention.inventor)",
            "get_relations(m.014cnc)",
            "get_neighbors(m.014cnc,people.profession.people_with_this_profession)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0gjpq",
                "answer_type": "Entity",
                "entity_name": "Larry Page"
            }
        ]
    },
    {
        "question": "Who was once influenced by Girar Desargues and went on to influence Samuel Taylor?",
        "qid": "WebQTest-1198_fa37e433eaf26b34a57900ac4af9259c_cwq",
        "source": "cwq",
        "entities": {
            "samuel taylor": "m.078w2",
            "girar desargues": "m.01_4zq"
        },
        "s_expression": "(AND (JOIN (R influence.influence_node.influenced_by) m.078w2) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.01_4zq)))",
        "actions": [
            "get_relations(m.078w2)",
            "get_neighbors(m.078w2,influence.influence_node.influenced_by)",
            "get_relations(m.01_4zq)",
            "get_neighbors(m.01_4zq,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.015n8",
                "answer_type": "Entity",
                "entity_name": "Baruch Spinoza"
            }
        ]
    },
    {
        "question": "What type of government can be found in the birthplace of Baldur von Schirach and the Bahamas?",
        "qid": "WebQTrn-2863_3f76d491e90682cc29e3de2546e1f9c5_cwq",
        "source": "cwq",
        "entities": {
            "Bahamas": "m.0160w",
            "Baldur von Schirach": "m.0143sn"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0160w) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.0143sn)))",
        "actions": [
            "get_relations(m.0160w)",
            "get_neighbors(m.0160w,location.country.form_of_government)",
            "get_relations(m.0143sn)",
            "get_neighbors(m.0143sn,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "what cheese with a soft texture is sourced from cows and domestic sheep?",
        "qid": "4301155007000_grailqa",
        "source": "grailqa",
        "entities": {
            "domestic sheep": "m.07bgp",
            "cows": "m.01xq0k1",
            "Soft": "m.02h48ft"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (AND (JOIN food.cheese.source_of_milk m.01xq0k1) (JOIN food.cheese.texture m.02h48ft))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.01xq0k1)",
            "get_neighbors(m.01xq0k1,food.cheese_milk_source.cheeses)",
            "get_relations(m.02h48ft)",
            "get_neighbors(m.02h48ft,food.cheese_texture.cheeses)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.016kgn",
                "entity_name": "Halloumi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.034n3h",
                "entity_name": "Ricotta"
            }
        ]
    },
    {
        "question": "When was the last time the team with the mascot Bailey win a playoff?",
        "qid": "WebQTest-1711_96d16482c34e6502b6e243a02006467d_cwq",
        "source": "cwq",
        "entities": {
            "Bailey": "m.0j2h90q"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0j2h90q)) time.event.end_date)",
        "actions": [
            "get_relations(m.0j2h90q)",
            "get_neighbors(m.0j2h90q,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.010fdzhp",
                "answer_type": "Entity",
                "entity_name": "2014 Stanley Cup Finals"
            }
        ]
    },
    {
        "question": "media tools ltd. owns how many active websites?",
        "qid": "3206340006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "Media Tools Ltd.": "m.01285gc2"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.01285gc2))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.01285gc2)",
            "get_neighbors(m.01285gc2,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what is the programming language influenced by another language developed by world wide web consortium that was introduced first?",
        "qid": "4303199011000_grailqa",
        "source": "grailqa",
        "entities": {
            "World Wide Web Consortium": "m.082bb"
        },
        "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.082bb))) computer.programming_language.introduced)",
        "actions": [
            "get_relations(m.082bb)",
            "get_neighbors(m.082bb,computer.programming_language_developer.programming_languages_developed)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.influenced)",
            "get_attributes(#1)",
            "argmin(#1,computer.programming_language.introduced)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bp8q",
                "entity_name": "Curl"
            }
        ]
    },
    {
        "question": "the same rocket manufacturer who manufactured atlas iii and titan iv created what other rocket?",
        "qid": "4300129010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Atlas III": "m.0f6_rb",
            "Titan IV": "m.03g51v"
        },
        "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.0f6_rb) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.03g51v))))",
        "actions": [
            "get_relations(m.0f6_rb)",
            "get_neighbors(m.0f6_rb,spaceflight.rocket.manufacturer)",
            "get_relations(m.03g51v)",
            "get_neighbors(m.03g51v,spaceflight.rocket.manufacturer)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fft5p",
                "entity_name": "Athena"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0269d32",
                "entity_name": "Saturn-Shuttle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gwh3",
                "entity_name": "Atlas II"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02688c_",
                "entity_name": "DIRECT"
            }
        ]
    },
    {
        "question": "how many infectious diseases are transmitted by triatominae? ",
        "qid": "4303160012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Triatominae": "m.060t35"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.060t35)))))",
        "actions": [
            "get_relations(m.060t35)",
            "get_neighbors(m.060t35,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "30"
            }
        ]
    },
    {
        "question": "What type of cancer was the cause of death for the recording artist of \"I've Got Love?\"?",
        "qid": "WebQTrn-3531_80bd8aa7f1d0243606c8935e89ba7f9f_cwq",
        "source": "cwq",
        "entities": {
            "Cancer": "m.0qcr0",
            "I've Got Love": "m.0g5ybvs"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.featured_artist.recordings m.0g5ybvs)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
        "actions": [
            "get_relations(m.0g5ybvs)",
            "get_neighbors(m.0g5ybvs,music.recording.featured_artists)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.0qcr0)",
            "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.046wcr",
                "answer_type": "Entity",
                "entity_name": "Acral lentiginous melanoma"
            },
            {
                "answer_argument": "m.04kndz2",
                "answer_type": "Entity",
                "entity_name": "Metastatic Melanoma"
            }
        ]
    },
    {
        "question": "what is the industry in which financial sector union of sweden operates and is the common parent industry of branches and agencies of foreign banks?",
        "qid": "4301917001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Financial Sector Union of Sweden": "m.0dl786",
            "Branches and Agencies of Foreign Banks": "m.03qth1v"
        },
        "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.0dl786)) (JOIN (R business.industry.child_industry) m.03qth1v)))",
        "actions": [
            "get_relations(m.0dl786)",
            "get_neighbors(m.0dl786,business.trade_union.industry)",
            "get_relations(#0)",
            "get_neighbors(#0,business.industry.child_industry)",
            "get_relations(m.03qth1v)",
            "get_neighbors(m.03qth1v,business.industry.child_industry)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qvw5x",
                "entity_name": "Branches and Agencies of Foreign Banks (branches)"
            }
        ]
    },
    {
        "question": "besides paper embossing, what other art forms were made by pierre redon?",
        "qid": "4302283009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Pierre Redon": "m.05c96m6",
            "Paper embossing": "m.020fn9"
        },
        "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.05c96m6) (JOIN visual_art.artwork.art_form m.020fn9))))",
        "actions": [
            "get_relations(m.05c96m6)",
            "get_neighbors(m.05c96m6,visual_art.visual_artist.artworks)",
            "get_relations(m.020fn9)",
            "get_neighbors(m.020fn9,visual_art.visual_art_form.artworks)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,visual_art.artwork.art_form)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01ng72",
                "entity_name": "Metalworking"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pkk0",
                "entity_name": "Bas-relief"
            }
        ]
    },
    {
        "question": "what religion is party of monotheistic religions and has same practices with christian religion?",
        "qid": "4300140000000_grailqa",
        "source": "grailqa",
        "entities": {
            "monotheistic religions": "m.04xy3",
            "christian religion": "m.01lp8"
        },
        "s_expression": "(AND religion.religion (AND (JOIN religion.religion.practices (JOIN (R religion.religion.practices) m.01lp8)) (JOIN religion.religion.is_part_of m.04xy3)))",
        "actions": [
            "get_relations(m.01lp8)",
            "get_neighbors(m.01lp8,religion.religion.practices)",
            "get_relations(#0)",
            "get_neighbors(#0,religion.religious_practice.practice_of)",
            "get_relations(m.04xy3)",
            "get_neighbors(m.04xy3,religion.religion.includes)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cjt",
                "entity_name": "Bah\u00e1'\u00ed Faith"
            }
        ]
    },
    {
        "question": "What year did the winner of 2006 NFC Championship game win the Superbowl?",
        "qid": "WebQTest-163_f7e233af2bbc4c922ca26bdbe42e2fad_cwq",
        "source": "cwq",
        "entities": {
            "superbowl": "m.06x5s",
            "2006 NFC Championship Game": "m.0_gv21m"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0_gv21m)) (JOIN time.event.instance_of_recurring_event m.06x5s))",
        "actions": [
            "get_relations(m.0_gv21m)",
            "get_neighbors(m.0_gv21m,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,time.recurring_event.instances)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.09k4qg3",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVIII"
            }
        ]
    },
    {
        "question": "who made the discovery of both the o and some halogen element?",
        "qid": "485000201_graphquestions",
        "source": "graphquestions",
        "entities": {
            "o": "m.025s6bf",
            "Halogen": "m.03gcp"
        },
        "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.chemical_series.elements) m.03gcp)) (JOIN (R chemistry.chemical_element.discoverer) m.025s6bf)))",
        "actions": [
            "get_relations(m.03gcp)",
            "get_neighbors(m.03gcp,chemistry.chemical_series.elements)",
            "get_relations(#0)",
            "get_neighbors(#0,chemistry.chemical_element.discoverer)",
            "get_relations(m.025s6bf)",
            "get_neighbors(m.025s6bf,chemistry.chemical_element.discoverer)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ]
    },
    {
        "question": "the setting that is used by canon eos 450d and samsung gx-20 has how many camera iso capabilities?",
        "qid": "3205827006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Canon EOS 450D": "m.03m6znn",
            "Samsung GX-20": "m.04wjr5m"
        },
        "s_expression": "(COUNT (AND digicams.camera_iso (AND (JOIN (R digicams.digital_camera.iso_setting) m.03m6znn) (JOIN (R digicams.digital_camera.iso_setting) m.04wjr5m))))",
        "actions": [
            "get_relations(m.03m6znn)",
            "get_neighbors(m.03m6znn,digicams.digital_camera.iso_setting)",
            "get_relations(m.04wjr5m)",
            "get_neighbors(m.04wjr5m,digicams.digital_camera.iso_setting)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "6"
            }
        ]
    },
    {
        "question": "the infectious agents of tuberculosis are also present in what diseases transmitted by sex?",
        "qid": "481000500_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Sex": "m.06ng1",
            "Tuberculosis": "m.07jwr"
        },
        "s_expression": "(AND medicine.infectious_disease (AND (JOIN (R medicine.transmission_route.infections_that_travel_this_way) m.06ng1) (JOIN medicine.infectious_disease.infectious_agent_type (JOIN medicine.type_of_infectious_agent.diseases m.07jwr))))",
        "actions": [
            "get_relations(m.06ng1)",
            "get_neighbors(m.06ng1,medicine.transmission_route.infections_that_travel_this_way)",
            "get_relations(m.07jwr)",
            "get_neighbors(m.07jwr,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.020gd",
                "entity_name": "Chlamydia infection"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.023zy9",
                "entity_name": "Chancroid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0254zq",
                "entity_name": "Granuloma inguinale"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074m2",
                "entity_name": "Syphilis"
            }
        ]
    },
    {
        "question": "which visual art form is made by martin desjardins besides metal working?",
        "qid": "4302283004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Martin Desjardins": "m.026cht2",
            "metal working": "m.01ng72"
        },
        "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.026cht2) (JOIN visual_art.artwork.art_form m.01ng72))))",
        "actions": [
            "get_relations(m.026cht2)",
            "get_neighbors(m.026cht2,visual_art.visual_artist.artworks)",
            "get_relations(m.01ng72)",
            "get_neighbors(m.01ng72,visual_art.visual_art_form.artworks)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,visual_art.artwork.art_form)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06msq",
                "entity_name": "Sculpture"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pkk0",
                "entity_name": "Bas-relief"
            }
        ]
    },
    {
        "question": "What year did the team who won the 1907 World Series championship last win the world series?",
        "qid": "WebQTrn-682_00840ffd6f70a31cc74f335fee164673_cwq",
        "source": "cwq",
        "entities": {
            "1907 World Series": "m.04tg9h"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04tg9h)) time.event.start_date)",
        "actions": [
            "get_relations(m.04tg9h)",
            "get_neighbors(m.04tg9h,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04tg8s",
                "answer_type": "Entity",
                "entity_name": "1908 World Series"
            }
        ]
    },
    {
        "question": "which tropical cyclones that affected turks & caicos islands are in the same category as tropical storm linda?",
        "qid": "4300198014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tropical Storm Linda": "m.0bhbf6b",
            "turks & caicos islands": "m.07fr_"
        },
        "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.0bhbf6b)) (JOIN meteorology.tropical_cyclone.affected_areas m.07fr_)))",
        "actions": [
            "get_relations(m.0bhbf6b)",
            "get_neighbors(m.0bhbf6b,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_relations(m.07fr_)",
            "get_neighbors(m.07fr_,meteorology.cyclone_affected_area.cyclones)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "question": "how many electronic arts games are available for purchase in the united states?",
        "qid": "444000202_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Electronic Arts": "m.01n073",
            "united states": "m.09c7w0"
        },
        "s_expression": "(COUNT (AND cvg.game_version (AND (JOIN (R cvg.cvg_publisher.game_versions_published) m.01n073) (JOIN cvg.game_version.regions m.09c7w0))))",
        "actions": [
            "get_relations(m.01n073)",
            "get_neighbors(m.01n073,cvg.cvg_publisher.game_versions_published)",
            "get_relations(m.09c7w0)",
            "get_neighbors(m.09c7w0,cvg.computer_game_region.versions_released_in_this_region)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "5"
            }
        ]
    },
    {
        "question": "what was the programming language first introduced by steve which was influenced by another language?",
        "qid": "4303199012000_grailqa",
        "source": "grailqa",
        "entities": {
            "steve": "m.03c3sv"
        },
        "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.03c3sv))) computer.programming_language.introduced)",
        "actions": [
            "get_relations(m.03c3sv)",
            "get_neighbors(m.03c3sv,computer.programming_language_developer.programming_languages_developed)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.influenced)",
            "get_attributes(#1)",
            "argmin(#1,computer.programming_language.introduced)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01hxzg",
                "entity_name": "ISWIM"
            }
        ]
    },
    {
        "question": "what was  radio station KDMR 's first cartoon called?",
        "qid": "WebQTrn-1461_25676c33970f83e1b1e372feb99c95e4_cwq",
        "source": "cwq",
        "entities": {
            "KDMR": "m.0gpwfp"
        },
        "s_expression": "(ARGMIN (JOIN (R media_common.netflix_genre.titles) (JOIN broadcast.radio_station_owner.radio_stations m.0gpwfp)) tv.tv_program.air_date_of_first_episode)",
        "actions": [
            "get_relations(m.0gpwfp)",
            "get_neighbors(m.0gpwfp,broadcast.radio_station.owner)",
            "get_relations(#0)",
            "get_neighbors(#0,media_common.netflix_genre.titles)",
            "get_attributes(#1)",
            "argmin(#1,tv.tv_program.air_date_of_first_episode)"
        ],
        "answer": [
            {
                "answer_argument": "m.01_1p3",
                "answer_type": "Entity",
                "entity_name": "Walt Disney's Wonderful World of Color"
            }
        ]
    },
    {
        "question": "hersbrucker and chinook use how many beer styles?",
        "qid": "3202749007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hersbrucker": "m.0115gwl7",
            "Chinook": "m.0115gh_g"
        },
        "s_expression": "(COUNT (AND base.lightweight.beer_style (AND (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115gwl7) (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115gh_g))))",
        "actions": [
            "get_relations(m.0115gwl7)",
            "get_neighbors(m.0115gwl7,base.lightweight.beer_hop.beer_styles_used_in)",
            "get_relations(m.0115gh_g)",
            "get_neighbors(m.0115gh_g,base.lightweight.beer_hop.beer_styles_used_in)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "how many different breeds from great britain have the same temperament as the otterhound?",
        "qid": "4303460007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Otterhound": "m.05717m",
            "Great Britain": "m.034cm"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds (JOIN biology.animal_breed.place_of_origin m.034cm)) (JOIN (R biology.animal_breed.temperament) m.05717m))))",
        "actions": [
            "get_relations(m.034cm)",
            "get_neighbors(m.034cm,biology.breed_origin.breeds_originating_here)",
            "get_relations(#0)",
            "get_neighbors(#0,biology.animal_breed.temperament)",
            "get_relations(m.05717m)",
            "get_neighbors(m.05717m,biology.animal_breed.temperament)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "ralph dix and the producer of wake up kentucky produce what content?",
        "qid": "4300832001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Wake Up Kentucky": "m.0zg08kw",
            "Ralph Dix": "m.06jj0pb"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.0zg08kw)) (JOIN broadcast.content.producer m.06jj0pb)))",
        "actions": [
            "get_relations(m.0zg08kw)",
            "get_neighbors(m.0zg08kw,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.06jj0pb)",
            "get_neighbors(m.06jj0pb,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05v2gz6",
                "entity_name": "Down and Outside: On the Streets of Louisville"
            }
        ]
    },
    {
        "question": "Where is the greatest population in the country where the Domari is spoken?",
        "qid": "WebQTrn-3037_602d3e74c7063895f149a8f44b9e406f_cwq",
        "source": "cwq",
        "entities": {
            "domari": "m.0c4chg"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN location.country.languages_spoken m.0c4chg)) topic_server.population_number)",
        "actions": [
            "get_relations(m.0c4chg)",
            "get_neighbors(m.0c4chg,language.human_language.countries_spoken_in)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "who was the computer designer for atari 520 stm and atari 260 st?",
        "qid": "4301299001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Atari 260 ST": "m.02h87b6",
            "Atari 520 STm": "m.02h879n"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.02h879n)) (JOIN (R computer.computer.key_designers) m.02h87b6)))",
        "actions": [
            "get_relations(m.02h879n)",
            "get_neighbors(m.02h879n,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.02h87b6)",
            "get_neighbors(m.02h87b6,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0xwj",
                "entity_name": "Atari"
            }
        ]
    },
    {
        "question": "what is the total number of spacecrafts manufactured by finmeccanica and italian space agency?",
        "qid": "3201449015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Italian Space Agency": "m.035c4c",
            "Finmeccanica": "m.02r3h1"
        },
        "s_expression": "(COUNT (AND spaceflight.spacecraft (AND (JOIN spaceflight.spacecraft.manufacturer m.035c4c) (JOIN spaceflight.spacecraft.manufacturer m.02r3h1))))",
        "actions": [
            "get_relations(m.035c4c)",
            "get_neighbors(m.035c4c,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
            "get_relations(m.02r3h1)",
            "get_neighbors(m.02r3h1,spaceflight.satellite_manufacturer.spacecraft_manufactured)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "which diabetes treatments has pains side effects?",
        "qid": "4301182009000_grailqa",
        "source": "grailqa",
        "entities": {
            "diabetes": "m.0849qj",
            "pains": "m.062t2"
        },
        "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.062t2)) (JOIN medicine.medical_treatment.used_to_treat m.0849qj)))",
        "actions": [
            "get_relations(m.062t2)",
            "get_neighbors(m.062t2,medicine.symptom.includes_symptoms)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.symptom.side_effect_of)",
            "get_relations(m.0849qj)",
            "get_neighbors(m.0849qj,medicine.disease.treatments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ypgv",
                "entity_name": "Pramlintide"
            }
        ]
    },
    {
        "question": "what sort of programming language paradigm is followed by programming languages such as sing# and derivatives of vilnius basic?",
        "qid": "4300417015000_grailqa",
        "source": "grailqa",
        "entities": {
            "Sing#": "m.08pndh",
            "Vilnius BASIC": "m.04d9tq"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN computer.programming_language_paradigm.languages (JOIN computer.programming_language.parent_language m.04d9tq)) (JOIN (R computer.programming_language.language_paradigms) m.08pndh)))",
        "actions": [
            "get_relations(m.04d9tq)",
            "get_neighbors(m.04d9tq,computer.programming_language.dialects)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.language_paradigms)",
            "get_relations(m.08pndh)",
            "get_neighbors(m.08pndh,computer.programming_language.language_paradigms)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06w_b",
                "entity_name": "Structured programming"
            }
        ]
    },
    {
        "question": "what number of children of eddard stark were born in winterfell?",
        "qid": "448000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Eddard Stark": "m.03qs0n1",
            "Winterfell": "m.04sstyx"
        },
        "s_expression": "(COUNT (AND fictional_universe.fictional_character (AND (JOIN (R fictional_universe.fictional_character.children) m.03qs0n1) (JOIN fictional_universe.fictional_character.place_of_birth m.04sstyx))))",
        "actions": [
            "get_relations(m.03qs0n1)",
            "get_neighbors(m.03qs0n1,fictional_universe.fictional_character.children)",
            "get_relations(m.04sstyx)",
            "get_neighbors(m.04sstyx,fictional_universe.fictional_setting.fictional_characters_born_here)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "how many elements about public affairs programming are made by the producer of communism, u.s. brand?",
        "qid": "4303008012000_grailqa",
        "source": "grailqa",
        "entities": {
            "public affairs programming": "m.026pm0p",
            "Communism, U.S. Brand": "m.05sv4yy"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.026pm0p) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.05sv4yy)))))",
        "actions": [
            "get_relations(m.026pm0p)",
            "get_neighbors(m.026pm0p,broadcast.genre.content)",
            "get_relations(m.05sv4yy)",
            "get_neighbors(m.05sv4yy,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "how many christian religion texts are religious texts of st. anthony's day?",
        "qid": "4303883004000_grailqa",
        "source": "grailqa",
        "entities": {
            "christian religion": "m.01lp8",
            "St. Anthony's Day": "m.011nk6vg"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.011nk6vg)) (JOIN (R religion.religion.texts) m.01lp8))))",
        "actions": [
            "get_relations(m.011nk6vg)",
            "get_neighbors(m.011nk6vg,time.holiday.featured_in_religions)",
            "get_relations(#0)",
            "get_neighbors(#0,religion.religion.texts)",
            "get_relations(m.01lp8)",
            "get_neighbors(m.01lp8,religion.religion.texts)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "how many different religious texts have oriental orthodox and hidden christians of japan texts?",
        "qid": "3206221004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hidden Christians of Japan": "m.044f0r",
            "oriental orthodox": "m.05pbd"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of m.044f0r) (JOIN (R religion.religion.texts) m.05pbd))))",
        "actions": [
            "get_relations(m.044f0r)",
            "get_neighbors(m.044f0r,religion.religion.texts)",
            "get_relations(m.05pbd)",
            "get_neighbors(m.05pbd,religion.religion.texts)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "Find the artist responsible for Something In Common, what drugs were found in their system at the time of their death?",
        "qid": "WebQTrn-2600_01c839018be55a06350a42544b4d4fd8_cwq",
        "source": "cwq",
        "entities": {
            "Drug overdose": "m.01tf_6",
            "Something in Common": "m.0p58j2"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.featured_artist.recordings m.0p58j2)) (JOIN people.cause_of_death.parent_cause_of_death m.01tf_6))",
        "actions": [
            "get_relations(m.0p58j2)",
            "get_neighbors(m.0p58j2,music.recording.featured_artists)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.01tf_6)",
            "get_neighbors(m.01tf_6,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02nx6jb",
                "answer_type": "Entity",
                "entity_name": "Cocaine overdose"
            }
        ]
    },
    {
        "question": "what is the number of super famicom box models that use ricoh 5a22 processors?",
        "qid": "3205922004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Super Famicom Box": "m.02kx0d6",
            "Ricoh 5A22": "m.0by0z8"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.02kx0d6) (JOIN computer.computer.processor m.0by0z8))))",
        "actions": [
            "get_relations(m.02kx0d6)",
            "get_neighbors(m.02kx0d6,computer.computer.includes_models)",
            "get_relations(m.0by0z8)",
            "get_neighbors(m.0by0z8,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "which cheese made from milk of ram has the same texture as black butte does?",
        "qid": "4302129015000_grailqa",
        "source": "grailqa",
        "entities": {
            "ram": "m.07bgp",
            "Black Butte": "m.02h8b_j"
        },
        "s_expression": "(AND food.cheese (AND (JOIN food.cheese.source_of_milk m.07bgp) (JOIN (R food.cheese_texture.cheeses) (JOIN food.cheese_texture.cheeses m.02h8b_j))))",
        "actions": [
            "get_relations(m.07bgp)",
            "get_neighbors(m.07bgp,food.cheese_milk_source.cheeses)",
            "get_relations(m.02h8b_j)",
            "get_neighbors(m.02h8b_j,food.cheese.texture)",
            "get_relations(#1)",
            "get_neighbors(#1,food.cheese_texture.cheeses)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02h89g8",
                "entity_name": "Azeitao"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02h8b66",
                "entity_name": "Beenleigh Blue"
            }
        ]
    },
    {
        "question": "how many mormon texts are religious texts of st casimir's day?",
        "qid": "4303883014000_grailqa",
        "source": "grailqa",
        "entities": {
            "mormon": "m.058x5",
            "St Casimir's Day": "m.0fdm1h"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.0fdm1h)) (JOIN (R religion.religion.texts) m.058x5))))",
        "actions": [
            "get_relations(m.0fdm1h)",
            "get_neighbors(m.0fdm1h,time.holiday.featured_in_religions)",
            "get_relations(#0)",
            "get_neighbors(#0,religion.religion.texts)",
            "get_relations(m.058x5)",
            "get_neighbors(m.058x5,religion.religion.texts)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what martial art involving internal is in the same category as silat?",
        "qid": "4301064010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Silat": "m.03hfzm1",
            "Internal": "m.02_yl6z"
        },
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.03hfzm1)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.02_yl6z)))",
        "actions": [
            "get_relations(m.03hfzm1)",
            "get_neighbors(m.03hfzm1,martial_arts.martial_art.category)",
            "get_relations(#0)",
            "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
            "get_relations(m.02_yl6z)",
            "get_neighbors(m.02_yl6z,martial_arts.martial_art_category.martial_arts)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k4r",
                "entity_name": "Tai chi"
            }
        ]
    },
    {
        "question": "who was the computer designer for imac and next computer?",
        "qid": "4301299005000_grailqa",
        "source": "grailqa",
        "entities": {
            "NeXT Computer": "m.04_1mz4",
            "imac": "m.02p3xw8"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.02p3xw8)) (JOIN (R computer.computer.key_designers) m.04_1mz4)))",
        "actions": [
            "get_relations(m.02p3xw8)",
            "get_neighbors(m.02p3xw8,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.04_1mz4)",
            "get_neighbors(m.04_1mz4,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.06y3r",
                "entity_name": "Steve Jobs"
            }
        ]
    },
    {
        "question": "When was the last time the basketball team whose head coach is Derek Fisher won the national championship?",
        "qid": "WebQTest-998_47e95c73ec76579a8d66b6e1607df389_cwq",
        "source": "cwq",
        "entities": {
            "Derek Fisher": "m.04lvwk"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN basketball.basketball_team.head_coach m.04lvwk)) time.event.start_date)",
        "actions": [
            "get_relations(m.04lvwk)",
            "get_neighbors(m.04lvwk,basketball.basketball_coach.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0cs1kg"
            }
        ]
    },
    {
        "question": "Who are Ike's kids, the artist came up with \"(Simply) The Best \"?",
        "qid": "WebQTest-1655_a37e5462aa82b36cb505f7a15681e6fa_cwq",
        "source": "cwq",
        "entities": {
            "ike": "m.0dbzg",
            "(Simply) The Best": "m.0wfybr"
        },
        "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.featured_artist.recordings m.0wfybr)) (JOIN people.person.parents m.0dbzg))",
        "actions": [
            "get_relations(m.0wfybr)",
            "get_neighbors(m.0wfybr,music.recording.featured_artists)",
            "get_relations(#0)",
            "get_neighbors(#0,people.person.children)",
            "get_relations(m.0dbzg)",
            "get_neighbors(m.0dbzg,people.person.children)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0ggl36p",
                "answer_type": "Entity",
                "entity_name": "Ronnie Turner"
            },
            {
                "answer_argument": "m.0j5dh53",
                "answer_type": "Entity",
                "entity_name": "Raymond Craig Turner"
            }
        ]
    },
    {
        "question": "What year did the team with the mascot named Clark win the World Series?",
        "qid": "WebQTrn-682_c2352030c3341e28768312045c4f093d_cwq",
        "source": "cwq",
        "entities": {
            "Clark": "m.0_yll7n"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0_yll7n)) time.event.start_date)",
        "actions": [
            "get_relations(m.0_yll7n)",
            "get_neighbors(m.0_yll7n,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04tg8s",
                "answer_type": "Entity",
                "entity_name": "1908 World Series"
            }
        ]
    },
    {
        "question": "the plymouth caravelle and \u0161koda 110 r are in which class of automobiles?",
        "qid": "4301079001000_grailqa",
        "source": "grailqa",
        "entities": {
            "\u0160koda 110 R": "m.026ksp4",
            "Plymouth Caravelle": "m.03jbwv"
        },
        "s_expression": "(AND automotive.automotive_class (AND (JOIN automotive.automotive_class.examples (JOIN (R automotive.model.predecessor) m.026ksp4)) (JOIN automotive.automotive_class.examples m.03jbwv)))",
        "actions": [
            "get_relations(m.026ksp4)",
            "get_neighbors(m.026ksp4,automotive.model.predecessor)",
            "get_relations(#0)",
            "get_neighbors(#0,automotive.model.automotive_class)",
            "get_relations(m.03jbwv)",
            "get_neighbors(m.03jbwv,automotive.model.automotive_class)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d1dj",
                "entity_name": "Coup\u00e9"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.021mp2",
                "entity_name": "Sedan"
            }
        ]
    },
    {
        "question": "which type of dish common in manado cuisine contains sugars?",
        "qid": "4301356000000_grailqa",
        "source": "grailqa",
        "entities": {
            "sugars": "m.06x4c",
            "Manado cuisine": "m.0102k5v9"
        },
        "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.06x4c) (JOIN (R dining.cuisine.dishes) m.0102k5v9))))",
        "actions": [
            "get_relations(m.06x4c)",
            "get_neighbors(m.06x4c,food.ingredient.dishes)",
            "get_relations(m.0102k5v9)",
            "get_neighbors(m.0102k5v9,dining.cuisine.dishes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,food.dish.type_of_dish1)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0318f4",
                "entity_name": "Main course"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gtdm",
                "entity_name": "Condiment"
            }
        ]
    },
    {
        "question": "Which of Chicago's venues has the largest capacity?",
        "qid": "WebQTrn-825_5e513370fb98d3e7e9298a7ca8dbe1a3_cwq",
        "source": "cwq",
        "entities": {
            "Chicago": "m.01_d4"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) architecture.venue.capacity)",
        "actions": [
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,location.location.contains)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,architecture.venue.capacity)"
        ],
        "answer": [
            {
                "answer_argument": "m.0b0sh",
                "answer_type": "Entity",
                "entity_name": "Wrigley Field"
            }
        ]
    },
    {
        "question": "What is the name of the Facebook founder that was influenced by Jeff Bezos?",
        "qid": "WebQTrn-1071_6ee3bfab441c52883f7bde45cbcb4612_cwq",
        "source": "cwq",
        "entities": {
            "facebook": "m.0hmyfsv",
            "Jeff Bezos": "m.011z69"
        },
        "s_expression": "(AND (JOIN (R organization.organization.founders) m.0hmyfsv) (JOIN influence.influence_node.influenced (JOIN influence.influence_node.influenced_by m.011z69)))",
        "actions": [
            "get_relations(m.0hmyfsv)",
            "get_neighbors(m.0hmyfsv,organization.organization.founders)",
            "get_relations(m.011z69)",
            "get_neighbors(m.011z69,influence.influence_node.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,influence.influence_node.influenced_by)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.086dny",
                "answer_type": "Entity",
                "entity_name": "Mark Zuckerberg"
            }
        ]
    },
    {
        "question": "what other forms of visual art were made by leonard de vinci other than classical painting?",
        "qid": "4302283003000_grailqa",
        "source": "grailqa",
        "entities": {
            "leonard de vinci": "m.04lg6",
            "classical painting": "m.05qdh"
        },
        "s_expression": "(AND visual_art.visual_art_form (JOIN (R visual_art.artwork.art_form) (AND (JOIN visual_art.artwork.artist m.04lg6) (JOIN visual_art.artwork.art_form m.05qdh))))",
        "actions": [
            "get_relations(m.04lg6)",
            "get_neighbors(m.04lg6,visual_art.visual_artist.artworks)",
            "get_relations(m.05qdh)",
            "get_neighbors(m.05qdh,visual_art.visual_art_form.artworks)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,visual_art.artwork.art_form)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04rd7",
                "entity_name": "Mural"
            }
        ]
    },
    {
        "question": "what is another martial art that involves hybrid and is in the same category as kurash?",
        "qid": "4301064009000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kurash": "m.01w2pl",
            "Hybrid": "m.03nzdm_"
        },
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.01w2pl)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.03nzdm_)))",
        "actions": [
            "get_relations(m.01w2pl)",
            "get_neighbors(m.01w2pl,martial_arts.martial_art.category)",
            "get_relations(#0)",
            "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
            "get_relations(m.03nzdm_)",
            "get_neighbors(m.03nzdm_,martial_arts.martial_art_category.martial_arts)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bs3p",
                "entity_name": "Sanshou"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02618d8",
                "entity_name": "Russian All-Round Fighting"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.048yh",
                "entity_name": "Krav Maga"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05b65c",
                "entity_name": "Hwa Rang Do"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06jm_r",
                "entity_name": "Bartitsu"
            }
        ]
    },
    {
        "question": "which unit mass utilises a system of measurement that uses the energy density unit of joule per cubic metre and has a maximum weightmass in kilograms?",
        "qid": "4302823001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Joule per cubic metre": "m.02sj51f"
        },
        "s_expression": "(ARGMAX (AND measurement_unit.mass_unit (JOIN (R measurement_unit.measurement_system.weight_units) (JOIN (R measurement_unit.energy_density_unit.measurement_system) m.02sj51f))) measurement_unit.mass_unit.weightmass_in_kilograms)",
        "actions": [
            "get_relations(m.02sj51f)",
            "get_neighbors(m.02sj51f,measurement_unit.energy_density_unit.measurement_system)",
            "get_relations(#0)",
            "get_neighbors(#0,measurement_unit.measurement_system.weight_units)",
            "get_attributes(#1)",
            "argmax(#1,measurement_unit.mass_unit.weightmass_in_kilograms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ny7",
                "entity_name": "Tonne"
            }
        ]
    },
    {
        "question": "Which Children's book about Friendship did Suzanne Collins write?",
        "qid": "WebQTrn-3364_e5faa8b095f56c4563da9331fe2661c2_cwq",
        "source": "cwq",
        "entities": {
            "Suzanne Collins": "m.0bpd5z",
            "Children's literature": "m.0dwly",
            "Friendship": "m.019_nn"
        },
        "s_expression": "(AND (JOIN (R book.author.works_written) m.0bpd5z) (AND (JOIN book.book.genre m.0dwly) (JOIN book.written_work.subjects m.019_nn)))",
        "actions": [
            "get_relations(m.0bpd5z)",
            "get_neighbors(m.0bpd5z,book.author.works_written)",
            "get_relations(m.0dwly)",
            "get_neighbors(m.0dwly,media_common.literary_genre.books_in_this_genre)",
            "get_relations(m.019_nn)",
            "get_neighbors(m.019_nn,book.book_subject.works)",
            "intersection(#1,#2)",
            "intersection(#0,#3)"
        ],
        "answer": [
            {
                "answer_argument": "m.0dsx8l",
                "answer_type": "Entity",
                "entity_name": "Gregor and the Prophecy of Bane"
            }
        ]
    },
    {
        "question": "Which Super Bowl is the most recent one won by the team whose fight song is I'm Shipping Up to Boston?",
        "qid": "WebQTrn-1930_d7607789d5094368472c7046b3a0b666_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "I'm Shipping Up to Boston": "m.02pjx3n"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.fight_song m.02pjx3n)) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.02pjx3n)",
            "get_neighbors(m.02pjx3n,sports.fight_song.sports_team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmax(#3,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.032tkh",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXXIX"
            }
        ]
    },
    {
        "question": "which was the most recently formed cyclone that is in the same category as 1999 odisha cyclone?",
        "qid": "4303808011000_grailqa",
        "source": "grailqa",
        "entities": {
            "1999 Odisha cyclone": "m.06g61z"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.06g61z))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.06g61z)",
            "get_neighbors(m.06g61z,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y52xn7",
                "entity_name": "Cyclone Phailin"
            }
        ]
    },
    {
        "question": "state the number of religious texts of fast of esther among the texts on abrahamic faiths.",
        "qid": "4303883005000_grailqa",
        "source": "grailqa",
        "entities": {
            "abrahamic faiths": "m.0f_h6",
            "Fast of Esther": "m.06y942"
        },
        "s_expression": "(COUNT (AND religion.religious_text (AND (JOIN religion.religious_text.religious_text_of (JOIN (R time.holiday.featured_in_religions) m.06y942)) (JOIN (R religion.religion.texts) m.0f_h6))))",
        "actions": [
            "get_relations(m.06y942)",
            "get_neighbors(m.06y942,time.holiday.featured_in_religions)",
            "get_relations(#0)",
            "get_neighbors(#0,religion.religion.texts)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.texts)",
            "intersection(#1,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "a digital camera that has the color filter array type of bayer and iso settings of 2000 has what sensor type?",
        "qid": "4300861000000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "2000": "m.04l497s"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.04l497s))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.04l497s)",
            "get_neighbors(m.04l497s,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            }
        ]
    },
    {
        "question": "What kind of cancer took the life of the lyricist who wrote \"My Baby Understands?\"?",
        "qid": "WebQTrn-2936_2f25b2bc7f66ef39406fa4397144733c_cwq",
        "source": "cwq",
        "entities": {
            "Cancer": "m.0qcr0",
            "My Baby Understands": "m.0_jwv1v"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.lyricist.lyrics_written m.0_jwv1v)) (JOIN people.cause_of_death.parent_cause_of_death m.0qcr0))",
        "actions": [
            "get_relations(m.0_jwv1v)",
            "get_neighbors(m.0_jwv1v,music.composition.lyricist)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.0qcr0)",
            "get_neighbors(m.0qcr0,people.cause_of_death.includes_causes_of_death)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.04p3w",
                "answer_type": "Entity",
                "entity_name": "Lung cancer"
            }
        ]
    },
    {
        "question": "the longest release track of howe recordings is what?",
        "qid": "4300020000000_grailqa",
        "source": "grailqa",
        "entities": {
            "howe": "m.02l_7y"
        },
        "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.02l_7y))) music.release_track.length)",
        "actions": [
            "get_relations(m.02l_7y)",
            "get_neighbors(m.02l_7y,music.engineer.tracks_engineered)",
            "get_relations(#0)",
            "get_neighbors(#0,music.recording.tracks)",
            "get_attributes(#1)",
            "argmax(#1,music.release_track.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0mkg8xy",
                "entity_name": "Masquerade"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0rqnft4",
                "entity_name": "Masquerade"
            }
        ]
    },
    {
        "question": "the religion featuring christmas day, which is part of abrahamic faiths, has a founding leader who is named what?",
        "qid": "4302278011000_grailqa",
        "source": "grailqa",
        "entities": {
            "christmas day": "m.01vq3",
            "abrahamic faiths": "m.0f_h6"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.01vq3) (JOIN religion.religion.is_part_of m.0f_h6))))",
        "actions": [
            "get_relations(m.01vq3)",
            "get_neighbors(m.01vq3,time.holiday.featured_in_religions)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            }
        ]
    },
    {
        "question": "which programming language influenced by another language developed by jonathan a. rees was introduced first?",
        "qid": "4303199004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Jonathan A. Rees": "m.01xrtql"
        },
        "s_expression": "(ARGMIN (AND computer.programming_language (JOIN (R computer.programming_language.influenced) (JOIN (R computer.programming_language_developer.programming_languages_developed) m.01xrtql))) computer.programming_language.introduced)",
        "actions": [
            "get_relations(m.01xrtql)",
            "get_neighbors(m.01xrtql,computer.programming_language_developer.programming_languages_developed)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.programming_language.influenced)",
            "get_attributes(#1)",
            "argmin(#1,computer.programming_language.introduced)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.042tk1",
                "entity_name": "Oaklisp"
            }
        ]
    },
    {
        "question": "What was the last championship won by the 2004 NBA champions?",
        "qid": "WebQTest-895_6b994ca102354097a85e176fb8c708fb_cwq",
        "source": "cwq",
        "entities": {
            "2004 nba champions": "m.07p0zz"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.07p0zz)) time.event.start_date)",
        "actions": [
            "get_relations(m.07p0zz)",
            "get_neighbors(m.07p0zz,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.07p0zz",
                "answer_type": "Entity",
                "entity_name": "2004 NBA Finals"
            }
        ]
    },
    {
        "question": "what rice plant dish is common in cuisine of thailand?",
        "qid": "4301356002000_grailqa",
        "source": "grailqa",
        "entities": {
            "rice plant": "m.09759",
            "cuisine of thailand": "m.07hxn"
        },
        "s_expression": "(AND food.type_of_dish (JOIN food.type_of_dish.dishes (AND (JOIN food.dish.ingredients m.09759) (JOIN (R dining.cuisine.dishes) m.07hxn))))",
        "actions": [
            "get_relations(m.09759)",
            "get_neighbors(m.09759,food.ingredient.dishes)",
            "get_relations(m.07hxn)",
            "get_neighbors(m.07hxn,dining.cuisine.dishes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,food.dish.type_of_dish1)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l4q9",
                "entity_name": "Entr\u00e9e"
            }
        ]
    },
    {
        "question": "Which Super Bowls were won by the football organization that claimed victory in the Super Bowl XLII championship?",
        "qid": "WebQTrn-3290_92e3a190df8ed73d4fff3bbfbd2b6b86_cwq",
        "source": "cwq",
        "entities": {
            "Super Bowl": "m.06x5s",
            "Super Bowl XLII": "m.04myq1"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.04myq1)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.04myq1)",
            "get_neighbors(m.04myq1,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.043t_rh",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLVI"
            },
            {
                "answer_argument": "m.04myq1",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XLII"
            },
            {
                "answer_argument": "m.076sw",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXI"
            },
            {
                "answer_argument": "m.076v7",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXV"
            }
        ]
    },
    {
        "question": "What is the name of the airport in the area where the Phoenix Gazette is circulated?",
        "qid": "WebQTrn-1650_8db2e38165789e9d0a25ace51c913756_cwq",
        "source": "cwq",
        "entities": {
            "Southwest Airlines": "m.0gztl",
            "Phoenix Gazette": "m.0bmwns"
        },
        "s_expression": "(AND (JOIN (R location.location.nearby_airports) (JOIN periodicals.newspaper_circulation_area.newspapers m.0bmwns)) (JOIN aviation.airport.focus_city_for m.0gztl))",
        "actions": [
            "get_relations(m.0bmwns)",
            "get_neighbors(m.0bmwns,book.newspaper.circulation_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.nearby_airports)",
            "get_relations(m.0gztl)",
            "get_neighbors(m.0gztl,aviation.airline.focus_cities)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0syvm",
                "answer_type": "Entity",
                "entity_name": "Phoenix Sky Harbor International Airport"
            }
        ]
    },
    {
        "question": "which breeds are similar in temperament to the anatolian and irish setter?",
        "qid": "4300795014000_grailqa",
        "source": "grailqa",
        "entities": {
            "anatolian": "m.04f2yc",
            "Irish Setter": "m.039rzl"
        },
        "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.04f2yc) (JOIN biology.breed_temperament.breeds m.039rzl))))",
        "actions": [
            "get_relations(m.04f2yc)",
            "get_neighbors(m.04f2yc,biology.animal_breed.temperament)",
            "get_relations(m.039rzl)",
            "get_neighbors(m.039rzl,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,biology.breed_temperament.breeds)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qn1p",
                "entity_name": "English Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dv7j",
                "entity_name": "Schipperke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06j1z7",
                "entity_name": "Chippiparai"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01s7fj",
                "entity_name": "Shih Tzu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01x5q1",
                "entity_name": "J\u00e4mthund"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353qr",
                "entity_name": "Dandie Dinmont Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fyyd",
                "entity_name": "Shar Pei"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dm6",
                "entity_name": "Komondor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04swl7y",
                "entity_name": "Halden Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0778jb",
                "entity_name": "Redbone Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cbgst",
                "entity_name": "Kintamani"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1203ng2yx",
                "entity_name": "Damchi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01przn",
                "entity_name": "Mackenzie River husky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0363rs",
                "entity_name": "Toy Manchester Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03y6bvt",
                "entity_name": "Finnish Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yk8l",
                "entity_name": "Tibetan Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05p5nvc",
                "entity_name": "Petit Bleu de Gascogne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07bln6",
                "entity_name": "Curly Coated Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07t_h2",
                "entity_name": "Africanis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09h20b",
                "entity_name": "Rafeiro do Alentejo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c1zmz",
                "entity_name": "Central Asian Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j7vm",
                "entity_name": "Kuvasz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ysvz",
                "entity_name": "Louisiana Catahoula Leopard Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011l1",
                "entity_name": "Afghan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018ywq",
                "entity_name": "Scottish Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_gx_",
                "entity_name": "Yorkshire Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p89l",
                "entity_name": "Sarplaninac"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025s7vs",
                "entity_name": "Briquet Griffon Vend\u00e9en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028y5g",
                "entity_name": "Saarloos wolfdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02f1fz",
                "entity_name": "West Highland White Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kn5w",
                "entity_name": "Entlebucher Mountain Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q6wxt",
                "entity_name": "Karakachan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rf9c3",
                "entity_name": "Central Anatolian Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ryncw",
                "entity_name": "Ariege Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xv1",
                "entity_name": "Lakeland Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035405",
                "entity_name": "Finnish Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0355ff",
                "entity_name": "Greenland Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c51t7",
                "entity_name": "Welsh Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dszr",
                "entity_name": "Akbash dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04371y",
                "entity_name": "Kangal dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045tty",
                "entity_name": "Japanese Chin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.052h3c",
                "entity_name": "Karelian Bear Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06m828",
                "entity_name": "Petit Basset Griffon Vend\u00e9en"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06v_sc",
                "entity_name": "American Foxhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089vcl",
                "entity_name": "Thai Ridgeback"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c40t",
                "entity_name": "Chow Chow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ys4",
                "entity_name": "Ibizan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fxnkq",
                "entity_name": "Moscow Watchdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j0g",
                "entity_name": "Borzoi"
            }
        ]
    },
    {
        "question": "games developed by taito corporation and distributed through physical media released where?",
        "qid": "4301141023000_grailqa",
        "source": "grailqa",
        "entities": {
            "Physical media": "m.0663y78",
            "Taito Corporation": "m.07rfp"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.07rfp))))",
        "actions": [
            "get_relations(m.0663y78)",
            "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.07rfp)",
            "get_neighbors(m.07rfp,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_3d",
                "entity_name": "Japan"
            }
        ]
    },
    {
        "question": "what is the political ideology followed by the us republican party and the canadian federal election, 2008?",
        "qid": "4302370006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Canadian federal election, 2008": "m.0b1_7g",
            "us republican party": "m.07wbk"
        },
        "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.0b1_7g)) (JOIN (R government.political_party.ideology) m.07wbk)))",
        "actions": [
            "get_relations(m.0b1_7g)",
            "get_neighbors(m.0b1_7g,government.parliamentary_election.government_formed_by)",
            "get_relations(#0)",
            "get_neighbors(#0,government.political_party.ideology)",
            "get_relations(m.07wbk)",
            "get_neighbors(m.07wbk,government.political_party.ideology)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yqp",
                "entity_name": "Conservatism"
            }
        ]
    },
    {
        "question": "which viewfinder does the camera with the sensor from matsushita electric industrial co., ltd. and a compression format of quicktime file format use?",
        "qid": "4302274015000_grailqa",
        "source": "grailqa",
        "entities": {
            "QuickTime File Format": "g.120ky_p1",
            "matsushita electric industrial co., ltd.": "m.0nk5b"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) g.120ky_p1) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.0nk5b))))",
        "actions": [
            "get_relations(g.120ky_p1)",
            "get_neighbors(g.120ky_p1,digicams.camera_compressed_format.cameras)",
            "get_relations(m.0nk5b)",
            "get_neighbors(m.0nk5b,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.026krtn",
                "entity_name": "Live preview"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.036132",
                "entity_name": "Electronic viewfinder"
            }
        ]
    },
    {
        "question": "What ocean does the river under the Swanport Bridge flow into?",
        "qid": "WebQTrn-1234_163eb3ba328ba762733d8663ddb02520_cwq",
        "source": "cwq",
        "entities": {
            "ocean": "m.05kq4",
            "Swanport Bridge": "m.03qn4l4"
        },
        "s_expression": "(AND (JOIN (R geography.river.mouth) (JOIN geography.body_of_water.bridges m.03qn4l4)) (JOIN geography.geographical_feature.category m.05kq4))",
        "actions": [
            "get_relations(m.03qn4l4)",
            "get_neighbors(m.03qn4l4,transportation.bridge.body_of_water_spanned)",
            "get_relations(#0)",
            "get_neighbors(#0,geography.river.mouth)",
            "get_relations(m.05kq4)",
            "get_neighbors(m.05kq4,geography.geographical_feature_category.features)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.06nqw",
                "answer_type": "Entity",
                "entity_name": "Southern Ocean"
            }
        ]
    },
    {
        "question": "which character with an item destroyed by tempus had powers which included control bodies of others?",
        "qid": "4302209010000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tempus": "m.0bxj80p",
            "Control bodies of others": "m.0c82m0y"
        },
        "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxj80p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c82m0y)))",
        "actions": [
            "get_relations(m.0bxj80p)",
            "get_neighbors(m.0bxj80p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
            "get_relations(#0)",
            "get_neighbors(#0,fictional_universe.fictional_object.owner)",
            "get_relations(m.0c82m0y)",
            "get_neighbors(m.0c82m0y,fictional_universe.character_powers.characters_with_this_ability)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxtt5p",
                "entity_name": "Askelon of Meridian"
            }
        ]
    },
    {
        "question": "how much content about talk radio is produced by the person that produces weekend edition sunday?",
        "qid": "4303008004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Talk radio": "m.07dn1",
            "Weekend Edition Sunday": "m.0t4t10s"
        },
        "s_expression": "(COUNT (AND broadcast.content (AND (JOIN (R broadcast.genre.content) m.07dn1) (JOIN (R broadcast.producer.produces) (JOIN broadcast.producer.produces m.0t4t10s)))))",
        "actions": [
            "get_relations(m.07dn1)",
            "get_neighbors(m.07dn1,broadcast.genre.content)",
            "get_relations(m.0t4t10s)",
            "get_neighbors(m.0t4t10s,broadcast.content.producer)",
            "get_relations(#1)",
            "get_neighbors(#1,broadcast.producer.produces)",
            "intersection(#0,#2)",
            "count(#3)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "4"
            }
        ]
    },
    {
        "question": "drugs formulated from phenol/diphenhydramine containing active ingredient panax ginseng fruit have what dosage form?",
        "qid": "5400022004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Phenol/Diphenhydramine": "m.0jxrk_0",
            "Panax ginseng fruit": "m.0jxp2xd"
        },
        "s_expression": "(AND medicine.drug_dosage_form (AND (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.formulation_of m.0jxrk_0)) (JOIN medicine.drug_dosage_form.formulations_available_in_this_form (JOIN medicine.drug_formulation.active_ingredient_moieties m.0jxp2xd))))",
        "actions": [
            "get_relations(m.0jxrk_0)",
            "get_neighbors(m.0jxrk_0,medicine.drug.marketed_formulations)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.drug_formulation.dosage_form)",
            "get_relations(m.0jxp2xd)",
            "get_neighbors(m.0jxp2xd,medicine.drug_ingredient.active_moiety_of_formulation)",
            "get_relations(#2)",
            "get_neighbors(#2,medicine.drug_formulation.dosage_form)",
            "intersection(#1,#3)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04k94",
                "entity_name": "Liquid"
            }
        ]
    },
    {
        "question": "the maximum speed can be found in which ride designed by the same designer as haunted manison?",
        "qid": "482000302_graphquestions",
        "source": "graphquestions",
        "entities": {
            "haunted manison": "m.01p79p"
        },
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "actions": [
            "get_relations(m.01p79p)",
            "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
            "get_relations(#0)",
            "get_neighbors(#0,amusement_parks.ride_designer.rides)",
            "get_attributes(#1)",
            "argmax(#1,amusement_parks.ride.max_speed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "question": "which olympic event was contested officially in 1928 winter olympics and other olympic games in great salt lake city?",
        "qid": "4300161005000_grailqa",
        "source": "grailqa",
        "entities": {
            "great salt lake city": "m.0f2r6",
            "1928 Winter Olympics": "m.0d4j2"
        },
        "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0f2r6)) (JOIN olympics.olympic_event.olympic_games_contested m.0d4j2)))",
        "actions": [
            "get_relations(m.0f2r6)",
            "get_neighbors(m.0f2r6,olympics.olympic_host_city.olympics_hosted)",
            "get_relations(#0)",
            "get_neighbors(#0,olympics.olympic_games.events)",
            "get_relations(m.0d4j2)",
            "get_neighbors(m.0d4j2,olympics.olympic_games.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nxf_t",
                "entity_name": "Men's Cross-country, 50km"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wqcn",
                "entity_name": "Women's Singles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wqdl",
                "entity_name": "Men's 500m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wqf_",
                "entity_name": "Men's 10000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06zh_xm",
                "entity_name": "Men's 1500m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06zhzln",
                "entity_name": "Men's 5000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nxg0q",
                "entity_name": "Men's Nordic Combined, Individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07rcjwr",
                "entity_name": "Men's Large hill individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bj4fg7",
                "entity_name": "Men's singles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wqds",
                "entity_name": "Men's Skeleton"
            }
        ]
    },
    {
        "question": "tempus destroyed an item belonging to which character with the ability of soul destruction?",
        "qid": "4302209012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tempus": "m.0bxj80p",
            "soul destruction": "m.0c1rylz"
        },
        "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0bxj80p)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.0c1rylz)))",
        "actions": [
            "get_relations(m.0bxj80p)",
            "get_neighbors(m.0bxj80p,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
            "get_relations(#0)",
            "get_neighbors(#0,fictional_universe.fictional_object.owner)",
            "get_relations(m.0c1rylz)",
            "get_neighbors(m.0c1rylz,fictional_universe.character_powers.characters_with_this_ability)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c0b19n",
                "entity_name": "Cime"
            }
        ]
    },
    {
        "question": "what category of schools do emmaus high school and the publisher of the chattahoochee review fall under?",
        "qid": "4301751015000_grailqa",
        "source": "grailqa",
        "entities": {
            "The Chattahoochee Review": "m.05f5qnj",
            "Emmaus High School": "m.0cmm22"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.05f5qnj)) (JOIN (R education.educational_institution.school_type) m.0cmm22)))",
        "actions": [
            "get_relations(m.05f5qnj)",
            "get_neighbors(m.05f5qnj,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.0cmm22)",
            "get_neighbors(m.0cmm22,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02dk5q",
                "entity_name": "State school"
            }
        ]
    },
    {
        "question": "what is the longest release track of recordings written by robyn ferguson?",
        "qid": "4300020008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Robyn Ferguson": "m.0115t775"
        },
        "s_expression": "(ARGMAX (AND music.release_track (JOIN (R music.recording.tracks) (JOIN (R music.engineer.tracks_engineered) m.0115t775))) music.release_track.length)",
        "actions": [
            "get_relations(m.0115t775)",
            "get_neighbors(m.0115t775,music.engineer.tracks_engineered)",
            "get_relations(#0)",
            "get_neighbors(#0,music.recording.tracks)",
            "get_attributes(#1)",
            "argmax(#1,music.release_track.length)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011cgpg_",
                "entity_name": "Molested Innocence"
            }
        ]
    },
    {
        "question": "Which museum established latest can be seen in downtown Chicago?",
        "qid": "WebQTrn-825_ca574e3042334dacd81a97eceeb3cbc4_cwq",
        "source": "cwq",
        "entities": {
            "Chicago": "m.01_d4"
        },
        "s_expression": "(ARGMAX (AND (JOIN (R travel.travel_destination.tourist_attractions) m.01_d4) (JOIN location.location.containedby m.01_d4)) architecture.museum.established)",
        "actions": [
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,travel.travel_destination.tourist_attractions)",
            "get_relations(m.01_d4)",
            "get_neighbors(m.01_d4,location.location.contains)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmax(#2,architecture.museum.established)"
        ],
        "answer": [
            {
                "answer_argument": "m.021czc",
                "answer_type": "Entity",
                "entity_name": "Field Museum of Natural History"
            }
        ]
    },
    {
        "question": "What is the most populous city in the country of origin for Al Ahram Beverages Co Stella Beer?",
        "qid": "WebQTrn-3037_9f924908bb36bf7d331fa1b933af9f58_cwq",
        "source": "cwq",
        "entities": {
            "al ahram beverages co stella beer": "m.04dqn_j"
        },
        "s_expression": "(ARGMAX (JOIN (R location.location.contains) (JOIN food.beer_country_region.beers_from_here m.04dqn_j)) topic_server.population_number)",
        "actions": [
            "get_relations(m.04dqn_j)",
            "get_neighbors(m.04dqn_j,food.beer.from_region)",
            "get_relations(#0)",
            "get_neighbors(#0,location.location.contains)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.080msrv",
                "answer_type": "Entity",
                "entity_name": "Greater Cairo"
            }
        ]
    },
    {
        "question": "the harrier and chinese crested dog dog breeds share how many temperaments?",
        "qid": "3205485002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Harrier": "m.0fsg8",
            "Chinese Crested Dog": "m.01f57_"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.0fsg8) (JOIN (R biology.animal_breed.temperament) m.01f57_))))",
        "actions": [
            "get_relations(m.0fsg8)",
            "get_neighbors(m.0fsg8,biology.animal_breed.temperament)",
            "get_relations(m.01f57_)",
            "get_neighbors(m.01f57_,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "Which year did the team whose mascots's name is Rise win the Superbowl?",
        "qid": "WebQTest-837_5dd0eeca79ae03b7711252c032849eb2_cwq",
        "source": "cwq",
        "entities": {
            "Superbowl": "m.06x5s",
            "Rise": "m.0nz45zc"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.0nz45zc)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.0nz45zc)",
            "get_neighbors(m.0nz45zc,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv"
            },
            {
                "answer_argument": "m.076yq"
            }
        ]
    },
    {
        "question": "which olympic event was officially contested in the 1936 olympics,as well as other olympic games in amesterdam?",
        "qid": "4300161011000_grailqa",
        "source": "grailqa",
        "entities": {
            "amesterdam": "m.0k3p",
            "1936 olympics": "m.09x3r"
        },
        "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.0k3p)) (JOIN olympics.olympic_event.olympic_games_contested m.09x3r)))",
        "actions": [
            "get_relations(m.0k3p)",
            "get_neighbors(m.0k3p,olympics.olympic_host_city.olympics_hosted)",
            "get_relations(#0)",
            "get_neighbors(#0,olympics.olympic_games.events)",
            "get_relations(m.09x3r)",
            "get_neighbors(m.09x3r,olympics.olympic_games.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3lm",
                "entity_name": "Women's Discus throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gnx9y",
                "entity_name": "Men's 300m Free Rifle, 3 Positions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cx",
                "entity_name": "Men's \u00c9p\u00e9e individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6sy",
                "entity_name": "Men's Weightlifting, Light Heavyweight 75-82.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2_w",
                "entity_name": "Men's Track cycling, Sprint individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079rjhk",
                "entity_name": "Track Cycling, Men's 1000m Time Trial"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cl",
                "entity_name": "Men's Shot put"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk326",
                "entity_name": "Men's 200m breaststroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pv",
                "entity_name": "Men's Javelin throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hx",
                "entity_name": "Men's 1500m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ngnwg",
                "entity_name": "Men's Boxing, Middleweight 66.7-72.6kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pc",
                "entity_name": "Men's Discus throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk368",
                "entity_name": "Women's High jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9lcn",
                "entity_name": "Women's 3 metre springboard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9ld0",
                "entity_name": "Men's 3 metre springboard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f9ld6",
                "entity_name": "Women's 10 metre platform"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk29t",
                "entity_name": "Men's Parallel bars"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2c_",
                "entity_name": "Men's Gymnastics, individual all-round"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2cj",
                "entity_name": "Men's Long jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2dm",
                "entity_name": "Women's Foil individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2f7",
                "entity_name": "Men's 50m pistol"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2gh",
                "entity_name": "Eventing, individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hl",
                "entity_name": "Men's Athletics, 100m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2jp",
                "entity_name": "Men's Athletics, 5000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2lq",
                "entity_name": "Men's Foil individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2mz",
                "entity_name": "Men's Marathon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qm",
                "entity_name": "Men's Athletics, 400m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qs",
                "entity_name": "Men's 100m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2rd",
                "entity_name": "Men's Pole vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2sn",
                "entity_name": "Women's 100m backstroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2tl",
                "entity_name": "Men's Athletics, 400m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2tx",
                "entity_name": "Women's 400m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2x7",
                "entity_name": "Men's Pommel horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2xq",
                "entity_name": "Men's Sabre individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2yb",
                "entity_name": "Jumping, individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2yh",
                "entity_name": "Men's Athletics, 200m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2zl",
                "entity_name": "Men's Horizontal bar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk300",
                "entity_name": "Men's Hammer throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30h",
                "entity_name": "Men's Athletics, 110m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30t",
                "entity_name": "Men's 400m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32_",
                "entity_name": "Men's Triple jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32p",
                "entity_name": "Men's High jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk33m",
                "entity_name": "Women's 200m breaststroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk35z",
                "entity_name": "Men's Modern pentathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39d",
                "entity_name": "Men's Vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39q",
                "entity_name": "Women's 100m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39w",
                "entity_name": "Men's Athletics, 10000m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3b5",
                "entity_name": "Men's Athletics, 800m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3bh",
                "entity_name": "Men's 100m backstroke"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3d6",
                "entity_name": "Men's 50m rifle prone"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3dj",
                "entity_name": "Men's Decathlon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3fm",
                "entity_name": "Men's 3000m steeplechase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3kp",
                "entity_name": "Men's Rings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3l9",
                "entity_name": "Men's Single sculls"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3n5",
                "entity_name": "Men's Athletics, 1500m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6br",
                "entity_name": "Men's Weightlifting, Middleweight 67.5-75kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07fp6rz",
                "entity_name": "Men's Weightlifting, Lightweight 60-67.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mrmgy",
                "entity_name": "Men's Freestyle Wrestling, Heavyweight +87"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mrmq7",
                "entity_name": "Men's Freestyle Wrestling, Light Heavyweight 79-87kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mvl2f",
                "entity_name": "Men's Weightlifting, Heavyweight +82.5"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9ns",
                "entity_name": "Men's Boxing, Flyweight -50.8kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9p9",
                "entity_name": "Men's Boxing, Featherweight 53.5-57.2kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9pt",
                "entity_name": "Men's Boxing, Welterweight 61.2-66.7kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9qd",
                "entity_name": "Men's Boxing, Light Heavyweight 72.6-79.4kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mx9r1",
                "entity_name": "Men's Boxing, Heavyweight +79.4kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mxbhd",
                "entity_name": "Men's Freestyle Wrestling, Lightweight 61-66kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n660_",
                "entity_name": "Men's Boxing, Bantamweight 50.8-53.5kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n661m",
                "entity_name": "Men's boxing, lightweight 57.2-61.2 kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n668v",
                "entity_name": "Men's Freestyle Wrestling, Welterweight 66-72kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07n6tlh",
                "entity_name": "Men's Freestyle Wrestling, Middleweight 72-79 kg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07ngwtp",
                "entity_name": "Men's Weightlifting, featherweight -60"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0k1nqc0",
                "entity_name": "Individual Dressage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2mn",
                "entity_name": "Women's Athletics, 100m"
            }
        ]
    },
    {
        "question": "how many apple macintosh models used intel core processors?",
        "qid": "3205922011000_grailqa",
        "source": "grailqa",
        "entities": {
            "apple macintosh": "m.0zd6",
            "Intel Core": "m.09b_4m"
        },
        "s_expression": "(COUNT (AND computer.computer (AND (JOIN (R computer.computer.includes_models) m.0zd6) (JOIN computer.computer.processor m.09b_4m))))",
        "actions": [
            "get_relations(m.0zd6)",
            "get_neighbors(m.0zd6,computer.computer.includes_models)",
            "get_relations(m.09b_4m)",
            "get_neighbors(m.09b_4m,computer.computer_processor.used_in_computers)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "The cyclone Eliane affected many areas, what is the larges nation that was affected?",
        "qid": "WebQTest-523_ed9842b42608ed4538f187dc18a3902b_cwq",
        "source": "cwq",
        "entities": {
            "Eliane": "m.03hjlq7"
        },
        "s_expression": "(ARGMAX (JOIN (R base.locations.continents.countries_within) (JOIN meteorology.cyclone_affected_area.cyclones m.03hjlq7)) topic_server.population_number)",
        "actions": [
            "get_relations(m.03hjlq7)",
            "get_neighbors(m.03hjlq7,meteorology.tropical_cyclone.affected_areas)",
            "get_relations(#0)",
            "get_neighbors(#0,base.locations.continents.countries_within)",
            "get_attributes(#1)",
            "argmax(#1,topic_server.population_number)"
        ],
        "answer": [
            {
                "answer_argument": "m.06bnz",
                "answer_type": "Entity",
                "entity_name": "Russia"
            }
        ]
    },
    {
        "question": "of tropical cyclones that affected tci, which are in the same category with tropical storm linda?",
        "qid": "4300198002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Tropical Storm Linda": "m.0bhbf6b",
            "tci": "m.07fr_"
        },
        "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.0bhbf6b)) (JOIN meteorology.tropical_cyclone.affected_areas m.07fr_)))",
        "actions": [
            "get_relations(m.0bhbf6b)",
            "get_neighbors(m.0bhbf6b,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_relations(m.07fr_)",
            "get_neighbors(m.07fr_,meteorology.cyclone_affected_area.cyclones)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jhm3w",
                "entity_name": "Hurricane Hanna"
            }
        ]
    },
    {
        "question": "which was the most recently formed cyclone in the same category as hurricane sandy?",
        "qid": "4303808007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hurricane Sandy": "m.0n9fbyf"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.0n9fbyf))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.0n9fbyf)",
            "get_neighbors(m.0n9fbyf,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011__193",
                "entity_name": "Hurricane Simon"
            }
        ]
    },
    {
        "question": "What type of government does Australia currently have, specifically where Emanuel Lasker was born?",
        "qid": "WebQTrn-848_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Australia": "m.0chghy",
            "Emanuel Lasker": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0chghy) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.0chghy)",
            "get_neighbors(m.0chghy,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "In what year did a team win the superbowl and the 2013 AFC Championship Game ?",
        "qid": "WebQTest-837_c4e06c3a9e4b4f10bd1ae97f1742c198_cwq",
        "source": "cwq",
        "entities": {
            "Superbowl": "m.06x5s",
            "2013 AFC Championship Game": "m.0_gtz8t"
        },
        "s_expression": "(AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.0_gtz8t)) (JOIN sports.sports_championship_event.championship m.06x5s))",
        "actions": [
            "get_relations(m.0_gtz8t)",
            "get_neighbors(m.0_gtz8t,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0642vqv"
            },
            {
                "answer_argument": "m.076yq"
            }
        ]
    },
    {
        "question": "which viewfinder does the camera with sensor from nikon corp. and a compression format of jpeg image use?",
        "qid": "4302274006000_grailqa",
        "source": "grailqa",
        "entities": {
            "jpeg image": "m.0220vh_",
            "nikon corp.": "m.03pmfw"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.0220vh_) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.03pmfw))))",
        "actions": [
            "get_relations(m.0220vh_)",
            "get_neighbors(m.0220vh_,digicams.camera_compressed_format.cameras)",
            "get_relations(m.03pmfw)",
            "get_neighbors(m.03pmfw,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01jpdj",
                "entity_name": "Pentaprism"
            }
        ]
    },
    {
        "question": "which musical release is produced by it can happen and labelled warner bros records?",
        "qid": "4301990005000_grailqa",
        "source": "grailqa",
        "entities": {
            "It Can Happen": "m.0ph2bx",
            "warner bros records": "m.03rhqg"
        },
        "s_expression": "(AND music.release (AND (JOIN music.release.producers (JOIN (R music.recording.producer) m.0ph2bx)) (JOIN music.release.label m.03rhqg)))",
        "actions": [
            "get_relations(m.0ph2bx)",
            "get_neighbors(m.0ph2bx,music.recording.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,music.producer.releases_produced)",
            "get_relations(m.03rhqg)",
            "get_neighbors(m.03rhqg,music.record_label.releases)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0393p0f",
                "entity_name": "Human Being"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bkpjp",
                "entity_name": "Seal"
            }
        ]
    },
    {
        "question": "bigger than life: the boundless genius of yiddish theater has how many exhibition subjects?",
        "qid": "4302933004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Bigger than Life: The Boundless Genius of Yiddish Theater": "m.04ky4zp"
        },
        "s_expression": "(COUNT (AND exhibitions.exhibition_subject (JOIN (R exhibitions.exhibition.subjects) (JOIN (R exhibitions.type_of_exhibition.exhibitions_of_this_type) (JOIN (R exhibitions.exhibition.exhibition_types) m.04ky4zp)))))",
        "actions": [
            "get_relations(m.04ky4zp)",
            "get_neighbors(m.04ky4zp,exhibitions.exhibition.exhibition_types)",
            "get_relations(#0)",
            "get_neighbors(#0,exhibitions.type_of_exhibition.exhibitions_of_this_type)",
            "get_relations(#1)",
            "get_neighbors(#1,exhibitions.exhibition.subjects)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "41"
            }
        ]
    },
    {
        "question": "mormonites and eastern christians are practiced by how many religious practices?",
        "qid": "3204573013000_grailqa",
        "source": "grailqa",
        "entities": {
            "mormonites": "m.058x5",
            "eastern christians": "m.0blk0"
        },
        "s_expression": "(COUNT (AND religion.religious_practice (AND (JOIN (R religion.religion.practices) m.058x5) (JOIN (R religion.religion.practices) m.0blk0))))",
        "actions": [
            "get_relations(m.058x5)",
            "get_neighbors(m.058x5,religion.religion.practices)",
            "get_relations(m.0blk0)",
            "get_neighbors(m.0blk0,religion.religion.practices)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "2"
            }
        ]
    },
    {
        "question": "What is the standard time where Tulsa International Airport, Texas and located?",
        "qid": "WebQTest-1845_72ce675be82a5655a30547169d8008e9_cwq",
        "source": "cwq",
        "entities": {
            "Texas": "m.07b_l",
            "Tulsa International Airport": "m.01qgx3"
        },
        "s_expression": "(AND (JOIN (R location.location.time_zones) m.07b_l) (JOIN time.time_zone.locations_in_this_time_zone (JOIN location.location.nearby_airports m.01qgx3)))",
        "actions": [
            "get_relations(m.07b_l)",
            "get_neighbors(m.07b_l,location.location.time_zones)",
            "get_relations(m.01qgx3)",
            "get_neighbors(m.01qgx3,aviation.airport.serves)",
            "get_relations(#1)",
            "get_neighbors(#1,location.location.time_zones)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02fqwt",
                "answer_type": "Entity",
                "entity_name": "Central Time Zone"
            }
        ]
    },
    {
        "question": "what's the smallest casino owned by the bellagio hotel owner?",
        "qid": "496000001_graphquestions",
        "source": "graphquestions",
        "entities": {
            "bellagio hotel": "m.033bxs"
        },
        "s_expression": "(ARGMIN (AND base.casinos.casino (JOIN (R base.casinos.casino_owner.casinos_owned) (JOIN base.casinos.casino_owner.casinos_owned m.033bxs))) base.casinos.casino.rooms)",
        "actions": [
            "get_relations(m.033bxs)",
            "get_neighbors(m.033bxs,base.casinos.casino.owner)",
            "get_relations(#0)",
            "get_neighbors(#0,base.casinos.casino_owner.casinos_owned)",
            "get_attributes(#1)",
            "argmin(#1,base.casinos.casino.rooms)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0937y7",
                "entity_name": "Nevada Landing Hotel and Casino"
            }
        ]
    },
    {
        "question": "Birth place to Ant\u00c3\u00a3o Martins Homem, what type of government did Sparta Greece have?",
        "qid": "WebQTrn-1542_89e002ff7250ffeee9ef6f385a7a0658_cwq",
        "source": "cwq",
        "entities": {
            "Sparta": "m.09472",
            "ant\u00e3\u00a3o martins homem": "g.122wbmv4"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.09472) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.122wbmv4)))",
        "actions": [
            "get_relations(m.09472)",
            "get_neighbors(m.09472,location.country.form_of_government)",
            "get_relations(g.122wbmv4)",
            "get_neighbors(g.122wbmv4,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.04szc",
                "answer_type": "Entity",
                "entity_name": "Monarchy"
            }
        ]
    },
    {
        "question": "In what year did the team whose mascot is named Mr. Met when their first world series?",
        "qid": "WebQTrn-2356_0937b86e1aaf5f36cf0faed52effe91c_cwq",
        "source": "cwq",
        "entities": {
            "World Series": "m.0fjp3",
            "Mr. Met": "m.01xn5q"
        },
        "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.01xn5q)) (JOIN sports.sports_championship_event.championship m.0fjp3)) time.event.start_date)",
        "actions": [
            "get_relations(m.01xn5q)",
            "get_neighbors(m.01xn5q,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_relations(m.0fjp3)",
            "get_neighbors(m.0fjp3,sports.sports_championship.events)",
            "intersection(#1,#2)",
            "get_attributes(#3)",
            "argmin(#3,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04jg9_",
                "answer_type": "Entity",
                "entity_name": "1969 World Series"
            }
        ]
    },
    {
        "question": "the computer designer for iphone4 and iphone 5 was whom?",
        "qid": "4301299011000_grailqa",
        "source": "grailqa",
        "entities": {
            "iPhone 5": "m.0gg4gh4",
            "iphone4": "m.0c0bg9c"
        },
        "s_expression": "(AND computer.computer_designer (AND (JOIN computer.computer_designer.computers_designed (JOIN (R computer.computer.parent_model) m.0c0bg9c)) (JOIN (R computer.computer.key_designers) m.0gg4gh4)))",
        "actions": [
            "get_relations(m.0c0bg9c)",
            "get_neighbors(m.0c0bg9c,computer.computer.parent_model)",
            "get_relations(#0)",
            "get_neighbors(#0,computer.computer.key_designers)",
            "get_relations(m.0gg4gh4)",
            "get_neighbors(m.0gg4gh4,computer.computer.key_designers)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02cw6w",
                "entity_name": "Jonathan Ive"
            }
        ]
    },
    {
        "question": "what is the programming language influenced by tex and the program language paradigm used by water programming language?",
        "qid": "4300798013000_grailqa",
        "source": "grailqa",
        "entities": {
            "Water programming language": "m.03qtl5",
            "TeX": "m.07dh_"
        },
        "s_expression": "(AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.03qtl5) (JOIN (R computer.programming_language.language_paradigms) (JOIN computer.programming_language.influenced_by m.07dh_))))",
        "actions": [
            "get_relations(m.03qtl5)",
            "get_neighbors(m.03qtl5,computer.programming_language.language_paradigms)",
            "get_relations(m.07dh_)",
            "get_neighbors(m.07dh_,computer.programming_language.influenced)",
            "get_relations(#1)",
            "get_neighbors(#1,computer.programming_language.language_paradigms)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.05prj",
                "entity_name": "Object-oriented programming"
            }
        ]
    },
    {
        "question": "what digital camera sensor type has the color filter array type of bayer and iso settings of 100?",
        "qid": "4300861014000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "100": "m.01xrf_x"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.01xrf_x))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.01xrf_x)",
            "get_neighbors(m.01xrf_x,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x3xhq",
                "entity_name": "Live MOS"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d17kj",
                "entity_name": "CMOS sensor"
            }
        ]
    },
    {
        "question": "how many temperaments do saarloos wolfdog and briquet griffon vend\u00e9en have in common?",
        "qid": "3205485008000_grailqa",
        "source": "grailqa",
        "entities": {
            "Saarloos wolfdog": "m.028y5g",
            "Briquet Griffon Vend\u00e9en": "m.025s7vs"
        },
        "s_expression": "(COUNT (AND biology.breed_temperament (AND (JOIN biology.breed_temperament.breeds m.028y5g) (JOIN (R biology.animal_breed.temperament) m.025s7vs))))",
        "actions": [
            "get_relations(m.028y5g)",
            "get_neighbors(m.028y5g,biology.animal_breed.temperament)",
            "get_relations(m.025s7vs)",
            "get_neighbors(m.025s7vs,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "What system of government rules Spain, the home of Antao Martins Homem?",
        "qid": "WebQTrn-369_89e002ff7250ffeee9ef6f385a7a0658_cwq",
        "source": "cwq",
        "entities": {
            "Spain": "m.06mkj",
            "antao martins homem": "g.122wbmv4"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.06mkj) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here g.122wbmv4)))",
        "actions": [
            "get_relations(m.06mkj)",
            "get_neighbors(m.06mkj,location.country.form_of_government)",
            "get_relations(g.122wbmv4)",
            "get_neighbors(g.122wbmv4,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.04szc",
                "answer_type": "Entity",
                "entity_name": "Monarchy"
            }
        ]
    },
    {
        "question": "Which World series was the last one to be won by the team that had Crazy Crab as the mascot?",
        "qid": "WebQTest-832_e3d40457273785e46c5b71732713a5f4_cwq",
        "source": "cwq",
        "entities": {
            "Crazy Crab": "m.02q_hzh"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.team_mascot m.02q_hzh)) time.event.start_date)",
        "actions": [
            "get_relations(m.02q_hzh)",
            "get_neighbors(m.02q_hzh,sports.mascot.team)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0117q3yz"
            }
        ]
    },
    {
        "question": "hazelwood west high school and the publisher of folia fall under which category of schools?",
        "qid": "4301751011000_grailqa",
        "source": "grailqa",
        "entities": {
            "Folia": "m.03p0sq7",
            "Hazelwood West High School": "m.08w6sy"
        },
        "s_expression": "(AND education.school_category (AND (JOIN (R education.educational_institution.school_type) (JOIN (R education.school_magazine.school) m.03p0sq7)) (JOIN (R education.educational_institution.school_type) m.08w6sy)))",
        "actions": [
            "get_relations(m.03p0sq7)",
            "get_neighbors(m.03p0sq7,education.school_magazine.school)",
            "get_relations(#0)",
            "get_neighbors(#0,education.educational_institution.school_type)",
            "get_relations(m.08w6sy)",
            "get_neighbors(m.08w6sy,education.educational_institution.school_type)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fjrb",
                "entity_name": "Public school"
            }
        ]
    },
    {
        "question": "what type of guitar does the topic of the image Kirk Hammett performing with Metallica in Vienna in 2007 play?",
        "qid": "WebQTrn-278_48038f9655a95d1ebd646df1c0ec6a68_cwq",
        "source": "cwq",
        "entities": {
            "Guitar": "m.0342h",
            "Kirk Hammett performing with Metallica in Vienna in 2007": "m.0423g15"
        },
        "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN common.topic.image m.0423g15)) (JOIN music.instrument.family m.0342h))",
        "actions": [
            "get_relations(m.0423g15)",
            "get_neighbors(m.0423g15,common.image.appears_in_topic_gallery)",
            "get_relations(#0)",
            "get_neighbors(#0,music.group_member.instruments_played)",
            "get_relations(m.0342h)",
            "get_neighbors(m.0342h,music.instrument.variation)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.018vs",
                "answer_type": "Entity",
                "entity_name": "Bass guitar"
            }
        ]
    },
    {
        "question": "what kind of viewfinder does the sony entertainment's camera with a sensor that compresses image files into jpeg image use?",
        "qid": "4302274014000_grailqa",
        "source": "grailqa",
        "entities": {
            "jpeg image": "m.0220vh_",
            "sony entertainment": "m.06q07"
        },
        "s_expression": "(AND digicams.camera_viewfinder_type (JOIN digicams.camera_viewfinder_type.digital_cameras (AND (JOIN (R digicams.camera_compressed_format.cameras) m.0220vh_) (JOIN digicams.digital_camera.camera_sensor_manufacturer m.06q07))))",
        "actions": [
            "get_relations(m.0220vh_)",
            "get_neighbors(m.0220vh_,digicams.camera_compressed_format.cameras)",
            "get_relations(m.06q07)",
            "get_neighbors(m.06q07,digicams.camera_sensor_manufacturer.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.viewfinder_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01xrg6z",
                "entity_name": "TTL"
            }
        ]
    },
    {
        "question": "The Bahamas was where Emanuel Lasker was born, but what type of government do they have?",
        "qid": "WebQTrn-1245_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Bahamas": "m.0160w",
            "Emanuel Lasker": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.0160w) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.0160w)",
            "get_neighbors(m.0160w,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "how many beer styles are used in cascade hop and hersbrucker?",
        "qid": "3202749004000_grailqa",
        "source": "grailqa",
        "entities": {
            "cascade hop": "m.05q46t2",
            "Hersbrucker": "m.0115gwl7"
        },
        "s_expression": "(COUNT (AND base.lightweight.beer_style (AND (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.05q46t2) (JOIN (R base.lightweight.beer_hop.beer_styles_used_in) m.0115gwl7))))",
        "actions": [
            "get_relations(m.05q46t2)",
            "get_neighbors(m.05q46t2,base.lightweight.beer_hop.beer_styles_used_in)",
            "get_relations(m.0115gwl7)",
            "get_neighbors(m.0115gwl7,base.lightweight.beer_hop.beer_styles_used_in)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "3"
            }
        ]
    },
    {
        "question": "npr news and the producer of the world produce what content?",
        "qid": "4300832010000_grailqa",
        "source": "grailqa",
        "entities": {
            "The World": "m.068xhb",
            "npr news": "m.0c0sl"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.068xhb)) (JOIN broadcast.content.producer m.0c0sl)))",
        "actions": [
            "get_relations(m.068xhb)",
            "get_neighbors(m.068xhb,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.0c0sl)",
            "get_neighbors(m.0c0sl,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d7q1y",
                "entity_name": "PRI's The World - Geo Quiz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bv0hk",
                "entity_name": "PRI: Selected Shorts"
            }
        ]
    },
    {
        "question": "what is the political ideology that the people's monarchist party and the queensland state election, 1977 follow?",
        "qid": "4302370003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Queensland state election, 1977": "m.025_983",
            "People's Monarchist Party": "m.069gcq"
        },
        "s_expression": "(AND government.political_ideology (AND (JOIN government.political_ideology.political_parties (JOIN (R government.parliamentary_election.government_formed_by) m.025_983)) (JOIN (R government.political_party.ideology) m.069gcq)))",
        "actions": [
            "get_relations(m.025_983)",
            "get_neighbors(m.025_983,government.parliamentary_election.government_formed_by)",
            "get_relations(#0)",
            "get_neighbors(#0,government.political_party.ideology)",
            "get_relations(m.069gcq)",
            "get_neighbors(m.069gcq,government.political_party.ideology)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01yqp",
                "entity_name": "Conservatism"
            }
        ]
    },
    {
        "question": "What kind of guitar is played by the lyracist who wrote Second Hand News?",
        "qid": "WebQTrn-3122_2b191a52aba771c6c8ea676fadf7b51e_cwq",
        "source": "cwq",
        "entities": {
            "Guitar": "m.0342h",
            "Second Hand News": "m.0bb7st6"
        },
        "s_expression": "(AND (JOIN (R music.group_member.instruments_played) (JOIN music.lyricist.lyrics_written m.0bb7st6)) (JOIN music.instrument.family m.0342h))",
        "actions": [
            "get_relations(m.0bb7st6)",
            "get_neighbors(m.0bb7st6,music.composition.lyricist)",
            "get_relations(#0)",
            "get_neighbors(#0,music.group_member.instruments_played)",
            "get_relations(m.0342h)",
            "get_neighbors(m.0342h,music.instrument.variation)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.018vs",
                "answer_type": "Entity",
                "entity_name": "Bass guitar"
            }
        ]
    },
    {
        "question": "In the country that contains Gebel Elba, what is the primary language spoken?",
        "qid": "WebQTest-1608_8b3815ec57389b13892dd5abb108cc4e_cwq",
        "source": "cwq",
        "entities": {
            "Gebel Elba": "m.026cy73"
        },
        "s_expression": "(JOIN (R location.country.languages_spoken) (AND (JOIN (R language.human_language.main_country) common.topic) (JOIN location.location.partially_contains m.026cy73)))",
        "actions": [
            "get_relations(common.topic)",
            "get_neighbors(common.topic,language.human_language.main_country)",
            "get_relations(m.026cy73)",
            "get_neighbors(m.026cy73,location.location.partially_containedby)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,location.country.languages_spoken)"
        ],
        "answer": [
            {
                "answer_argument": "m.012zfy",
                "answer_type": "Entity",
                "entity_name": "Siwi Language"
            },
            {
                "answer_argument": "m.02hx2cr",
                "answer_type": "Entity",
                "entity_name": "Egyptian Arabic"
            },
            {
                "answer_argument": "m.02hxbhg",
                "answer_type": "Entity",
                "entity_name": "Sa'idi Arabic"
            },
            {
                "answer_argument": "m.03wc2kf",
                "answer_type": "Entity",
                "entity_name": "Bedawi Arabic"
            }
        ]
    },
    {
        "question": "What is the most recent World Series won by the baseball club that won the 1986 World Series Championship?",
        "qid": "WebQTest-1556_14f8825251f4fac1508fc8d1174fcd38_cwq",
        "source": "cwq",
        "entities": {
            "1986 World Series": "m.01q9lc"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.01q9lc)) time.event.end_date)",
        "actions": [
            "get_relations(m.01q9lc)",
            "get_neighbors(m.01q9lc,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q9lc",
                "answer_type": "Entity",
                "entity_name": "1986 World Series"
            }
        ]
    },
    {
        "question": "When did the sports team who calls Hilltop Park home last win the World Series?",
        "qid": "WebQTrn-710_1afd5634cb719e3b77b4345510599ca8_cwq",
        "source": "cwq",
        "entities": {
            "Hilltop Park": "m.039nhz"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.039nhz)) time.event.start_date)",
        "actions": [
            "get_relations(m.039nhz)",
            "get_neighbors(m.039nhz,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.0117q3yz"
            }
        ]
    },
    {
        "question": "where is the version developed by taito corporation and distributed through physical media released?",
        "qid": "4301141006000_grailqa",
        "source": "grailqa",
        "entities": {
            "Physical media": "m.0663y78",
            "Taito Corporation": "m.07rfp"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.0663y78) (JOIN (R cvg.cvg_developer.game_versions_developed) m.07rfp))))",
        "actions": [
            "get_relations(m.0663y78)",
            "get_neighbors(m.0663y78,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.07rfp)",
            "get_neighbors(m.07rfp,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_3d",
                "entity_name": "Japan"
            }
        ]
    },
    {
        "question": "which dog breeds have the same temperament as maltese terrier and english setter?",
        "qid": "4300795013000_grailqa",
        "source": "grailqa",
        "entities": {
            "maltese terrier": "m.02cyl6",
            "English Setter": "m.0gz1d"
        },
        "s_expression": "(AND biology.animal_breed (JOIN biology.animal_breed.temperament (AND (JOIN (R biology.animal_breed.temperament) m.02cyl6) (JOIN biology.breed_temperament.breeds m.0gz1d))))",
        "actions": [
            "get_relations(m.02cyl6)",
            "get_neighbors(m.02cyl6,biology.animal_breed.temperament)",
            "get_relations(m.0gz1d)",
            "get_neighbors(m.0gz1d,biology.animal_breed.temperament)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,biology.breed_temperament.breeds)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.027dd3t",
                "entity_name": "Black Norwegian Elkhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02r4blp",
                "entity_name": "Braque d'Auvergne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qn1p",
                "entity_name": "English Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p39m",
                "entity_name": "American Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01sc6y",
                "entity_name": "Patterdale Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03htgw",
                "entity_name": "Koolie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ysz",
                "entity_name": "Italian Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05sfy0",
                "entity_name": "L\u00f6wchen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08s0ws",
                "entity_name": "Boykin Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gz2b",
                "entity_name": "Australian Kelpie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0km3f",
                "entity_name": "Labrador Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kwdc",
                "entity_name": "German Wirehaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gx1zf",
                "entity_name": "Billy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01t032",
                "entity_name": "Golden Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020z66",
                "entity_name": "Miniature Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0182yx",
                "entity_name": "Shetland Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0km5c",
                "entity_name": "German Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0183xd",
                "entity_name": "Vizsla"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01cx_v",
                "entity_name": "Chesapeake Bay Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01hzb8",
                "entity_name": "Great Pyrenees"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j0x",
                "entity_name": "Basenji"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01kv93",
                "entity_name": "Staffordshire Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p5rd",
                "entity_name": "Bernese Mountain Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pm38",
                "entity_name": "Clumber Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01s7fj",
                "entity_name": "Shih Tzu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020z5t",
                "entity_name": "English Springer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0271kpq",
                "entity_name": "Spanish Water Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_73c",
                "entity_name": "Rat Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kf24",
                "entity_name": "Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kgrx",
                "entity_name": "Cardigan Welsh Corgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kw9d",
                "entity_name": "German Shorthaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02nscg",
                "entity_name": "Bearded Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rfz5",
                "entity_name": "Irish Soft-coated Wheaten Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjrc",
                "entity_name": "Groenendael"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02wbf7",
                "entity_name": "Bedlington Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.031pqh",
                "entity_name": "Peruvian Hairless Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353h4",
                "entity_name": "Border Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035xn5",
                "entity_name": "Toy Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03_vlr",
                "entity_name": "Smooth Fox Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cq_p",
                "entity_name": "Kerry Blue Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d12",
                "entity_name": "Greyhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03jjm4",
                "entity_name": "Norwich Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l5cy",
                "entity_name": "Spinone Italiano"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ydd_",
                "entity_name": "Havanese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0403wp9",
                "entity_name": "Muggin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410k_5",
                "entity_name": "Treeing Tennessee Brindle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dm6",
                "entity_name": "Komondor"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04jj62w",
                "entity_name": "Llewellyn"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04nmst",
                "entity_name": "King Charles Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04prkf",
                "entity_name": "Small M\u00fcnsterl\u00e4nder"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04swlxt",
                "entity_name": "Hellenikos Ichnilatis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.057_4d",
                "entity_name": "Canadian Eskimo Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05tbqb",
                "entity_name": "Coton de Tulear"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y236",
                "entity_name": "New Guinea singing dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.074pqh",
                "entity_name": "Spanish Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773fb",
                "entity_name": "Treeing Walker Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07dx0m",
                "entity_name": "Japanese Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08626",
                "entity_name": "Whippet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08f_zh",
                "entity_name": "Pont-Audemer Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bjrtp",
                "entity_name": "Cirneco dell'Etna"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bllpv",
                "entity_name": "Puggle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dpx6y",
                "entity_name": "German Longhaired Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fl887",
                "entity_name": "Braque du Bourbonnais"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gt5n2",
                "entity_name": "Cretan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gvx7",
                "entity_name": "Pharaoh Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hw_s",
                "entity_name": "Basset Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0nr94",
                "entity_name": "Bichon Frise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04p3f7",
                "entity_name": "Standard Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1203ng2yx",
                "entity_name": "Damchi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017lw7",
                "entity_name": "American Eskimo Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d7mc",
                "entity_name": "Black and Tan Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01dj7",
                "entity_name": "Beagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01llgk",
                "entity_name": "Boxer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p33b",
                "entity_name": "Mudi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p85j",
                "entity_name": "Barbet"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pq45",
                "entity_name": "Chinook"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01przn",
                "entity_name": "Mackenzie River husky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pyhj",
                "entity_name": "Shiloh Shepherd Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.020dr1",
                "entity_name": "Bluetick coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026067b",
                "entity_name": "Guejae Gae"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026qz0j",
                "entity_name": "Polish Hunting Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0285t83",
                "entity_name": "German Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fvym",
                "entity_name": "Goldendoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02fxgn",
                "entity_name": "Cockapoo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kfwr",
                "entity_name": "Poodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ktbm",
                "entity_name": "Smooth Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kvr1",
                "entity_name": "Puli"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02n_s4",
                "entity_name": "Korean Jindo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02p1d4",
                "entity_name": "St. Bernard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pp4mc",
                "entity_name": "Bohemian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pxllv",
                "entity_name": "Blue Picardy Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qx4jn",
                "entity_name": "IrishJacks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02x9dk",
                "entity_name": "Boston Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xlz3",
                "entity_name": "Bergamasco Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z2jdn",
                "entity_name": "Beagador"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z57c",
                "entity_name": "Cairn Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xnp",
                "entity_name": "Welsh Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03606n",
                "entity_name": "Sapsali"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0363rs",
                "entity_name": "Toy Manchester Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b6hk",
                "entity_name": "Catalan Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03b8_5",
                "entity_name": "Brittany"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03grqp",
                "entity_name": "Drentse Patrijshond"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gt33k",
                "entity_name": "Tamaskan Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03h71r",
                "entity_name": "Bouvier des Flandres"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nrh1z",
                "entity_name": "Canadian Pointer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yk8l",
                "entity_name": "Tibetan Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0408cgh",
                "entity_name": "Stephens Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0410kz_",
                "entity_name": "Schapendoes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044lwh",
                "entity_name": "Irish Water Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04f2yc",
                "entity_name": "Anatolian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mhks",
                "entity_name": "Jagdterrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04svlc5",
                "entity_name": "Braque du Puy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxbdx",
                "entity_name": "Mullins Feist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxbjk",
                "entity_name": "Parnell's Carolina Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05z8jf",
                "entity_name": "Shikoku"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06llrr",
                "entity_name": "Carolina Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_8",
                "entity_name": "Scottish Deerhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076zg",
                "entity_name": "Saluki"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07bln6",
                "entity_name": "Curly Coated Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07p7st",
                "entity_name": "Portuguese Podengo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07vgwn",
                "entity_name": "Pumi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08c5h8",
                "entity_name": "Brazilian Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08pb1g",
                "entity_name": "Australian Stumpy Tail Cattle Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.093z2k",
                "entity_name": "Carlin Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09kkkg",
                "entity_name": "Istrian Coarse-haired Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b26w3",
                "entity_name": "Schnoodle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b6c67",
                "entity_name": "German Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bq2r1",
                "entity_name": "Indian Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c3k58",
                "entity_name": "Pra\u017esk\u00fd Krysa\u0159\u00edk"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c8gtz",
                "entity_name": "Valley Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cqpth",
                "entity_name": "Hortaya borzaya"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dbk_j",
                "entity_name": "Kai Ken"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gh46s",
                "entity_name": "Tahltan Bear Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0h01s5",
                "entity_name": "Skye Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hkfc",
                "entity_name": "Kooikerhondje"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0j7vm",
                "entity_name": "Kuvasz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0lbw4",
                "entity_name": "Great Dane"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0m1ct",
                "entity_name": "Wirehaired Pointing Griffon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ysvz",
                "entity_name": "Louisiana Catahoula Leopard Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0blw4s",
                "entity_name": "Huntaway"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.016wfy",
                "entity_name": "Pomeranian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.017t3p",
                "entity_name": "Airedale Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_gx_",
                "entity_name": "Yorkshire Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01fgs3",
                "entity_name": "Boerboel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j7n4",
                "entity_name": "Swedish Vallhund"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01k9j2",
                "entity_name": "Mexican Hairless Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p89l",
                "entity_name": "Sarplaninac"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01p900",
                "entity_name": "Beauceron"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01pkw7",
                "entity_name": "Papillon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01z404",
                "entity_name": "Newfoundland"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_s6d",
                "entity_name": "Croatian Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025_sbw",
                "entity_name": "French Spaniel"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.026nbpz",
                "entity_name": "Mountain View Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.028br6g",
                "entity_name": "French Brittany"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_70q",
                "entity_name": "Briard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02_jdw",
                "entity_name": "Portuguese Water Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kh72",
                "entity_name": "Parson Russell Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kn5w",
                "entity_name": "Entlebucher Mountain Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02l61f",
                "entity_name": "Rough Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02pl0tr",
                "entity_name": "Dorgi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02ppbk1",
                "entity_name": "American English Coonhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02q6wxt",
                "entity_name": "Karakachan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qllrh",
                "entity_name": "Porcelaine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qr3y_",
                "entity_name": "Northern Inuit Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02rjc05",
                "entity_name": "Dalmatian"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02xp9c",
                "entity_name": "Miniature Australian Shepherd"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xlb",
                "entity_name": "Irish Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.032xv1",
                "entity_name": "Lakeland Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035405",
                "entity_name": "Finnish Spitz"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.038wvd",
                "entity_name": "Toy Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03c51t7",
                "entity_name": "Welsh Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03dszr",
                "entity_name": "Akbash dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03f84m",
                "entity_name": "American Hairless Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fqgz",
                "entity_name": "Australian Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03g_78s",
                "entity_name": "Gaddi Kutta"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03gymyk",
                "entity_name": "Vikhan Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03j7p3",
                "entity_name": "Old English Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03l04k",
                "entity_name": "Nova Scotia Duck Tolling Retriever"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nn344",
                "entity_name": "Catahoula Bulldog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03vrbz",
                "entity_name": "Lhasa Apso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0413r8v",
                "entity_name": "Treeing Cur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045tty",
                "entity_name": "Japanese Chin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04q65n",
                "entity_name": "Giant Schnauzer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04sxch4",
                "entity_name": "Pocket Beagle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04y09b",
                "entity_name": "Landseer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051ppn",
                "entity_name": "Glen of Imaal Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.054kbj",
                "entity_name": "Utonagan"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.055br8",
                "entity_name": "Thai Bangkaew Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05qgc4",
                "entity_name": "Polish Lowland Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05y5lx",
                "entity_name": "Maremma Sheepdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05z86m",
                "entity_name": "Lancashire Heeler"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06g210",
                "entity_name": "Canaan Dog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06pq2r",
                "entity_name": "Doberman Pinscher"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06smkm",
                "entity_name": "Tosa"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06v_sc",
                "entity_name": "American Foxhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06w066",
                "entity_name": "English Foxhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071jj",
                "entity_name": "Siberian Husky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.076_n",
                "entity_name": "Sloughi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.082x3k",
                "entity_name": "Eurasier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.089vcl",
                "entity_name": "Thai Ridgeback"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08kkns",
                "entity_name": "Plott Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.08pmt0",
                "entity_name": "Alaskan Klee Kai"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dflqz",
                "entity_name": "Blue Lacy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g0rch",
                "entity_name": "Danish Swedish Farmdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0pwdp",
                "entity_name": "Border Collie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018z4d",
                "entity_name": "Bloodhound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01d7fl",
                "entity_name": "Jack Russell Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02bp0t",
                "entity_name": "Pekingese"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02kwjt",
                "entity_name": "Weimaraner"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vjwg",
                "entity_name": "Tervuren"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0353wm",
                "entity_name": "English Toy Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03cr7fw",
                "entity_name": "Morkie"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03w0j9",
                "entity_name": "Tibetan Mastiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03ys4",
                "entity_name": "Ibizan Hound"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.049jr6",
                "entity_name": "American Pit Bull Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05pyhd",
                "entity_name": "Tibetan Terrier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06c5rq",
                "entity_name": "Grand Bleu de Gascogne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c779w",
                "entity_name": "Berger Picard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0fxnkq",
                "entity_name": "Moscow Watchdog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.035w0_",
                "entity_name": "Perro de Presa Canario"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01j0g",
                "entity_name": "Borzoi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.018g_l",
                "entity_name": "Rhodesian Ridgeback"
            }
        ]
    },
    {
        "question": "name the sensor type of a digital camera that has the color filter array type of bayer and iso settings of 1200?",
        "qid": "4300861016000_grailqa",
        "source": "grailqa",
        "entities": {
            "bayer": "m.02r8js",
            "1200": "m.04nqz7z"
        },
        "s_expression": "(AND digicams.camera_sensor_type (JOIN (R digicams.digital_camera.sensor_type) (AND (JOIN digicams.digital_camera.color_filter_array_type m.02r8js) (JOIN digicams.digital_camera.iso_setting m.04nqz7z))))",
        "actions": [
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(m.04nqz7z)",
            "get_neighbors(m.04nqz7z,digicams.camera_iso.cameras)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,digicams.digital_camera.sensor_type)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01zqt",
                "entity_name": "Charge-coupled device"
            }
        ]
    },
    {
        "question": "which amusement ride is the fastest of all the ones designed by the person who designed the haunted manison ride?",
        "qid": "482000202_graphquestions",
        "source": "graphquestions",
        "entities": {
            "haunted manison": "m.01p79p"
        },
        "s_expression": "(ARGMAX (AND amusement_parks.ride (JOIN amusement_parks.ride.designer (JOIN amusement_parks.ride_designer.rides m.01p79p))) amusement_parks.ride.max_speed)",
        "actions": [
            "get_relations(m.01p79p)",
            "get_neighbors(m.01p79p,amusement_parks.ride.designer)",
            "get_relations(#0)",
            "get_neighbors(#0,amusement_parks.ride_designer.rides)",
            "get_attributes(#1)",
            "argmax(#1,amusement_parks.ride.max_speed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.040fq5",
                "entity_name": "California Screamin'"
            }
        ]
    },
    {
        "question": "5min media owns what amount of active websites?",
        "qid": "3206340014000_grailqa",
        "source": "grailqa",
        "entities": {
            "Active": "m.02hsn4g",
            "5min Media": "m.02_86nr"
        },
        "s_expression": "(COUNT (AND internet.website (AND (JOIN internet.website.status m.02hsn4g) (JOIN (R internet.website_owner.websites_owned) m.02_86nr))))",
        "actions": [
            "get_relations(m.02hsn4g)",
            "get_neighbors(m.02hsn4g,internet.website_status.sites)",
            "get_relations(m.02_86nr)",
            "get_neighbors(m.02_86nr,internet.website_owner.websites_owned)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "what was the most recently formed cyclone in the same category as hurricane iniki?",
        "qid": "4303808003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Hurricane Iniki": "m.03ndhv"
        },
        "s_expression": "(ARGMAX (AND meteorology.tropical_cyclone (JOIN meteorology.tropical_cyclone.category (JOIN (R meteorology.tropical_cyclone.category) m.03ndhv))) meteorology.tropical_cyclone.formed)",
        "actions": [
            "get_relations(m.03ndhv)",
            "get_neighbors(m.03ndhv,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_attributes(#1)",
            "argmax(#1,meteorology.tropical_cyclone.formed)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.011jnng3",
                "entity_name": "Hurricane Iselle"
            }
        ]
    },
    {
        "question": "how many canadian whiskey are a combination of corn whiskey with rye?",
        "qid": "4302561003000_grailqa",
        "source": "grailqa",
        "entities": {
            "rye": "m.01p5b6",
            "canadian whiskey": "m.0212n",
            "Corn whiskey": "m.01yr36"
        },
        "s_expression": "(COUNT (AND distilled_spirits.blended_spirit (AND (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01p5b6) (AND (JOIN distilled_spirits.blended_spirit.style m.0212n) (JOIN (R distilled_spirits.distilled_spirit_type.blends) m.01yr36)))))",
        "actions": [
            "get_relations(m.01p5b6)",
            "get_neighbors(m.01p5b6,distilled_spirits.distilled_spirit_type.blends)",
            "get_relations(m.0212n)",
            "get_neighbors(m.0212n,distilled_spirits.blended_spirit_style.blends)",
            "get_relations(m.01yr36)",
            "get_neighbors(m.01yr36,distilled_spirits.distilled_spirit_type.blends)",
            "intersection(#1,#2)",
            "intersection(#0,#3)",
            "count(#4)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "Which country is the birth place of the http://leapfroggr.com/blog blogger and the location of puerto galera?",
        "qid": "WebQTrn-1697_4a65a4fa00ada78f4448204112bb58eb_cwq",
        "source": "cwq",
        "entities": {
            "puerto galera": "m.01pn1_",
            "leapfroggr.com": "m.0127vgv8"
        },
        "s_expression": "(AND (JOIN (R location.location.containedby) m.01pn1_) (JOIN location.location.people_born_here (JOIN internet.blogger.blog m.0127vgv8)))",
        "actions": [
            "get_relations(m.01pn1_)",
            "get_neighbors(m.01pn1_,location.location.containedby)",
            "get_relations(m.0127vgv8)",
            "get_neighbors(m.0127vgv8,internet.blog.blogger)",
            "get_relations(#1)",
            "get_neighbors(#1,people.person.place_of_birth)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.05v8c",
                "answer_type": "Entity",
                "entity_name": "Philippines"
            }
        ]
    },
    {
        "question": "which artwork on canvases was painted in the era of auguste herbin?",
        "qid": "4301655004000_grailqa",
        "source": "grailqa",
        "entities": {
            "Auguste Herbin": "m.05rvdq",
            "canvases": "m.0jmpt"
        },
        "s_expression": "(AND visual_art.artwork (AND (JOIN visual_art.artwork.period_or_movement (JOIN visual_art.art_period_movement.associated_artists m.05rvdq)) (JOIN visual_art.artwork.support m.0jmpt)))",
        "actions": [
            "get_relations(m.05rvdq)",
            "get_neighbors(m.05rvdq,visual_art.visual_artist.associated_periods_or_movements)",
            "get_relations(#0)",
            "get_neighbors(#0,visual_art.art_period_movement.associated_artworks)",
            "get_relations(m.0jmpt)",
            "get_neighbors(m.0jmpt,visual_art.visual_art_support.artworks)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bvdlg_",
                "entity_name": "Flowering Peach Trees"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1ylhldg6s",
                "entity_name": "The Bathers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02z97km",
                "entity_name": "Music in the Tuileries"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075vb_b",
                "entity_name": "Train Tracks at the Saint-Lazare Station"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0btycrz",
                "entity_name": "The Floor Scrapers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0czqrv",
                "entity_name": "Dora Maar au Chat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c1gw6f",
                "entity_name": "The Pink Peach Tree"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0glx3bd",
                "entity_name": "Blossoming Pear Tree"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gycf9m",
                "entity_name": "Woman Walking Under the Trees (L'Oliver)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzrt29",
                "entity_name": "The Bathers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.043zkzc",
                "entity_name": "Las Meninas (after Vel\u00e1zquez)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09s423j",
                "entity_name": "The Sick-ward of the Hospital at Arles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4sfsd",
                "entity_name": "Le Pont Neuf"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0449l3r",
                "entity_name": "Bather Seated in a Landscape"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07l9jn6",
                "entity_name": "L'Arl\u00e9sienne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gv9r7",
                "entity_name": "The Card Players"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bmd5nh",
                "entity_name": "The Races at Longchamp"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bnqjhn",
                "entity_name": "View across the Bay"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.060gt8v",
                "entity_name": "The Rue Mosnier with Flags"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9_vc",
                "entity_name": "Stacks of Wheat (Sunset, Snow Effect)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773srr",
                "entity_name": "Symphony in White, No.1: The White Girl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hc9py6",
                "entity_name": "Camille Monet (1847\u20131879) on a Garden Bench"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.120wktcz",
                "entity_name": "Almond Blossoms"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09vb52v",
                "entity_name": "The Houses of Parliament, Sunset"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.052k481",
                "entity_name": "Rainy Day, Fifth Avenue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09s48n4",
                "entity_name": "Lady on a Tram Station"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yyvt4",
                "entity_name": "The Garden at Les Lauves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9yj8",
                "entity_name": "Caf\u00e9 Singer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9yz3",
                "entity_name": "Uncle and Niece (Henri Degas and His Niece Lucie Degas)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.046vv1k",
                "entity_name": "At the Races"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0645tyv",
                "entity_name": "Stage Rehearsal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g6ytc5",
                "entity_name": "Sur la Plage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101hl57",
                "entity_name": "The ship's deck"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025dvlv",
                "entity_name": "London, the Parliament, Effects of Sun in the Fog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075dbn1",
                "entity_name": "Eug\u00e8ne Manet on the Isle of Wight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075dgdn",
                "entity_name": "Eug\u00e8ne Manet and His Daughter at Bougival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075dgf2",
                "entity_name": "Eug\u00e8ne Manet and His Daughter in the Garden"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07l9nhj",
                "entity_name": "Pork Butcher's Shop in Arles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.11cfvbmxd",
                "entity_name": "Fruit Bowl, Glass, and Apples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101hg7n",
                "entity_name": "Flowers in a Crystal Vase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101ht6p",
                "entity_name": "Bunch of asparagus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105ww1y",
                "entity_name": "Flowers in a Vase"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01066wvm",
                "entity_name": "Still Life with Quinces"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0115nvrj",
                "entity_name": "Crab on its Back"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011f8c7n",
                "entity_name": "Horse, Pipe, and Red Flower"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9ynp",
                "entity_name": "The Plate of Apples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb7s3",
                "entity_name": "Still Life with Apples and Grapes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qbbt_",
                "entity_name": "Still Life with Apples, Pears, Lemons and Grapes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qqw31",
                "entity_name": "Still Life with Apples"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0447zr0",
                "entity_name": "Vase with Three Sunflowers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0449pfq",
                "entity_name": "Still Life with a Bottle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.044dnb2",
                "entity_name": "Vase with Five Sunflowers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05b9fkx",
                "entity_name": "Ginger Pot with Pomegranate and Pears"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05sq3lp",
                "entity_name": "Still Life with Fish"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bxzg63",
                "entity_name": "Young Spartans Exercising"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_f4ty",
                "entity_name": "Skiffs on the Yerres"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l0jw",
                "entity_name": "Water Lilies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063tq35",
                "entity_name": "Portrait of Armand Roulin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.066mwg1",
                "entity_name": "Laundresses at the La\u00efta River"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.066mzd_",
                "entity_name": "Paysage"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05fb8zp",
                "entity_name": "Garden at Sainte-Adresse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.046vtw2",
                "entity_name": "The Boating Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09vbb60",
                "entity_name": "Girl in White"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4t_b7",
                "entity_name": "The Garden of the Tuileries on a Winter Afternoon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07mpgkn",
                "entity_name": "Wheat Fields at Auvers Under Clouded Sky"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0chb3gy",
                "entity_name": "Boy with Skull"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l3dp",
                "entity_name": "Water Lilies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121vr3gq",
                "entity_name": "Portrait of Ambroise Vollard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d01s9",
                "entity_name": "Woman with a Guitar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059h5l7",
                "entity_name": "Girl with a Watering Can"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l45c",
                "entity_name": "Wheatstack (Snow Effect, Overcast day)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb7t1",
                "entity_name": "The Artist's House at Argenteuil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025dvkv",
                "entity_name": "Water Lilies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05b7z9h",
                "entity_name": "Water Lilies and Japanese Bridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0cc6rn1",
                "entity_name": "Wheat Field with Cypresses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dmj9n",
                "entity_name": "Violin and Checkerboard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101hnr3",
                "entity_name": "On the beach"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105x1s7",
                "entity_name": "Landscape at Beaulieu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05t3cc",
                "entity_name": "Luncheon of the Boating Party"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0dd7th",
                "entity_name": "The portrait of Eug\u00e8ne Boch"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05c_js6",
                "entity_name": "The Monet Family in Their Garden at Argenteuil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063tq2y",
                "entity_name": "Portrait of Armand Roulin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cz2qq",
                "entity_name": "The Lighthouse at Honfleur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01_x23",
                "entity_name": "Impression, Sunrise"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05btcdq",
                "entity_name": "Self-Portrait with a Straw Hat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1218dxsg",
                "entity_name": "L'Arl\u00e9sienne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb0ph",
                "entity_name": "Equestrienne (At the Circus Fernando)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qbc1v",
                "entity_name": "Moulin de la Galette"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0529g10",
                "entity_name": "At the Rat Mort"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064jbky",
                "entity_name": "At the Moulin Rouge, The Dance"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hc9fxq",
                "entity_name": "Haystacks (Effect of Snow and Sun)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gw5k0",
                "entity_name": "The Card Players"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9yqz",
                "entity_name": "Waterloo Bridge, Sunlight Effect"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb1_h",
                "entity_name": "Fishing in Spring, the Pont de Clichy (Asnires)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0645v0v",
                "entity_name": "Ballet Rehearsal"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0413691",
                "entity_name": "The Railway"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0479_q",
                "entity_name": "The Starry Night"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_8f2w2",
                "entity_name": "La Parisienne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bvb9js",
                "entity_name": "Mountain Landscape behind the Saint Paul Hospital"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05t31rv",
                "entity_name": "Portrait of Dr. Gachet (Second Version)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.042zkxs",
                "entity_name": "The Road Menders"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05b8446",
                "entity_name": "Rouen Cathedral, West Facade, Sunlight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075dgtn",
                "entity_name": "Julie Manet et son L\u00e9vrier Laerte"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773wj5",
                "entity_name": "Molesey Weir \u2013 Morning"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zjn50",
                "entity_name": "Vision After the Sermon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045bc5_",
                "entity_name": "Maison Maria with a View of Ch\u00e2teau-Noir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06_v97l",
                "entity_name": "Pont Boieldieu in Rouen, Rainy Weather"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybwhz",
                "entity_name": "Mademoiselle Ravoux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04d7_sm",
                "entity_name": "L'Allee des Alyscamps"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l43m",
                "entity_name": "Grainstacks, White Frost Effect"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1yg4lyyv6",
                "entity_name": "La gare Saint-Lazare"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cz2zb",
                "entity_name": "Pont Neuf, Paris"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064j5_q",
                "entity_name": "Breton Women in the Meadow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0d7q0p",
                "entity_name": "The Yellow House"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hc9s95",
                "entity_name": "Poppy Fields near Argenteuil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101nwb2",
                "entity_name": "The Seine at Bougival"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l3l5",
                "entity_name": "The Japanese Footbridge and the Water Lily Pool, Giverny"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hc9w4t",
                "entity_name": "Camille Monet (1847\u20131879) in the Garden at Argenteuil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04dmh_z",
                "entity_name": "Harlequin with Guitar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02qxry_",
                "entity_name": "Tiger in a Tropical Storm"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9_gr",
                "entity_name": "Mother and Child"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063jfqk",
                "entity_name": "The Four Trees"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0kbjd8h",
                "entity_name": "When will you marry?"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063yy9w",
                "entity_name": "The Funeral"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gybw9v",
                "entity_name": "Portrait of Adeline Ravoux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qbc95",
                "entity_name": "Terrace and Observation Deck at the Moulin de Blute-Fin, Montmartre"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075vcd2",
                "entity_name": "La gare Saint-Lazare, Les signaux"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0288z6c",
                "entity_name": "The Weeping Woman"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063k__q",
                "entity_name": "Water Lilies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bnqc0x",
                "entity_name": "Le Pont de Maincy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9z78",
                "entity_name": "Branch of the Seine Near Giverny (Mist) from the \"Mornings on the Seine\" series"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l44m",
                "entity_name": "Wheatstacks (End of Day, Autumn)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l0q3",
                "entity_name": "Nympheas"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101hpk8",
                "entity_name": "The House at Rueil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09kl62g",
                "entity_name": "Wheat Stacks with Reaper"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063j6w7",
                "entity_name": "Noirmoutier"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l34t",
                "entity_name": "Water Lilies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.046vwsp",
                "entity_name": "Idle Hours"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.066mwlg",
                "entity_name": "Two Breton Women under an Apple Tree in Flower"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.11b5v6k4fv",
                "entity_name": "L'Arl\u00e9sienne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0100dh2v",
                "entity_name": "Women Walking on the Beach"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bvq_p",
                "entity_name": "And They Still Say Fish are Expensive!"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bvqm5",
                "entity_name": "Children on the Seashore"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064jf15",
                "entity_name": "Portrait of Paul Ranson Wearing Nabic Costume"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yytn4",
                "entity_name": "Mont Sainte-Victoire and the Viaduct of the Arc River Valley"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06l_bv",
                "entity_name": "Nude Descending a Staircase, No. 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0807ttn",
                "entity_name": "Sc\u00e8ne d'\u00e9t\u00e9"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0s8xr_p",
                "entity_name": "The Muses"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04mv5fb",
                "entity_name": "Acacias in Spring"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g913m",
                "entity_name": "Les Ar\u00e8nes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svl7",
                "entity_name": "Twilight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045sbdj",
                "entity_name": "Lady at the Tea Table"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wcwf",
                "entity_name": "La Berceuse (Augustine Roulin)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bdjcd",
                "entity_name": "Portrait of Dr. Gachet (First Version)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773wn6",
                "entity_name": "Footbridge at Argenteuil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9_0y",
                "entity_name": "Madame C\u00e9zanne in a Yellow Chair"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svkz",
                "entity_name": "The Basin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l319",
                "entity_name": "Water Lily Pond"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l42c",
                "entity_name": "Haystacks: Snow Effects"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0598k3n",
                "entity_name": "Rochefort's Escape"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0598g7f",
                "entity_name": "The Green Wave"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.1ym_l12sl",
                "entity_name": "Asparagus"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105wy8x",
                "entity_name": "Chestnut Tree in Bloom"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105x0c5",
                "entity_name": "Portrait of Mademoiselle Irene Cahen d `Anvers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079rl66",
                "entity_name": "Monet Painting in his Garden at Argenteuil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4xgqt",
                "entity_name": "The Quays at Rouen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079rkdy",
                "entity_name": "Houses of Parliament"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105x47v",
                "entity_name": "Girl Reading"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063khk9",
                "entity_name": "Water Lilies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773w2q",
                "entity_name": "Bridge at Villeneuve-la-Garenne"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063jfrm",
                "entity_name": "Poplars (Wind effect)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09s42qf",
                "entity_name": "Bedroom in Arles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wcxf",
                "entity_name": "La Berceuse (Augustine Roulin)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gj5qf4",
                "entity_name": "Two Tahitian Women"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l375",
                "entity_name": "The Water Lily Pond"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svkw",
                "entity_name": "Last Light"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01066wb_",
                "entity_name": "The Harvest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0jwvr2w",
                "entity_name": "In the Conservatory"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svkl",
                "entity_name": "Autumn's Approach"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gzrvsd",
                "entity_name": "The Bathers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121lswy5",
                "entity_name": "The Cradle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045s7b7",
                "entity_name": "Young Woman Sewing in a Garden"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045tl_t",
                "entity_name": "The Swing"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05hyxb",
                "entity_name": "Bal du moulin de la Galette"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06ffxn",
                "entity_name": "The Church at Auvers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l44w",
                "entity_name": "Grainstack (Sunset)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wmxb3",
                "entity_name": "Entrance to the Public Gardens in Arles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.010675v2",
                "entity_name": "Road Along the Seine near Asnieres"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101nttk",
                "entity_name": "Automne, Peupliers, Eragny"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tz78s",
                "entity_name": "The Mother and Sister of the Artist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb0d3",
                "entity_name": "Self-portrait"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0100_wg7",
                "entity_name": "The Saint-Sever Bridge, Rouen: Mist"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy2rtp",
                "entity_name": "Landscape with Figures"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0514lmq",
                "entity_name": "Bathers at Asni\u00e8res"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l42m",
                "entity_name": "Haystacks (Midday)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079rj_l",
                "entity_name": "The Railroad Bridge Viewed from the Port"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svl4",
                "entity_name": "Bluff's Ridge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hgz196",
                "entity_name": "\"Les Vessenots\" in Auvers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wfks",
                "entity_name": "Portrait of Camille Roulin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hc9wdz",
                "entity_name": "Morning on the Seine near Giverny"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bvbh4q",
                "entity_name": "The Agony in the Garden"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075vbvt",
                "entity_name": "Gare Saint-Lazare, the Western Region Goods Sheds"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05cz2q1",
                "entity_name": "Woman with a Parasol - Madame Monet and Her Son"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0635yq9",
                "entity_name": "Mont Sainte-Victoire and Chateau Noir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0120x0m4",
                "entity_name": "Berthe Morisot with a Bouquet of Violets"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065ww11",
                "entity_name": "The Bridge over the Allier at Pont-du-Chateau in Winter"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.065wy1d",
                "entity_name": "Tugboats to Rouen"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yytpq",
                "entity_name": "Montagne Sainte-Victoire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l423",
                "entity_name": "Haystacks at the End of Summer, Morning Effect"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0rysyb4",
                "entity_name": "The Sea at Les Saintes-Maries-de-la-Mer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l42w",
                "entity_name": "Wheatstack"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064j1vl",
                "entity_name": "Bretons in the Forest of Huelgoat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063j2n9",
                "entity_name": "Portrait of the Postman Joseph Roulin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzb_0",
                "entity_name": "Grain Field"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb6xk",
                "entity_name": "Houses of Parliament, London"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121764px",
                "entity_name": "Rouen Cathedral, Full Sunlight"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063ffxg",
                "entity_name": "The Croquet Game"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063pwlk",
                "entity_name": "Grainstack at Giverny"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064j1rr",
                "entity_name": "Landscape at Le Pouldu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0100qk67",
                "entity_name": "Snow At Argenteuil"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0ddbl5r",
                "entity_name": "A Meadow in the Mountains: Le Mas de Saint-Paul"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9zyt",
                "entity_name": "Water Lily Pond"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04w138",
                "entity_name": "Cafe Terrace at Night"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gy6t7f",
                "entity_name": "View of the Domaine Saint-Joseph"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09kl64y",
                "entity_name": "Vineyards with a View of Auvers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hc9x6h",
                "entity_name": "The Bodmer Oak, Fontainebleau Forest"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.066mzdm",
                "entity_name": "La Grammaire"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105x3j1",
                "entity_name": "Fog on Guernsey"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064j1lj",
                "entity_name": "Girl from Savoy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.120jw__9",
                "entity_name": "Soap Bubbles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05bvhpf",
                "entity_name": "Self Portrait with Skull-Cap"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.011f5hz8",
                "entity_name": "test 2"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4xhlj",
                "entity_name": "The Little Country Maid"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05zj4l",
                "entity_name": "Les Demoiselles d'Avignon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l13l",
                "entity_name": "Three Trees in Grey Weather"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gw8z82",
                "entity_name": "Le Moulin de la Galette"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059h4sq",
                "entity_name": "Sunset at Sea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyc6f8",
                "entity_name": "The Dance Hall in Arles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0_g8g96",
                "entity_name": "La Grenouill\u00e8re"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101nvnr",
                "entity_name": "Sunset at Eragny"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079rk47",
                "entity_name": "La Pointe de la H\u00e8ve at Low Tide"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9zqz",
                "entity_name": "On a Balcony"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064j1gs",
                "entity_name": "Farmhouse at Le Pouldu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.079rkz6",
                "entity_name": "Parliament, Effect of Fog"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.121_bx11",
                "entity_name": "Le D\u00e9jeuner sur l'Herbe"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g3vhw",
                "entity_name": "The Three Dancers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075w3rc",
                "entity_name": "The Red Roofs, a Corner of a Village, winter effect"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yyf48",
                "entity_name": "Portrait of Mlle Yvonne Landsberg"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0101hhjt",
                "entity_name": "Claude Monet in his Floating Studio"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.075vbf7",
                "entity_name": "Gare Saint-Lazare: Arrival of a Train"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0598kfc",
                "entity_name": "Boating"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.046vtvq",
                "entity_name": "The Cup of Tea"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07l9nbk",
                "entity_name": "Spring in Arles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yyv84",
                "entity_name": "Mont Sainte-Victoire Seen from the Bibemus Quarry"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03yyv7z",
                "entity_name": "Mont Sainte-Victoire Seen from Les Lauves"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03wbnny",
                "entity_name": "The Large Bathers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l43c",
                "entity_name": "Wheatstack (Thaw, Sunset)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064jd5h",
                "entity_name": "Vines"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gz60h2",
                "entity_name": "Mountains at Saint-Remy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gwbbq",
                "entity_name": "The Card Players"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07622gx",
                "entity_name": "Rue Montargueil with Flags"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4xjy0",
                "entity_name": "White Frost"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb2mw",
                "entity_name": "Arrival of the Normandy Train, Gare Saint-Lazare"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g_4pzl",
                "entity_name": "Bather and the Rocks"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0449pg2",
                "entity_name": "View of Ch\u00e2teau-Noir"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tz79w",
                "entity_name": "In the Dining Room"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gw29d",
                "entity_name": "The Card Players"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064jd53",
                "entity_name": "Digitales"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gvnfc",
                "entity_name": "The Card Players (5th version)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l43w",
                "entity_name": "Wheatstack (Sun in the Mist)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03nvlqz",
                "entity_name": "Mont Sainte-Victoire seen from Bellevue"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l44c",
                "entity_name": "Grainstacks, Snow Effect"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0q3zm38",
                "entity_name": "L'Oiseau bleu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105x55t",
                "entity_name": "Woman with a Parasol in a Garden"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gw907v",
                "entity_name": "Le Moulin de la Galette"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03q9yd1",
                "entity_name": "The Bedroom"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bvb8x0",
                "entity_name": "Landscape from Pont-Aven, Brittany"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.025dvd7",
                "entity_name": "Portrait of Picasso"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qb804",
                "entity_name": "Rabbit Warren at Pontoise, Snow"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063l433",
                "entity_name": "Grainstack in Sunshine"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gkrsx",
                "entity_name": "The Painter of Sunflowers"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09kl9py",
                "entity_name": "Self-Portrait with Hat"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.059h4sm",
                "entity_name": "The Canoeist's Luncheon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063ffm0",
                "entity_name": "The Funeral"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bwh71z",
                "entity_name": "Nude, Green Leaves and Bust"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02vyvyc",
                "entity_name": "Paris Street; Rainy Day"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05nbspq",
                "entity_name": "Oarsmen Rowing on the Yerres"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.062s1p9",
                "entity_name": "Gondola in Venice"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0gyc83g",
                "entity_name": "Couple Walking in the Trees"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0b6z0dn",
                "entity_name": "Rose Trellises in Giverny"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05ch12t",
                "entity_name": "Farmhouse in Provence"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09tzhb8",
                "entity_name": "Chasing Butterflies"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0598kd_",
                "entity_name": "Plum Brandy"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wdlm",
                "entity_name": "Portrait of Madame Augustine Roulin"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045t3vx",
                "entity_name": "Flood at Port-Marly"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.064jdky",
                "entity_name": "Nabis Landscape"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0773wwv",
                "entity_name": "Under the Bridge at Hampton Court"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "g.12396ws6",
                "entity_name": "Evening, Honfleur"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c1r70t",
                "entity_name": "Portrait of Ambroise Vollard"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4tzv4",
                "entity_name": "The Garden of the Tuileries on a Winter Afternoon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105wzcd",
                "entity_name": "The Skiff"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03qbcd4",
                "entity_name": "Day of the God (Mahana no Atua)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.052cyqr",
                "entity_name": "The Tuileries Gardens, Afternoon, Sun"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0bwgc7q",
                "entity_name": "Self-Portrait with Palette"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0449zrp",
                "entity_name": "The Barefoot Girl"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g4xf_c",
                "entity_name": "The Road to Versailles at Louveciennes"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0105x2n_",
                "entity_name": "The Piazza San Marco"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.051svl1",
                "entity_name": "Grey's Creek"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0598kdt",
                "entity_name": "Portrait of St\u00e9phane Mallarm\u00e9"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wcw2",
                "entity_name": "La Berceuse (Augustine Roulin)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09v9x3l",
                "entity_name": "The Fifer"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.063wfbp",
                "entity_name": "Schoolboy (Camille Roulin)"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n5vvp9",
                "entity_name": "The Cafe-Concert"
            }
        ]
    },
    {
        "question": "what kind of government does japan have now and in locations where Emanuel Lasker was born in?",
        "qid": "WebQTest-738_3ce332b703593e71708a5604865c5758_cwq",
        "source": "cwq",
        "entities": {
            "Japan": "m.03_3d",
            "Emanuel Lasker": "m.01kfm7"
        },
        "s_expression": "(AND (JOIN (R location.country.form_of_government) m.03_3d) (JOIN government.form_of_government.countries (JOIN location.location.people_born_here m.01kfm7)))",
        "actions": [
            "get_relations(m.03_3d)",
            "get_neighbors(m.03_3d,location.country.form_of_government)",
            "get_relations(m.01kfm7)",
            "get_neighbors(m.01kfm7,people.person.place_of_birth)",
            "get_relations(#1)",
            "get_neighbors(#1,location.country.form_of_government)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            }
        ]
    },
    {
        "question": "what parent industry do the auto industry and the industry in which union operates have in common?",
        "qid": "4301917006000_grailqa",
        "source": "grailqa",
        "entities": {
            "union": "m.054w78",
            "auto industry": "m.015smg"
        },
        "s_expression": "(AND business.industry (AND (JOIN (R business.industry.child_industry) (JOIN business.industry.trade_unions m.054w78)) (JOIN (R business.industry.child_industry) m.015smg)))",
        "actions": [
            "get_relations(m.054w78)",
            "get_neighbors(m.054w78,business.trade_union.industry)",
            "get_relations(#0)",
            "get_neighbors(#0,business.industry.child_industry)",
            "get_relations(m.015smg)",
            "get_neighbors(m.015smg,business.industry.child_industry)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0126b6d7",
                "entity_name": "Ballyclare Limited"
            }
        ]
    },
    {
        "question": "ronald bilius weasley destroyed an item belonging to which character with the ability of principles of flight?",
        "qid": "4302209001000_grailqa",
        "source": "grailqa",
        "entities": {
            "ronald bilius weasley": "m.0c8jw",
            "principles of flight": "m.01515d"
        },
        "s_expression": "(AND fictional_universe.fictional_character (AND (JOIN fictional_universe.fictional_character.has_possessed (JOIN fictional_universe.fictional_object.destroyer m.0c8jw)) (JOIN fictional_universe.fictional_character.powers_or_abilities m.01515d)))",
        "actions": [
            "get_relations(m.0c8jw)",
            "get_neighbors(m.0c8jw,fictional_universe.fictional_object_destroyer.fictional_objects_destroyed)",
            "get_relations(#0)",
            "get_neighbors(#0,fictional_universe.fictional_object.owner)",
            "get_relations(m.01515d)",
            "get_neighbors(m.01515d,fictional_universe.character_powers.characters_with_this_ability)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0c8lv",
                "entity_name": "Lord Voldemort"
            }
        ]
    },
    {
        "question": "which neoplasm treatments come with the side effects of facial redness?",
        "qid": "4301182001000_grailqa",
        "source": "grailqa",
        "entities": {
            "Neoplasm": "m.07p3l",
            "Facial Redness": "m.07t7mr3"
        },
        "s_expression": "(AND medicine.medical_treatment (AND (JOIN medicine.medical_treatment.side_effects (JOIN medicine.symptom.parent_symptom m.07t7mr3)) (JOIN medicine.medical_treatment.used_to_treat m.07p3l)))",
        "actions": [
            "get_relations(m.07t7mr3)",
            "get_neighbors(m.07t7mr3,medicine.symptom.includes_symptoms)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.symptom.side_effect_of)",
            "get_relations(m.07p3l)",
            "get_neighbors(m.07p3l,medicine.disease.treatments)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.02m3m3",
                "entity_name": "Prednisone"
            }
        ]
    },
    {
        "question": "What was the cause of death for the lyricist for \"[Intro]\"?",
        "qid": "WebQTrn-3557_3bfcb2a1e9b7ffe135387fb2276bbc5e_cwq",
        "source": "cwq",
        "entities": {
            "Drug overdose": "m.01tf_6",
            "[intro]": "m.0_jk4hr"
        },
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) (JOIN music.lyricist.lyrics_written m.0_jk4hr)) (JOIN medicine.disease.parent_disease m.01tf_6))",
        "actions": [
            "get_relations(m.0_jk4hr)",
            "get_neighbors(m.0_jk4hr,music.composition.lyricist)",
            "get_relations(#0)",
            "get_neighbors(#0,people.deceased_person.cause_of_death)",
            "get_relations(m.01tf_6)",
            "get_neighbors(m.01tf_6,medicine.disease.includes_diseases)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.02kp1qn",
                "answer_type": "Entity",
                "entity_name": "Heroin overdose"
            }
        ]
    },
    {
        "question": "in abrahamic faiths, who is the founding figure of christmas eve?",
        "qid": "4302278003000_grailqa",
        "source": "grailqa",
        "entities": {
            "Christmas Eve": "m.014r1s",
            "abrahamic faiths": "m.0f_h6"
        },
        "s_expression": "(AND religion.founding_figure (JOIN (R religion.religion.founding_figures) (AND (JOIN (R time.holiday.featured_in_religions) m.014r1s) (JOIN religion.religion.is_part_of m.0f_h6))))",
        "actions": [
            "get_relations(m.014r1s)",
            "get_neighbors(m.014r1s,time.holiday.featured_in_religions)",
            "get_relations(m.0f_h6)",
            "get_neighbors(m.0f_h6,religion.religion.includes)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,religion.religion.founding_figures)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.060nc",
                "entity_name": "Paul the Apostle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.045m1_",
                "entity_name": "Jesus Christ"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.071wp",
                "entity_name": "Saint Peter"
            }
        ]
    },
    {
        "question": "in the games of the i olympiad and other olympic games in los angeles, california, which olympic event was officially contested?",
        "qid": "4300161009000_grailqa",
        "source": "grailqa",
        "entities": {
            "los angeles, california": "m.030qb3t",
            "games of the i olympiad": "m.0c_tl"
        },
        "s_expression": "(AND olympics.olympic_event (AND (JOIN olympics.olympic_event.olympic_games_contested (JOIN olympics.olympic_games.host_city m.030qb3t)) (JOIN olympics.olympic_event.olympic_games_contested m.0c_tl)))",
        "actions": [
            "get_relations(m.030qb3t)",
            "get_neighbors(m.030qb3t,olympics.olympic_host_city.olympics_hosted)",
            "get_relations(#0)",
            "get_neighbors(#0,olympics.olympic_games.events)",
            "get_relations(m.0c_tl)",
            "get_neighbors(m.0c_tl,olympics.olympic_games.events)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.07gnx9y",
                "entity_name": "Men's 300m Free Rifle, 3 Positions"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2_w",
                "entity_name": "Men's Track cycling, Sprint individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30n",
                "entity_name": "Men's Road cycling, individual road race"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3cl",
                "entity_name": "Men's Shot put"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2pc",
                "entity_name": "Men's Discus throw"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk29t",
                "entity_name": "Men's Parallel bars"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2cj",
                "entity_name": "Men's Long jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2hl",
                "entity_name": "Men's Athletics, 100m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2lq",
                "entity_name": "Men's Foil individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2mz",
                "entity_name": "Men's Marathon"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qm",
                "entity_name": "Men's Athletics, 400m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2qs",
                "entity_name": "Men's 100m freestyle"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2rd",
                "entity_name": "Men's Pole vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2x7",
                "entity_name": "Men's Pommel horse"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2xq",
                "entity_name": "Men's Sabre individual"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk2zl",
                "entity_name": "Men's Horizontal bar"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk30h",
                "entity_name": "Men's Athletics, 110m hurdles"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32_",
                "entity_name": "Men's Triple jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk32p",
                "entity_name": "Men's High jump"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk39d",
                "entity_name": "Men's Vault"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3b5",
                "entity_name": "Men's Athletics, 800m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3kp",
                "entity_name": "Men's Rings"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.04fk3n5",
                "entity_name": "Men's Athletics, 1500m"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07nngyv",
                "entity_name": "Rope climbing"
            }
        ]
    },
    {
        "question": "When was the last championship won by the team that won the 1989 NBA Finals championship?",
        "qid": "WebQTest-895_af852d749fa08112dff2ee39c1658014_cwq",
        "source": "cwq",
        "entities": {
            "1989 NBA Finals": "m.08x9tm"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.championships m.08x9tm)) time.event.start_date)",
        "actions": [
            "get_relations(m.08x9tm)",
            "get_neighbors(m.08x9tm,sports.sports_championship_event.champion)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.07p0zz",
                "answer_type": "Entity",
                "entity_name": "2004 NBA Finals"
            }
        ]
    },
    {
        "question": "of tropical cyclones that affected andaman and nicobar islands, which are in the same category with tropical storm ivan?",
        "qid": "4300198009000_grailqa",
        "source": "grailqa",
        "entities": {
            "tropical storm ivan": "m.03tn0n",
            "Andaman and Nicobar Islands": "m.0cvvc"
        },
        "s_expression": "(AND meteorology.tropical_cyclone (AND (JOIN (R meteorology.tropical_cyclone_category.tropical_cyclones) (JOIN (R meteorology.tropical_cyclone.category) m.03tn0n)) (JOIN meteorology.tropical_cyclone.affected_areas m.0cvvc)))",
        "actions": [
            "get_relations(m.03tn0n)",
            "get_neighbors(m.03tn0n,meteorology.tropical_cyclone.category)",
            "get_relations(#0)",
            "get_neighbors(#0,meteorology.tropical_cyclone_category.tropical_cyclones)",
            "get_relations(m.0cvvc)",
            "get_neighbors(m.0cvvc,meteorology.cyclone_affected_area.cyclones)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0y52xn7",
                "entity_name": "Cyclone Phailin"
            }
        ]
    },
    {
        "question": "Of the times the Baltimore Ravens won the Super Bowl, which event ended first?",
        "qid": "WebQTrn-2136_0f56b49cc2257ee6ecffc17f5a53198c_cwq",
        "source": "cwq",
        "entities": {
            "Baltimore Ravens": "m.01ct6",
            "Super Bowl": "m.06x5s"
        },
        "s_expression": "(ARGMIN (AND (JOIN (R sports.sports_team.championships) m.01ct6) (JOIN sports.sports_championship_event.championship m.06x5s)) time.event.end_date)",
        "actions": [
            "get_relations(m.01ct6)",
            "get_neighbors(m.01ct6,sports.sports_team.championships)",
            "get_relations(m.06x5s)",
            "get_neighbors(m.06x5s,sports.sports_championship.events)",
            "intersection(#0,#1)",
            "get_attributes(#2)",
            "argmin(#2,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.076yq",
                "answer_type": "Entity",
                "entity_name": "Super Bowl XXXV"
            }
        ]
    },
    {
        "question": "who made the discovery of both the oxygen and some halogen element?",
        "qid": "485000200_graphquestions",
        "source": "graphquestions",
        "entities": {
            "Oxygen": "m.025s6bf",
            "Halogen": "m.03gcp"
        },
        "s_expression": "(AND chemistry.element_discoverer (AND (JOIN (R chemistry.chemical_element.discoverer) (JOIN (R chemistry.chemical_series.elements) m.03gcp)) (JOIN (R chemistry.chemical_element.discoverer) m.025s6bf)))",
        "actions": [
            "get_relations(m.03gcp)",
            "get_neighbors(m.03gcp,chemistry.chemical_series.elements)",
            "get_relations(#0)",
            "get_neighbors(#0,chemistry.chemical_element.discoverer)",
            "get_relations(m.025s6bf)",
            "get_neighbors(m.025s6bf,chemistry.chemical_element.discoverer)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.0g68n",
                "entity_name": "Carl Wilhelm Scheele"
            }
        ]
    },
    {
        "question": "What was the last championship won by the team owned by James D. Stern?",
        "qid": "WebQTrn-1220_e8b7b55c54a4b3523a2a3036bd255b1a_cwq",
        "source": "cwq",
        "entities": {
            "James D. Stern": "m.0ggb8tz"
        },
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) (JOIN sports.professional_sports_team.owner_s m.0ggb8tz)) time.event.start_date)",
        "actions": [
            "get_relations(m.0ggb8tz)",
            "get_neighbors(m.0ggb8tz,sports.sports_team_owner.teams_owned)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmax(#1,time.event.start_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04zt01",
                "answer_type": "Entity",
                "entity_name": "1998 NBA Finals"
            }
        ]
    },
    {
        "question": "what kind of content do the producer of weekend edition sunday and wpr produce?",
        "qid": "4300832002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Weekend Edition Sunday": "m.0t4t10s",
            "wpr": "m.01_8ym"
        },
        "s_expression": "(AND broadcast.content (AND (JOIN broadcast.content.producer (JOIN broadcast.producer.produces m.0t4t10s)) (JOIN broadcast.content.producer m.01_8ym)))",
        "actions": [
            "get_relations(m.0t4t10s)",
            "get_neighbors(m.0t4t10s,broadcast.content.producer)",
            "get_relations(#0)",
            "get_neighbors(#0,broadcast.producer.produces)",
            "get_relations(m.01_8ym)",
            "get_neighbors(m.01_8ym,broadcast.producer.produces)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03fx9_c",
                "entity_name": "To the Best of Our Knowledge"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03d7ss0",
                "entity_name": "PRI: Whad'Ya Know? - All the News that Isn't"
            }
        ]
    },
    {
        "question": "Who are the children of Ike and the composer of Sweet Rhode Island Red?",
        "qid": "WebQTest-1655_477d34f3e6ba390fa40e05943f90fa51_cwq",
        "source": "cwq",
        "entities": {
            "ike": "m.0dbzg",
            "Sweet Rhode Island Red": "m.0zl81ml"
        },
        "s_expression": "(AND (JOIN (R people.person.children) (JOIN music.composer.compositions m.0zl81ml)) (JOIN people.person.parents m.0dbzg))",
        "actions": [
            "get_relations(m.0zl81ml)",
            "get_neighbors(m.0zl81ml,music.composition.composer)",
            "get_relations(#0)",
            "get_neighbors(#0,people.person.children)",
            "get_relations(m.0dbzg)",
            "get_neighbors(m.0dbzg,people.person.children)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_argument": "m.0ggl36p",
                "answer_type": "Entity",
                "entity_name": "Ronnie Turner"
            },
            {
                "answer_argument": "m.0j5dh53",
                "answer_type": "Entity",
                "entity_name": "Raymond Craig Turner"
            }
        ]
    },
    {
        "question": "what is the total number of infectious diseases that can be transmitted by a white faced monkey?",
        "qid": "4303160013000_grailqa",
        "source": "grailqa",
        "entities": {
            "white faced monkey": "m.02h411"
        },
        "s_expression": "(COUNT (AND medicine.infectious_disease (JOIN (R medicine.type_of_infectious_agent.diseases) (JOIN (R medicine.infectious_disease.infectious_agent_type) (JOIN (R medicine.vector_of_disease.disease) m.02h411)))))",
        "actions": [
            "get_relations(m.02h411)",
            "get_neighbors(m.02h411,medicine.vector_of_disease.disease)",
            "get_relations(#0)",
            "get_neighbors(#0,medicine.infectious_disease.infectious_agent_type)",
            "get_relations(#1)",
            "get_neighbors(#1,medicine.type_of_infectious_agent.diseases)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "30"
            }
        ]
    },
    {
        "question": "what other rocket did the manufacturer of vanguard and titan iiib create?",
        "qid": "4300129002000_grailqa",
        "source": "grailqa",
        "entities": {
            "Vanguard": "m.03l2zj",
            "Titan IIIB": "m.03g6ts"
        },
        "s_expression": "(AND spaceflight.rocket (JOIN spaceflight.rocket.manufacturer (AND (JOIN (R spaceflight.rocket.manufacturer) m.03l2zj) (JOIN spaceflight.rocket_manufacturer.rockets_manufactured m.03g6ts))))",
        "actions": [
            "get_relations(m.03l2zj)",
            "get_neighbors(m.03l2zj,spaceflight.rocket.manufacturer)",
            "get_relations(m.03g6ts)",
            "get_neighbors(m.03g6ts,spaceflight.rocket.manufacturer)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,spaceflight.rocket_manufacturer.rockets_manufactured)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.03g3wf",
                "entity_name": "LGM-25C Titan II"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03g8vl",
                "entity_name": "Titan IIIC"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01bbqh",
                "entity_name": "HGM-25A Titan I"
            }
        ]
    },
    {
        "question": "what storage type is supported by sony dsc-p72 and those with color filter array of bayer?",
        "qid": "4302099012000_grailqa",
        "source": "grailqa",
        "entities": {
            "Sony DSC-P72": "m.03q2qsb",
            "bayer": "m.02r8js"
        },
        "s_expression": "(AND digicams.camera_storage_type (AND (JOIN digicams.camera_storage_type.compatible_cameras m.03q2qsb) (JOIN (R digicams.digital_camera.supported_storage_types) (JOIN digicams.digital_camera.color_filter_array_type m.02r8js))))",
        "actions": [
            "get_relations(m.03q2qsb)",
            "get_neighbors(m.03q2qsb,digicams.digital_camera.supported_storage_types)",
            "get_relations(m.02r8js)",
            "get_neighbors(m.02r8js,digicams.camera_color_filter_array_type.cameras)",
            "get_relations(#1)",
            "get_neighbors(#1,digicams.digital_camera.supported_storage_types)",
            "intersection(#0,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01730t",
                "entity_name": "Memory Stick"
            }
        ]
    },
    {
        "question": "otcl and o'haskell have how many programming language paradigms?",
        "qid": "3205793015000_grailqa",
        "source": "grailqa",
        "entities": {
            "OTcl": "m.02pp7t7",
            "O'Haskell": "m.03t8dz"
        },
        "s_expression": "(COUNT (AND computer.programming_language_paradigm (AND (JOIN (R computer.programming_language.language_paradigms) m.02pp7t7) (JOIN computer.programming_language_paradigm.languages m.03t8dz))))",
        "actions": [
            "get_relations(m.02pp7t7)",
            "get_neighbors(m.02pp7t7,computer.programming_language.language_paradigms)",
            "get_relations(m.03t8dz)",
            "get_neighbors(m.03t8dz,computer.programming_language.language_paradigms)",
            "intersection(#0,#1)",
            "count(#2)"
        ],
        "answer": [
            {
                "answer_type": "Value",
                "answer_argument": "1"
            }
        ]
    },
    {
        "question": "When did the sports team whose arena is Old Trafford first win a trophy?",
        "qid": "WebQTrn-1018_593632bf477d73bb33a311728d6e6f29_cwq",
        "source": "cwq",
        "entities": {
            "Old Trafford": "m.030lpl"
        },
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) (JOIN sports.sports_team.arena_stadium m.030lpl)) time.event.end_date)",
        "actions": [
            "get_relations(m.030lpl)",
            "get_neighbors(m.030lpl,sports.sports_facility.teams)",
            "get_relations(#0)",
            "get_neighbors(#0,sports.sports_team.championships)",
            "get_attributes(#1)",
            "argmin(#1,time.event.end_date)"
        ],
        "answer": [
            {
                "answer_argument": "m.04gk9y8",
                "answer_type": "Entity",
                "entity_name": "1976\u201377 FA Cup"
            }
        ]
    },
    {
        "question": "which martial art has the same category as kuk sool won and has grappling?",
        "qid": "4301064007000_grailqa",
        "source": "grailqa",
        "entities": {
            "Kuk Sool Won": "m.055rn5",
            "Grappling": "m.039cp"
        },
        "s_expression": "(AND martial_arts.martial_art (AND (JOIN martial_arts.martial_art.category (JOIN (R martial_arts.martial_art.category) m.055rn5)) (JOIN (R martial_arts.martial_art_category.martial_arts) m.039cp)))",
        "actions": [
            "get_relations(m.055rn5)",
            "get_neighbors(m.055rn5,martial_arts.martial_art.category)",
            "get_relations(#0)",
            "get_neighbors(#0,martial_arts.martial_art_category.martial_arts)",
            "get_relations(m.039cp)",
            "get_neighbors(m.039cp,martial_arts.martial_art_category.martial_arts)",
            "intersection(#1,#2)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.01tm7f",
                "entity_name": "Kajukenbo"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.03bs3p",
                "entity_name": "Sanshou"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.041d65",
                "entity_name": "Vovinam"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.07k4r",
                "entity_name": "Tai chi"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01vqp5",
                "entity_name": "Systema"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.09h901",
                "entity_name": "Shid\u014dkan Karate"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0hbj9",
                "entity_name": "Hapkido"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.01qcyb",
                "entity_name": "Kalaripayattu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.02618d8",
                "entity_name": "Russian All-Round Fighting"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.048yh",
                "entity_name": "Krav Maga"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.05b65c",
                "entity_name": "Hwa Rang Do"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.061px",
                "entity_name": "Pankration"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06jm_r",
                "entity_name": "Bartitsu"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.06k44z",
                "entity_name": "Modern Arnis"
            },
            {
                "answer_type": "Entity",
                "answer_argument": "m.0n18n",
                "entity_name": "Dait\u014d-ry\u016b Aiki-j\u016bjutsu"
            }
        ]
    },
    {
        "question": "wii ware, which is developed by telltale games, was released where?",
        "qid": "4301141005000_grailqa",
        "source": "grailqa",
        "entities": {
            "wii ware": "m.03hfyj6",
            "Telltale Games": "m.05qshs"
        },
        "s_expression": "(AND cvg.computer_game_region (JOIN (R cvg.game_version.regions) (AND (JOIN cvg.game_version.distributed_through m.03hfyj6) (JOIN (R cvg.cvg_developer.game_versions_developed) m.05qshs))))",
        "actions": [
            "get_relations(m.03hfyj6)",
            "get_neighbors(m.03hfyj6,cvg.computer_game_distribution_system.games_distributed)",
            "get_relations(m.05qshs)",
            "get_neighbors(m.05qshs,cvg.cvg_developer.game_versions_developed)",
            "intersection(#0,#1)",
            "get_relations(#2)",
            "get_neighbors(#2,cvg.game_version.regions)"
        ],
        "answer": [
            {
                "answer_type": "Entity",
                "answer_argument": "m.075g54v",
                "entity_name": "Wii/DS NA"
            }
        ]
    }
]